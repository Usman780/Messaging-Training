
@{
    ViewBag.Title = "addComment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model TrainingTracker.Models.User_Task
@using TrainingTracker.HelpingClasses
@using TrainingTracker.Models
@using TrainingTracker.BL;
@using RusticiSoftware.HostedEngine.Client;

@{
    CheckAuthenticationDTO logedinuser = General_Purpose.CheckAuthentication();
    Company Company = new CompanyBL().getCompanyById(Convert.ToInt32(logedinuser.Company));

    string setupVar = "Set-Up";
    string tempVar = "Templates";
    if (logedinuser.Role == 3)
    {
        setupVar = "Task Set-Up";
        tempVar = "Task Templates";
    }
}


<style>

    text {
        font-size: 1.2em;
    }

    .dataTable thead .sorting:after, .dataTable thead .sorting:before, .dataTable thead .sorting_asc:after, .dataTable thead .sorting_desc:after {
        display: block !important;
    }

    .dropdown-menu-right {
        left: 0;
        right: 0;
    }

    #info th {
        width: 40% !important;
    }

    #info td {
        width: 60% !important;
    }

    #backbtn {
        margin-left: 20px;
        margin-bottom: 5px;
    }

    .select2-selection--single .select2-selection__arrow:after {
        content: '\e9c5';
        font-family: 'Icomoon';
        display: inline-block;
        position: absolute;
        top: 50%;
        right: 0;
        margin-top: -8px;
        margin-right: 12px !important;
        font-size: 16px;
        line-height: 1;
        color: inherit;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }

    .filediv:hover {
        background-color: #F5F5F5;
    }

    .frehover:hover {
        background-color: #F5F5F5;
    }

    .dataTables_filter {
        display: none;
    }

    /* Wajeeh custom css for selecting location starts */

    .my-custom-scrollbar {
        position: relative;
        height: 450px;
        overflow: auto;
    }

    .table-wrapper-scroll-y {
        display: block;
    }

    .iconStyle {
        font-size: xx-large;
        margin-right: 2px;
    }

    /* Wajeeh custom css for selecting location ends */
</style>


@{
    User udiv = new UserBL().getUsersById(Convert.ToInt32(Model.UserID));
}
@{
    if (ViewBag.isModal == "-10" && ViewBag.DxM == "nvgh")
    {
        <!--Bread Crumb line-->
        <div class="bg-white">
            <div class="breadcrumb-line">
                <a class="breadcrumb-elements-toggle"><i class="icon-menu-open"></i></a>
                <ul class="breadcrumb">
                    <li class="active"><a href="@ProjectVaraiables.DocM_URL"><i class="icon-home2 position-left"></i> Document Manager</a></li>
                    <li>@Model.Task.Name</li>

                </ul>
            </div>
        </div>
        <!--Bread Crumb line-->
        <br />
        <a id="backbtn" class="btn btn-sm bg-primary" href="@ProjectVaraiables.DocM_URL">Back</a>
    }
    else if (ViewBag.isModal == "5ck")
    {
        <!--Bread Crumb line-->
        <div class="bg-white">
            <div class="breadcrumb-line">
                <a class="breadcrumb-elements-toggle"><i class="icon-menu-open"></i></a>
                <ul class="breadcrumb">
                    <li><a href="@Url.Action("Index","Auth")"><i class="icon-home2 position-left"></i> Home</a></li>
                    <li class="active">Assignments</li>
                    <li class="active"><a href="@Url.Action("ActiveTickets", "Task")">Active To Do</a></li>
                    <li class="active">@Model.Task.Name</li>
                </ul>
            </div>
        </div>
        <!--Bread Crumb line-->
        <br />
        <a id="backbtn" class="btn btn-sm bg-primary" href="@Url.Action("ActiveTickets", "Task")">Back</a>


    }
    else if (ViewBag.way == "Manager")
    {
        <!--Bread Crumb line-->
        <div class="bg-white">
            <div class="breadcrumb-line">
                <a class="breadcrumb-elements-toggle"><i class="icon-menu-open"></i></a>
                <ul class="breadcrumb">
                    <li><a href="@Url.Action("Index","Auth")"><i class="icon-home2 position-left"></i> Home</a></li>
                    <li class="active">Set-Up</li>
                    <li class="active"><a href="@Url.Action("DisplayEmployee","Utilities" )">Employees</a></li>
                    <li><a href="@Url.Action("UpdateEmployee", "utilities", new { sid = ViewBag.sid, way = "Manager" })">Update Employee</a></li>
                    <li class="active">@Model.Task.Name</li>

                </ul>
            </div>
        </div>
        <!--Bread Crumb line-->
        <br />
        <a id="backbtn" class="btn btn-sm bg-primary" href="@Url.Action("UpdateEmployee", "utilities", new { sid = ViewBag.sid, way = "Manager" })">Back</a>


    }
    //else if (ViewBag.department != "")
    else if (ViewBag.way == "Department")
    {
        <!--Bread Crumb line-->
        <div class="bg-white">
            <div class="breadcrumb-line">
                <a class="breadcrumb-elements-toggle"><i class="icon-menu-open"></i></a>
                <ul class="breadcrumb">
                    <li><a href="@Url.Action("Index","Auth")"><i class="icon-home2 position-left"></i> Home</a></li>
                    <li class="active">Set-Up</li>
                    <li><a href="@Url.Action("displayDivision","Utilities")">Division</a></li>
                    <li><a href="@Url.Action("displayDivisionDetails","Utilities" , new { sid =  General_Purpose.EncryptId(Convert.ToInt32(udiv.Department.Division.Id)), page1="Division"})">@udiv.Department.Division.Name</a></li>
                    <li><a href="@Url.Action("displayDepartmentDetails","Utilities" , new { sid =General_Purpose.EncryptId(Convert.ToInt32(udiv.Department.Id))  })">@udiv.Department.Name</a></li>
                    <li><a href="@Url.Action("UpdateEmployee", "utilities", new { sid = ViewBag.sid, department = ViewBag.department, way = "Department" })">Update Employee</a></li>
                    <li class="active">@Model.Task.Name</li>
                </ul>
            </div>
        </div>
        <!--Bread Crumb line-->
        <br />
        <a id="backbtn" class="btn btn-sm bg-primary" href="@Url.Action("UpdateEmployee", "utilities", new { sid = ViewBag.sid, department = ViewBag.department, way = "Department" })">Back</a>


    }
    else if (ViewBag.way == "EmpAssignTask")
    {
        <!--Bread Crumb line-->
        <div class="bg-white">
            <div class="breadcrumb-line">
                <a class="breadcrumb-elements-toggle"><i class="icon-menu-open"></i></a>
                <ul class="breadcrumb">
                    <li><a href="@Url.Action("Index","Auth")"><i class="icon-home2 position-left"></i> Home</a></li>
                    <li class="active">Assignments</li>
                    <li class="active"><a href="@Url.Action("displayEmployeeTask", "Trainee")">Tasks</a></li>
                    <li class="active">@Model.Task.Name</li>
                </ul>
            </div>
        </div>
        <!--Bread Crumb line-->
        <br />
        <a id="backbtn" class="btn btn-sm bg-primary" href="@Url.Action("displayEmployeeTask", "Trainee")">Back</a>


    }
    else if (ViewBag.way == "0")
    {
        <!--Bread Crumb line-->
        <div class="bg-white">
            <div class="breadcrumb-line">
                <a class="breadcrumb-elements-toggle"><i class="icon-menu-open"></i></a>
                <ul class="breadcrumb">
                    <li><a href="@Url.Action("Index","Auth")"><i class="icon-home2 position-left"></i> Home</a></li>
                    <li class="active"><a href="@Url.Action("UpdateEmployee", "utilities", new { sid = ViewBag.siid, way = "0" })">Update Profile</a></li>
                    <li class="active">@Model.Task.Name</li>
                </ul>
            </div>
        </div>
        <!--Bread Crumb line-->
        <br />
        <a id="backbtn" class="btn btn-sm bg-primary" href="@Url.Action("UpdateEmployee", "utilities", new { sid = ViewBag.siid, way = "0" })">Back</a>

    }
    else if (ViewBag.isModal == "1" || ViewBag.isModal == "01")
    {
        <!--Bread Crumb line-->
        <div class="bg-white">
            <div class="breadcrumb-line">
                <a class="breadcrumb-elements-toggle"><i class="icon-menu-open"></i></a>
                <ul class="breadcrumb">
                    <li><a href="@Url.Action("Index","Auth")"><i class="icon-home2 position-left"></i> Home</a></li>
                    <li class="active">@Model.Task.Name</li>
                </ul>
            </div>
        </div>
        <!--Bread Crumb line-->
        <br />
        <a id="backbtn" class="btn btn-sm bg-primary" href="@Url.Action("Index", "Auth")">Back</a>

    }
    else if (ViewBag.template != "")
    {
        <!--Bread Crumb line-->
        <div class="bg-white">
            <div class="breadcrumb-line">
                <a class="breadcrumb-elements-toggle"><i class="icon-menu-open"></i></a>
                <ul class="breadcrumb">
                    <li><a href="@Url.Action("Index","Auth")"><i class="icon-home2 position-left"></i> Home</a></li>
                    <li class="active">@setupVar</li>
                    <li class="active"><a href="@Url.Action("Templates", "Task")">@tempVar</a></li>
                    <li class="active">@Model.Task.Name</li>
                </ul>
            </div>
        </div>
        <!--Bread Crumb line-->
        <br />
        @*<a id="backbtn" class="btn btn-sm bg-primary" href="@Url.Action("Templates", "Task")">Back</a>*@

    }
    else if (ViewBag.way == "CompEmpAssignTask")
    {
        <!--Bread Crumb line-->
        <div class="bg-white">
            <div class="breadcrumb-line">
                <a class="breadcrumb-elements-toggle"><i class="icon-menu-open"></i></a>
                <ul class="breadcrumb">
                    <li><a href="@Url.Action("Index","Auth")"><i class="icon-home2 position-left"></i> Home</a></li>
                    <li class="active">Completed Assignments</li>
                    <li class="active"><a href="@Url.Action("DisplayCompletedEmployeeTask", "Trainee")">Tasks</a></li>
                    <li class="active">@Model.Task.Name</li>
                </ul>
            </div>
        </div>
        <!--Bread Crumb line-->
        <br />
        <a id="backbtn" class="btn btn-sm bg-primary" href="@Url.Action("DisplayCompletedEmployeeTask", "Trainee")">Back</a>
    }
    else if (ViewBag.way == "12")
    {
        <!--Bread Crumb line-->
        <div class="bg-white">
            <div class="breadcrumb-line">
                <a class="breadcrumb-elements-toggle"><i class="icon-menu-open"></i></a>
                <ul class="breadcrumb">
                    <li><a href="@Url.Action("Index","Auth")"><i class="icon-home2 position-left"></i> Home</a></li>
                    <li class="active">Completed Assignments</li>
                    <li class="active"><a href="@Url.Action("Completedassignments", "Task")">Employee Tasks</a></li>
                    <li class="active">@Model.Task.Name</li>
                </ul>
            </div>
        </div>
        <!--Bread Crumb line-->
        <br />
        <a id="backbtn" class="btn btn-sm bg-primary" href="@Url.Action("Completedassignments", "Task")">Back</a>
    }
    else if (ViewBag.way == "setupDep")
    {
        <!--Bread Crumb line-->
        <div class="bg-white">
            <div class="breadcrumb-line">
                <a class="breadcrumb-elements-toggle"><i class="icon-menu-open"></i></a>
                <ul class="breadcrumb">
                    <li><a href="@Url.Action("Index","Auth")"><i class="icon-home2 position-left"></i> Home</a></li>
                    <li class="active">Set-Up</li>
                    <li><a href="@Url.Action("displayDepartment","Utilities")">Departments</a></li>
                    <li><a href="@Url.Action("displayDepartmentDetails","Utilities" , new { sid =General_Purpose.EncryptId(Convert.ToInt32(udiv.Department.Id)), way = ViewBag.way})">@udiv.Department.Name</a></li>
                    <li><a href="@Url.Action("UpdateEmployee", "utilities", new { sid = ViewBag.sid, department = ViewBag.department, way = ViewBag.way })">Update Employee</a></li>
                    <li class="active">@Model.Task.Name</li>
                </ul>
            </div>
        </div>
        <!--Bread Crumb line-->
        <br />
        <a id="backbtn" class="btn btn-sm bg-primary" href="@Url.Action("UpdateEmployee", "utilities", new { sid = ViewBag.sid, department = ViewBag.department, way = ViewBag.way })">Back</a>

    }
    else if (ViewBag.isModal == "3") //true when task assigned to another within the taskdetails page
    {
        <!--Bread Crumb line-->
        <div class="bg-white">
            <div class="breadcrumb-line">
                <a class="breadcrumb-elements-toggle"><i class="icon-menu-open"></i></a>
                <ul class="breadcrumb">
                    <li><a href="@Url.Action("Index","Auth")"><i class="icon-home2 position-left"></i> Home</a></li>
                    <li class="active">@Model.Task.Name</li>
                </ul>
            </div>
        </div>
        <!--Bread Crumb line-->
        <br />

    }
    else if (ViewBag.way == "Structure")
    {
        <!--Bread Crumb line-->
        <div class="bg-white">
            <div class="breadcrumb-line">
                <a class="breadcrumb-elements-toggle"><i class="icon-menu-open"></i></a>
                <ul class="breadcrumb">
                    <li><a href="@Url.Action("Index","Auth")"><i class="icon-home2 position-left"></i> Home</a></li>
                    <li><a href="@Url.Action("ViewStructure","OrgStructure")">@Company.Name Structure</a></li>
                    <li><a href="@Url.Action("UpdateEmployee", "utilities", new { sid = ViewBag.sid, department = ViewBag.department, way = ViewBag.way })">Update Employee</a></li>
                    <li class="active">@Model.Task.Name</li>
                </ul>
            </div>
        </div>
        <!--Bread Crumb line-->
        <br />
        <a id="backbtn" class="btn btn-sm bg-primary" href="@Url.Action("UpdateEmployee", "utilities", new { sid = ViewBag.sid, department = ViewBag.department, way = ViewBag.way })">Back</a>

    }
    else
    {
        if (ViewBag.DivDepID == "")
        {
            <!--Bread Crumb line-->
            <div class="bg-white">
                <div class="breadcrumb-line">
                    <a class="breadcrumb-elements-toggle"><i class="icon-menu-open"></i></a>
                    <ul class="breadcrumb">
                        <li><a href="@Url.Action("Index","Auth")"><i class="icon-home2 position-left"></i> Home</a></li>
                        <li class="active">Assignments</li>
                        <li class="active"><a href="@Url.Action("assignments", "Task")">Employee Tasks</a></li>
                        <li class="active">@Model.Task.Name</li>
                    </ul>
                </div>
            </div>
            <!--Bread Crumb line-->
            <br />
            <a id="backbtn" class="btn btn-sm bg-primary" href="@Url.Action("assignments", "Task")">Back</a>

        }
        else
        {
            <!--Bread Crumb line-->
            <div class="bg-white">
                <div class="breadcrumb-line">
                    <a class="breadcrumb-elements-toggle"><i class="icon-menu-open"></i></a>
                    <ul class="breadcrumb">
                        <li><a href="@Url.Action("Index","Auth")"><i class="icon-home2 position-left"></i> Home</a></li>
                        <li><a href="@Url.Action("assignments", "Task", new { sid = ViewBag.Id, DivDepID = ViewBag.DivDepID })">Department Tasks</a></li>
                        <li class="active">@Model.Task.Name</li>
                    </ul>
                </div>
            </div>
            <!--Bread Crumb line-->
            <br />
            <a id="backbtn" class="btn btn-sm bg-primary" href="@Url.Action("assignments", "Task", new { sid = ViewBag.Id, DivDepID = ViewBag.DivDepID })">Back</a>

        }

    }
}

<div id="ReminderModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form class="form-horizontal" novalidate method="post" action="@Url.Action("SetReminder", "Task")">

                <input type="hidden" name="way" value="@ViewBag.way" />
                <input type="hidden" name="isModal" value="@ViewBag.isModal" />
                <input type="hidden" name="department" value="@ViewBag.department" />
                <input type="hidden" name="sid" value="@ViewBag.sid" />
                <input type="hidden" name="v" value="@ViewBag.v" />
                <input type="hidden" name="tskId" id="tskId" value="@Model.Id" />
                <input type="hidden" name="DivDepID" id="DivDepID" value="@ViewBag.DivDepID" />


                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">Set Reminder</h4>
                </div>
                <div class="modal-body">



                    @*Set Reminder  Divs Start *@

                    <div class="form-group col-md-12" id="Remindertype">
                        <label class="control-label">Reminder Type</label>
                        <select class="select" id="Reminder" onchange="Showremindertypes()" required>
                            @*<option selected value="@ViewBag.currentStatus">@General_Purpose.getStatusValue((int)ViewBag.currentStatus)</option>*@
                            <option value="">Select Type</option>
                            @if (ViewBag.DailyRem == 1)
                            {

                                if (ViewBag.BeforeDDateReminder == null)
                                {
                                    <option value="BeforeDDayReminder">Set Reminder Before Due Date</option>
                                }

                                if (ViewBag.DailyReminder == null)
                                {
                                    <option value="DailyReminder">Daily, Weekly, Monthly Reminder</option>
                                }



                            }
                        </select>

                    </div>
                    <div class="form-group col-md-12" id="DReminder">

                        <label class="control-label">Reminder :</label>
                        <select class="select" name="DReminder" onchange="SetDD()" id="DailyReminder">
                            @*<option selected value="@ViewBag.currentStatus">@General_Purpose.getStatusValue((int)ViewBag.currentStatus)</option>*@
                            <option value="">Select Type</option>
                            @if (ViewBag.DailyRem == 1)
                            {
                                <option value="1">Daily</option>
                            }
                            @if (ViewBag.WeeklyRem == 1)
                            {
                                <option value="2">Weekly</option>
                            }
                            @if (ViewBag.MonthlyRem == 1)
                            {
                                <option value="3">Monthly</option>
                            }


                        </select>

                    </div>
                    <div class="form-group col-md-12" id="BeforeDDReminder">
                        <label class="control-label">Enter Days</label>
                        <input type="number" name="DaysBeforeDD" id="DaysBeforeDD" onkeyup="checkdays()" maxlength="150" class="form-control" />
                        <p class="text-danger" id="txt"></p>

                    </div>

                    @*Set Reminder  Divs End *@

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm  btn-default" data-dismiss="modal">Cancel</button>
                    <button type="submit" id="Rsubmit" class="btn btn-sm  bg-primary">Set</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="UpdateReminderModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form class="form-horizontal" novalidate method="post" action="@Url.Action("UpdateReminder", "Task")">

                <input type="hidden" name="way" value="@ViewBag.way" />
                <input type="hidden" name="isModal" value="@ViewBag.isModal" />
                <input type="hidden" name="department" value="@ViewBag.department" />
                <input type="hidden" name="sid" value="@ViewBag.sid" />
                <input type="hidden" name="v" value="@ViewBag.v" />
                <input type="hidden" name="tskId" id="tskId" value="@Model.Id" />
                <input type="hidden" name="DivDepID" id="DivDepID" value="@ViewBag.DivDepID" />


                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">Update Reminder</h4>
                </div>
                <div class="modal-body">

                    <div class="form-group col-md-12" id="UpdateRemindertype">
                        <label class="control-label">Update Reminder Type</label>
                        <select class="select" id="UpdateReminder" onchange="ShowUpremindertypes()" required>
                            @*<option selected value="@ViewBag.currentStatus">@General_Purpose.getStatusValue((int)ViewBag.currentStatus)</option>*@
                            <option value="">Select Type</option>
                            @if (ViewBag.DailyRem == 1)
                            {

                                if (ViewBag.BeforeDDateReminder != null)
                                {
                                    <option value="BeforeDDayReminder">Set Reminder Before Due Date</option>
                                }

                                if (ViewBag.DailyReminder != null)
                                {
                                    <option value="DailyReminder">Daily, Weekly, Monthly Reminder</option>
                                }



                            }
                        </select>

                    </div>
                    <div class="form-group col-md-12" id="UpdateDReminder">

                        <label class="control-label">Reminder :</label>
                        <select class="select" name="UpdateDReminder" id="UpdateDailyReminder" required>
                            @*<option selected value="@ViewBag.currentStatus">@General_Purpose.getStatusValue((int)ViewBag.currentStatus)</option>*@
                            <option value="">Select Type</option>
                            @if (ViewBag.DailyRem == 1)
                            {
                                if (ViewBag.DailyReminder == 1)
                                {
                                    <option value="1" selected>Daily</option>
                                }
                                else
                                {
                                    <option value="1">Daily</option>
                                }

                            }
                            @if (ViewBag.WeeklyRem == 1)
                            {
                                if (ViewBag.DailyReminder == 2)
                                {

                                    <option value="2" selected>Weekly</option>
                                }
                                else
                                {
                                    <option value="2">Weekly</option>
                                }
                            }
                            @if (@ViewBag.MonthlyRem == 1)
                            {
                                if (ViewBag.DailyReminder == 3)
                                {

                                    <option value="3" selected>Monthly</option>
                                }
                                else
                                {
                                    <option value="3">Monthly</option>
                                }
                            }


                        </select>

                    </div>
                    <div class="form-group col-md-12" id="UpdateBeforeDDReminder">
                        <label class="control-label">Enter Days</label>
                        <input type="number" min="1" name="UpdateDaysBeforeDD" id="UpdateDaysBeforeDD" onkeyup="Updatecheckdays()" value="@ViewBag.BeforeDDateReminder" class="form-control" />
                        <p class="text-danger" id="txt"></p>

                    </div>



                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm  btn-default" data-dismiss="modal">Cancel</button>
                    <button type="submit" id="Upsubmit" class="btn btn-sm  bg-primary">Update</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="OffReminderModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form class="form-horizontal" onsubmit="return validateOffReminder()" method="post" action="@Url.Action("OffReminder", "Task")">

                <input type="hidden" name="way" value="@ViewBag.way" />
                <input type="hidden" name="isModal" value="@ViewBag.isModal" />
                <input type="hidden" name="department" value="@ViewBag.department" />
                <input type="hidden" name="sid" value="@ViewBag.sid" />
                <input type="hidden" name="v" value="@ViewBag.v" />
                <input type="hidden" name="tskId" id="tskId" value="@Model.Id" />
                <input type="hidden" name="DivDepID" id="DivDepID" value="@ViewBag.DivDepID" />


                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">Off Reminder</h4>
                </div>
                <div class="modal-body">


                    <div class="form-group col-md-12" id="OffRemindertype">
                        <label class="control-label">Off Reminder Type</label>
                        <select class="select" id="OffReminder" name="Type" required>
                            @*<option selected value="@ViewBag.currentStatus">@General_Purpose.getStatusValue((int)ViewBag.currentStatus)</option>*@
                            <option value="">Select Type</option>
                            @if (ViewBag.DailyRem == 1)
                            {

                                if (ViewBag.BeforeDDateReminder != null)
                                {
                                    <option value="BeforeDDayReminder">Set Reminder Before Due Date</option>
                                }

                                if (ViewBag.DailyReminder != null)
                                {
                                    <option value="DailyReminder">Daily, Weekly, Monthly Reminder</option>
                                }



                            }
                        </select>

                    </div>



                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm  btn-default" data-dismiss="modal">Cancel</button>
                    <button type="submit" id="" class="btn btn-sm  bg-primary">Done</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="AssignGroupTask" class="modal fade">
    @if (Model.UserID != null)
    {
        <div class="modal-dialog">
            <div class="modal-content">
                <form class="form-horizontal" action="@Url.Action("TaskToGroupTask", "Task")" method="post">
                    <div class="modal-header bg-primary">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title">Change Task to Group Task</h4>
                    </div>
                    <div class="modal-body">

                        @*<div class="form-group">
                                <label class="col-lg-3 control-label">Group Task   <span class="text-danger">*</span></label>
                                <div class="col-lg-9">
                                    <select class="select" required="required" name="GroupTaskId" id="selectGroupTask">
                                        <option disabled selected value="">Select task</option>
                                        <option value="">abc</option>
                                    </select>
                                </div>
                            </div>*@
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Primary   <span class="text-danger">*</span></label>
                            <div class="col-lg-9">
                                <select class="select" required="required" name="PrimaryLead" onchange="dropdwonprimary()" id="primary">
                                    <option value="" selected disabled>Please Select Primary Lead</option>
                                    @if (Model.UserID != null)
                                    {
                                        foreach (User item in ViewBag.managers)
                                        {
                                            if (item.Role != 1)
                                            {
                                                <option value="@item.Id">@item.FirstName @item.LastName</option>
                                            }

                                        }


                                    }
                                    @{
                                        List<User> manangercount = ViewBag.managers;
                                        manangercount = manangercount.Where(x => x.Role != 1).ToList();
                                    }
                                </select>
                            </div>
                        </div>
                        <input type="hidden" id="managerid" value="@manangercount[0].Id" />
                        <input type="hidden" id="managercount" value="@manangercount.Count" />

                        <div class="form-group">
                            <label class="col-lg-3 control-label">Secondary</label>
                            <div class="col-lg-9">
                                <select class="select" name="SecondaryLead" onchange="dropdwonsecondary()" id="secondary">
                                    <option value="" selected disabled>Please Select Secondary Lead</option>
                                    @if (Model.UserID != null)
                                    {
                                        foreach (User item in ViewBag.managers)
                                        {
                                            <option value="@item.Id">@item.FirstName @item.LastName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        @*<div class="form-group" style="margin-bottom:20px;">
                                <label class="col-lg-3 control-label">Start Date   <span class="text-danger">*</span></label>
                                <div class="col-lg-9">
                                    <input type="date" class="form-control" name="StartDate" id="StartGroupDate" required>
                                </div>
                            </div>*@
                        @*<div class="form-group">
                                <label class="col-lg-2 control-label">End Date   <span class="text-danger">*</span></label>
                                <div class="col-lg-3 col-lg-offset-1">
                                    <input type="date" class="form-control" onchange="groupDatesValues()" name="EndDate" id="EndGroupDate" required>
                                </div>
                                <label class="col-lg-3 control-label">End Time</label>
                                <div class="col-lg-9">
                                    <input id="timepicker1" type="time" name="time" class="form-control input-small" value="00:00">
                                </div>
                            </div>*@
                        <input id="" type="hidden" name="Time" class="form-control input-small" value="00:00">
                        <input id="" type="hidden" name="taskname" class="form-control input-small" value="@Model.Task.Name">
                        <input id="" type="hidden" name="uId" class="form-control input-small" value="@Model.User1.Id">
                        <input id="" type="hidden" name="divisionId" class="form-control input-small" value="@ViewBag.divid">
                        <input id="" type="hidden" name="v" class="form-control input-small" value="@ViewBag.v">
                        <input id="" type="hidden" name="way" class="form-control input-small" value="@ViewBag.way">

                        <input id="" type="hidden" name="CEU" class="form-control input-small" value="@Model.CEU">
                        <input id="" type="hidden" name="Cost" class="form-control input-small" value="@Model.Cost">
                        <input id="" type="hidden" name="EndDate" class="form-control input-small" value="@Model.EndDate">
                        <input id="" type="hidden" name="Hours" class="form-control input-small" value="@Model.Hours">
                        <input id="" type="hidden" name="Notes" class="form-control input-small" value="@Model.Notes">
                        <input id="" type="hidden" name="Priority" class="form-control input-small" value="@Model.Priority">
                        <input id="" type="hidden" name="StartDate" class="form-control input-small" value="@Model.StartDate">
                        <input id="" type="hidden" name="taskid" class="form-control input-small" value="@ViewBag.usertaskid">
                        <input id="" type="hidden" name="Status" class="form-control input-small" value="@Model.Status">

                        <div class="form-group">
                            <label class="col-lg-3 control-label">Slack Channel Name</label>
                            <div class="col-lg-9">
                                <input type="text" class="form-control" maxlength="49" name="SlackChannel" id="slackChannel">
                            </div>
                        </div>
                        @*<div class="form-group">
                                <label class="col-lg-3 control-label">Priority</label>
                                <div class="col-lg-9">
                                    <select class="select" name="Priority">

                                        <option value="0" selected>Low</option>
                                        <option value="1">Medium</option>
                                        <option value="2">High</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-3 control-label">Cost</label>
                                <div class="col-lg-9">
                                    <input type="number" maxlength="9" class="form-control" name="Cost" id="cost">
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-3 control-label">CEU's</label>
                                <div class="col-lg-9">
                                    <input type="number" maxlength="9" class="form-control" name="CEU" id="ceu">
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-3 control-label">Hours</label>
                                <div class="col-lg-9">
                                    <input type="number" maxlength="9" class="form-control" name="hours" id="hours">
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-3 control-label">Grade</label>
                                <div class="col-lg-9">
                                    <input type="text" class="form-control" name="Grad" id="Grade">
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-3 control-label">Notes</label>
                                <div class="col-lg-9">
                                    <textarea class="form-control" maxlength="999" name="Notes" id="notes"></textarea>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-lg-12 control-label text-danger">Note : If values of Hours,CEU,Cost are not entered, it will be calculated from the Tasks in Group Task </label>
                            </div>*@
                        <div id="Groupdata"></div>

                    </div>
                    <input type="hidden" value="@Model.Id" name="deptId" />
                    <div class="modal-footer">
                        <label id="errorGroupDisplay" class="control-label text-danger" hidden> No Employee Selected !  </label>

                        <button type="button" class="btn btn-sm btn-default" data-dismiss="modal">Cancel</button>
                        <button type="submit" id="sbGroupButton" class="btn btn-sm  btn-primary bg-primary-400">Assign</button>
                    </div>
                </form>
            </div>
        </div>
    }
</div>

<div id="AssignToAnother" class="modal fade">
    @if (logedinuser.Role != 3 && Model.UserID != null)
    {
        <div class="modal-dialog">
            <div class="modal-content">
                @*<form class="form-horizontal" action="@Url.Action("PostAssignToAnother", "Task")" method="post">*@
                <div class="form-horizontal">
                    <div class="modal-header bg-primary">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title">Assign Task To Another</h4>
                    </div>
                    <div class="modal-body">

                        @{

                            User ATAu = new UserBL().getUsersById((int)Model.UserID);
                        }


                        <div class="form-group">
                            <label class="col-lg-3 control-label">User Type <span class="text-danger">*</span></label>
                            <div class="col-lg-9">

                                <input type="hidden" name="AuserTaskId" id="AuserTaskId" value="@Model.Id" />

                                <select class="select" required="required" name="Ausertype" onchange="dropdownAusertype()" id="Ausertype">
                                    <option value="" selected disabled>Please Select User Type</option>
                                    @if (ATAu.Role == 1 && logedinuser.Role == 1)
                                    {
                                        <option value="1">Administrator</option>

                                    }
                                    else if (logedinuser.Role == 1)
                                    {
                                        <option value="1">Administrator</option>
                                        <option value="2">Manager</option>
                                        <option value="3">Employee</option>
                                    }
                                    else if (logedinuser.Role == 2)
                                    {
                                        <option value="3">Employee</option>
                                    }
                                </select>
                            </div>
                        </div>

                        <div class="form-group" hidden id="ATADiv">
                            <label class="col-lg-3 control-label" id="ATALabel">User Label<span class="text-danger">*</span></label>
                            <div class="col-lg-9">
                                <select class="select" required="required" name="AuserId" id="AselectuserId">
                                    <option value="" selected disabled>Please Select User</option>


                                </select>
                            </div>
                        </div>
                        @{
                            int DeptId = 0;
                            int DivId = 0;
                            if (ATAu.Role == 3)
                            {
                                DeptId = Model.User1.Department.Id;
                                DivId = (int)ATAu.Department.DivisionID;
                            }
                            else if (ATAu.Role == 2)
                            {
                                DeptId = Model.Task.Department.Id;
                                DivId = (int)ATAu.DivisionId;
                            }

                        }
                        <input type="hidden" id="AcompanyId" value="@ATAu.CompanyID" />
                        <input type="hidden" id="AuserId" value="@Model.User1.Id" />
                        <input type="hidden" id="AdepId" value="@DeptId" />
                        <input type="hidden" id="AdivId" value="@DivId" />



                    </div>

                    <div class="modal-footer">

                        <button type="button" class="btn btn-sm btn-default" data-dismiss="modal">Cancel</button>
                        <button type="submit" id="sbAtAButton" onclick="postAssignToAnother()" class="btn btn-sm  btn-primary bg-primary-400">Assign</button>
                    </div>
                </div>
                @*</form>*@
            </div>
        </div>
    }
</div>

<div id="statusModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form class="form-horizontal" method="post" action="@Url.Action("updateStatus", "Task")">
                <input type="hidden" name="isModal" value="@ViewBag.isModal" />
                <input type="hidden" name="way" value="@ViewBag.way" />
                <input type="hidden" name="department" value="@ViewBag.department" />
                <input type="hidden" name="sid" value="@ViewBag.sid" />
                <input type="hidden" name="v" value="@ViewBag.v" />
                <input type="hidden" name="cStatus" value="@ViewBag.currentStatus" />
                <input type="hidden" name="DivDepID" id="DivDepID" value="@ViewBag.DivDepID" />

                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">Change Status</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group col-md-12">
                        <label class="control-label">Status</label>
                        <select onchange="checkstatus()" id="status" class="select" name="status" required>
                            @*<option selected value="@ViewBag.currentStatus">@General_Purpose.getStatusValue((int)ViewBag.currentStatus)</option>*@
                            @foreach (var item in ViewBag.status)
                            {
                                if (ViewBag.currentStatus == item)
                                {
                                    <option selected value="@item">@General_Purpose.getStatusValue((int)item)</option>
                                }
                                else
                                {
                                    <option value="@item">@General_Purpose.getStatusValue((int)item)</option>
                                }


                            }


                        </select>
                        @*<label style="margin-left:0px" class="control-label ">@General_Purpose.getStatusValue((int)ViewBag.currentStatus)</label>
                            <input checked type="radio" value="@ViewBag.currentStatus" name="select">
                            @foreach (var item in ViewBag.status)
                            {

                                <label style="margin-left:8px" class="control-label ">@General_Purpose.getStatusValue((int)item) Completed</label>
                                <input type="radio" value="@item" name="select">
                            }*@
                    </div>
                    <input type="hidden" value="@General_Purpose.EncryptId(Model.Id) " name="traineTaskId" />
                    <input type="hidden" value="@ViewBag.ActiveToDo" id="ActiveToDo" />
                </div>
                <div class="modal-footer">
                    <p id="statuswarn" style="color:red"></p>
                    @if (ViewBag.CanvasMsg != null)
                    {
                        <p id="" style="color:red">@ViewBag.CanvasMsg</p>
                    }

                    <button type="button" class="btn btn-sm  btn-default" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-sm  bg-primary">Update</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="requestModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form class="form-horizontal" method="post" action="@Url.Action("requestUpdateTraineTask", "Task")">
                <input type="hidden" name="isModal" value="@ViewBag.isModal" />
                <input type="hidden" name="way" value="@ViewBag.way" />
                <input type="hidden" name="department" value="@ViewBag.department" />
                <input type="hidden" name="sid" value="@ViewBag.sid" />
                <input type="hidden" name="DivDepID" id="DivDepID" value="@ViewBag.DivDepID" />
                <input type="hidden" name="User_TaskId" value="@ViewBag.usertaskid" />
                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    @if (Model.CreatedID.HasValue)
                    {
                        <h4 class="modal-title">Request Update</h4>
                    }
                    else
                    {
                        <h4 class="modal-title">Extend Deadline</h4>

                    }
                </div>
                <div class="modal-body">
                    <div class="form-group col-md-12">
                        <label class="control-label">Days</label>
                        <input type="number" name="RequestedDays" maxlength="150" class="form-control" />
                        <input type="hidden" name="createdBy" class="form-control" value=@General_Purpose.EncryptId(Model.Id) />

                        <input type="hidden" value="@Model.Id" name="Trainee_TaskId" />
                    </div>



                    <div class="form-group col-md-12">
                        <label class="control-label">Reason</label>
                        <textarea class="form-control" name="Reason"></textarea>
                    </div>




                    <div class="modal-footer">
                        <button type="button" class="btn  btn-sm btn-default" data-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn  btn-sm bg-primary-400">Request</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="myModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form class="form-horizontal" method="post" action="@Url.Action("addComment", "Task")" enctype="multipart/form-data">
                <input type="hidden" name="isModal" value="@ViewBag.isModal" />
                <input type="hidden" name="department" value="@ViewBag.department" />
                <input type="hidden" name="sid" value="@ViewBag.sid" />
                <input type="hidden" name="way" value="@ViewBag.way" />
                <input type="hidden" name="DivDepID" id="DivDepID" value="@ViewBag.DivDepID" />

                <div class="modal-header  bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">Add Comment</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group col-md-12">
                        <label class="control-label">Comment</label>
                        <textarea class="form-control" name="comment"></textarea>
                    </div>
                    <input type="hidden" name="taskId" value="@Model.Id" />
                    <div class="form-group col-md-12">
                        <label class="control-label">File</label>
                        <input type="file" name="File" class="form-control" />
                    </div>


                </div>
                <div class="modal-footer">
                    <button type="button" class="btn  btn-sm btn-default" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn  btn-sm btn-primary">Add</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="editComment" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form class="form-horizontal" method="post" action="@Url.Action("updateComment", "Task")" enctype="multipart/form-data">
                <input type="hidden" name="isModal" value="@ViewBag.isModal" />
                <input type="hidden" name="way" value="@ViewBag.way" />
                <input type="hidden" name="department" value="@ViewBag.department" />
                <input type="hidden" name="sid" value="@ViewBag.sid" />
                <input type="hidden" name="DivDepID" id="DivDepID" value="@ViewBag.DivDepID" />

                <div class="modal-header  bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">Edit Comment</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group col-md-12">
                        <label class="control-label">Comment</label>
                        <textarea class="form-control" maxlength="500" id="editText" name="comment"></textarea>
                    </div>
                    <input type="hidden" name="taskId" value="@Model.Id" />
                    <input type="hidden" name="commentId" id="commentId" value="-1" />

                    <input type="hidden" name="removeFile" id="removeFile" value="-1" />


                    <div class="row">
                        <div class="col-md-5">
                            Upload new File &nbsp;&nbsp;<span class="small text-danger">(Max 10 MBs)</span>
                            <br />
                            <p class="text-danger" id="errorMessageCmtUpd"></p>
                        </div>
                        <div class="col-md-4">
                            <input type="file" name="File" class="form-control" onchange="ValidateSizeCommentUpd(this)" />
                        </div>
                    </div>
                    <br />


                    <!-- For selecting location in document mnager starts, By Wajeeh -->
                    @if (Company.IsDocManager == 1)
                    {
                        <div class="row">
                            <div id="customLocPathMainBtn1">
                                <div class="col-md-5">
                                    <h6 class="small" id="customText">Select Document Manager Save Location:</h6>
                                </div>
                                <div class="col-md-4">
                                    <button style="margin-bottom:15px;" onclick="selectFolderFromDocM('-1','1')" title="Select custom location in Document Manager" type="button" class="btn btn-sm bg-primary-400">Location</button>
                                </div>

                                <div class="col-md-12">
                                    <div style="display:none;" id="customLocPathDiv1" class="form-group col-md-12">
                                        <label class="control-label"><b>Your File will be saved at this path in document manager:</b></label>
                                        <button title="Delete Path" type="button" onclick="removeSelectFolderPath('1')" class="close" aria-hidden="true" style="">×</button>
                                        <input readonly name="customLocPath" id="customLocPath1" class="form-control" type="text" />
                                        <input name="FolderId" id="customLocPathHidden1" class="form-control" type="hidden" />
                                    </div>
                                </div>

                            </div>
                        </div>


                    }
                    <!-- For selecting location in document mnager ends, By Wajeeh -->




                    @if (Company.IsDocManager == 1)
                    {
                        <hr />
                        <div class="row">
                            <div class="col-md-5">
                                <label class="control-label">Upload file from Document Manager</label>
                            </div>
                            <div class="col-md-4">
                                <input onchange="FileDivCmtUpd()" class="col-md-2" type="checkbox" id="IsDocFileCmtUpd" />
                                <span id="spinnerCmtUpd" style="display:none" class="col-md-2"><i class="icon-spinner6 spinner position-left"></i></span>
                            </div>

                            <div id="FileDivCmtUpd" class="form-group col-md-12" hidden>
                                <label class="control-label ml-10">Doc Manager Files</label>
                                <select class="select-results-color" id="DocMIDCmtUpd" name="DocMID">
                                    <option value="">Please Choose a File</option>
                                </select>
                            </div>
                        </div>
                        <hr />
                    }


                    <button class="btn btn-sm bg-danger" id="removeExistingFile" onclick="changeFileStatus()">Remove Existing File</button>


                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm  btn-default" data-dismiss="modal">Cancel</button>
                    <button type="submit" id="submitUpd" class="btn  btn-sm bg-primary-400">Update</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="deleteComment" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form class="modal-body " action="@Url.Action("deleteComment", "Task")" method="post">
                <input type="hidden" name="isModal" value="@ViewBag.isModal" />
                <input type="hidden" name="way" value="@ViewBag.way" />
                <input type="hidden" name="department" value="@ViewBag.department" />
                <input type="hidden" name="sid" value="@ViewBag.sid" />
                <input type="hidden" name="DivDepID" id="DivDepID" value="@ViewBag.DivDepID" />

                <div class="text-center">
                    <div class="icon-object border-slate-300 text-slate-300"><i class="icon-folder-upload"></i></div>
                    <h5 class="content-group">Are you sure you would like to delete the comment?<small class="display-block"></small></h5>
                </div>
                <input type="hidden" name="taskId" value="@Model.Id" />
                <input type="hidden" name="commentId" id="commentId1" value="-1" />
                <input type="hidden" name="isManag" id="isManag1" value="-1" />   <center>
                    <button type="button" data-dismiss="modal" class="btn btn-sm  bg-primary">No</button>
                    <button type="submit" id="sbbutton1" class="btn btn-sm  btn-danger">Yes</button>


                </center>

            </form>
        </div>
    </div>
</div>

<div id="todoModal" class="modal fade">
    <input type="hidden" value="@Model.StartDate.Value.ToString("yyyy-MM-dd")" id="TaskStartDate" />
    <input type="hidden" value="@Model.EndDate.Value.ToString("yyyy-MM-dd")" id="TaskEndDate" />
    <div class="modal-dialog">
        <div class="modal-content">
            <form class="form-horizontal" method="post" action="@Url.Action("addEmployeeTasktoDO", "Task")" enctype="multipart/form-data">
                <input type="hidden" name="isModal" value="@ViewBag.isModal" />
                <input type="hidden" name="way" value="@ViewBag.way" />
                <input type="hidden" name="department" value="@ViewBag.department" />
                <input type="hidden" name="sid" value="@ViewBag.sid" />
                <input type="hidden" name="DivDepID" id="DivDepID" value="@ViewBag.DivDepID" />

                <div class="modal-header  bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">Add To Do</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group col-md-12">
                        <label class="control-label"><span style="color:red">*</span>Name</label>
                        <input type="text" name="Name" maxlength="150" class="form-control" required />

                        <input type="hidden" value="@Model.Id" name="UserTask_Id" />
                    </div>
                    <div class="form-group col-md-12">
                        <div class="form-group col-md-4">
                            <label class="control-label"><span style="color:red">*</span>Starting Date</label>
                            <input type="date" onchange="CheckStartDateEndDate()" id="AddStartDate" min="@Model.StartDate.Value.ToString("yyyy-MM-dd")" max="@Model.EndDate.Value.ToString("yyyy-MM-dd")" required name="StartDate" class="form-control" value="" />
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label"><span style="color:red">*</span>Starting Time</label>
                            <input id="sdtimepicker1" type="text" onchange="checktimeperiod()" name="Starttime" class="form-control input-small">

                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label"><span style="color:red"></span>Task Start Date</label>
                            <h5>@Model.StartDate.Value.ToString("MM-dd-yyyy")</h5>
                        </div>


                    </div>
                    <div class="form-group col-md-12">

                        <div class="form-group col-md-4">
                            <label class="control-label"><span style="color:red">*</span>Ending Date</label>
                            <input type="date" required onchange="CheckStartDateEndDate()" id="AddEndDate" min="@Model.StartDate.Value.ToString("yyyy-MM-dd")" max="@Model.EndDate.Value.ToString("yyyy-MM-dd")" name="EndDate" class="form-control" value="" />
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label"><span style="color:red">*</span>Ending Time</label>
                            <input id="edtimepicker1" type="text" onchange="checktimeperiod()" name="Endtime" class="form-control input-small">

                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label"><span style="color:red"></span>Task End Date</label>
                            <h5>@Model.EndDate.Value.ToString("MM-dd-yyyy")</h5>
                        </div>

                    </div>

                </div>


                <div class="row">
                    <div class="col-md-5 col-md-offset-1">
                        Upload File <span class="small text-danger">(Max 10 MBs)</span>
                        <br />
                        <p class="text-danger" id="errorMessageTodo"></p>
                    </div>
                    <div class="col-md-4">
                        <input type="file" name="file" onchange="ValidateSizeTodo(this)" />
                    </div>
                </div>
                <br />
                <!-- For selecting location in document mnager starts, By Wajeeh -->
                @if (Company.IsDocManager == 1)
                {
                    <div class="row">
                        <div id="customLocPathMainBtn3">
                            <div class="col-md-5 col-md-offset-1">
                                <h6 class="small">Select Document Manager Save Location:</h6>
                            </div>
                            <div class="col-md-4">
                                <button style="margin-bottom:10px;" onclick="selectFolderFromDocM('-1','3')" title="Select custom location in Document Manager" type="button" class="btn btn-sm bg-primary-400">Location</button>
                            </div>
                            <div class="col-md-12">
                                <div style="display:none;" id="customLocPathDiv3" class="form-group col-md-12">
                                    <label class="control-label"><b>Your File will be saved at this path in document manager:</b></label>
                                    <button title="Delete Path" type="button" onclick="removeSelectFolderPath('3')" class="close" aria-hidden="true" style="">×</button>
                                    <input readonly name="customLocPath" id="customLocPath3" class="form-control" type="text" />
                                    <input name="FolderId" id="customLocPathHidden3" class="form-control" type="hidden" />
                                </div>
                            </div>

                        </div>
                    </div>

                }
                <!-- For selecting location in document mnager ends, By Wajeeh -->






                @if (Company.IsDocManager == 1)
                {

                    <hr />
                    <div class="row">
                        <div class="col-md-5 col-md-offset-1">
                            <label class="control-label">Upload file from Document Manager</label>
                        </div>
                        <div class="col-md-4">
                            <input onchange="FileDivTodo()" class="col-md-2" type="checkbox" id="IsDocFileTodo" style="margin-top:10px;" />
                            <span id="spinnerTodo" style="display:none" class="col-md-2"><i class="icon-spinner6 spinner position-left"></i></span>
                        </div>
                        <div id="FileDivTodo" class="form-group col-md-12" hidden>
                            <div class="col-md-4 col-md-offset-1">
                                <label class="control-label ml-10">Doc Manager Files</label>
                            </div>
                            <div class="col-md-6">
                                <select class="select-results-color" id="DocMIDTodo" name="DocMID">
                                    <option value="">Please Choose a File</option>
                                </select>
                            </div>

                        </div>
                    </div>
                    <hr />

                }







                <div class="modal-footer">
                    <p style="color:red" id="ErrorMessage"></p>
                    <button type="button" class="btn btn-sm  btn-default" data-dismiss="modal">Cancel</button>
                    <button type="submit" id="addtodobtn" class="btn btn-sm  bg-primary-400">Add</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="edittodomodal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form class="form-horizontal" method="post" action="@Url.Action("editEmployeeTaskTicket", "Task")" enctype="multipart/form-data">
                <input type="hidden" name="isModal" value="@ViewBag.isModal" />
                <input type="hidden" name="way" value="@ViewBag.way" />
                <input type="hidden" name="department" value="@ViewBag.department" />
                <input type="hidden" name="sid" value="@ViewBag.sid" />
                <input type="hidden" name="DivDepID" id="DivDepID" value="@ViewBag.DivDepID" />
                <div class="modal-header  bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">Update To Do</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group col-md-12">
                        <label class="control-label"><span style="color:red">*</span>Name</label>
                        <input type="text" name="name" id="todoName" class="form-control" maxlength="150" required />

                        <input type="hidden" id="ticket_Id" name="ticketId" x value="0" />

                    </div>
                    <div class="form-group col-md-12">
                        <div class="form-group col-md-4">
                            <label class="control-label"><span style="color:red">*</span>Starting Date</label>
                            <input type="date" id="StartDate" onchange="UpdateCheckStartDateEndDate()" min="@Model.StartDate.Value.ToString("yyyy-MM-dd")" max="@Model.EndDate.Value.ToString("yyyy-MM-dd")" name="StartDate" class="form-control" value="" required />
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label"><span style="color:red">*</span>Starting Time</label>
                            <input id="sdtimepicker2" type="text" onchange="Updatechecktimeperiod()" name="Starttime" class="form-control input-small">
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label"><span style="color:red"></span>Task Start Date</label>
                            <h5>@Model.StartDate.Value.ToString("MM-dd-yyyy")</h5>
                        </div>

                    </div>
                    <div class="form-group col-md-12">
                        <div class="form-group col-md-4">
                            <label class="control-label"><span style="color:red">*</span>Ending Date</label>
                            <input type="date" id="EndDate" onchange="UpdateCheckStartDateEndDate()" min="@Model.StartDate.Value.ToString("yyyy-MM-dd")" max="@Model.EndDate.Value.ToString("yyyy-MM-dd")" name="EndDate" class="form-control" value="" required />
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label"><span style="color:red">*</span>Ending Time</label>
                            <input id="edtimepicker2" type="text" onchange="Updatechecktimeperiod()" name="Endtime" class="form-control input-small">
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label"><span style="color:red"></span>Task End Date</label>
                            <h5>@Model.EndDate.Value.ToString("MM-dd-yyyy")</h5>
                        </div>

                    </div>
                </div>
                <div class="row">
                    <div class="col-md-5 col-md-offset-1">
                        Upload File &nbsp;&nbsp;<span class="small text-danger">(Max 10 MBs)</span>
                        <br />
                        <p class="text-danger" id="errorMessageTodoUpd"></p>
                    </div>
                    <div class="col-md-4">
                        <input type="file" name="file" onchange="ValidateSizeTodoUpd(this)" />
                    </div>
                </div>
                <br />
                <!-- For selecting location in document mnager starts, By Wajeeh -->
                @if (Company.IsDocManager == 1)
                {
                    <div class="row">
                        <div id="customLocPathMainBtn4">
                            <div class="col-md-5 col-md-offset-1">
                                <h6 id="customText4" class="small">Select Document Manager Save Location:</h6>
                            </div>
                            <div class="col-md-4">
                                <button style="margin-bottom:10px;" onclick="selectFolderFromDocM('-1','4')" title="Select custom location in Document Manager" type="button" class="btn btn-sm bg-primary-400">Location</button>
                            </div>
                            <div class="col-md-12">
                                <div style="display:none;" id="customLocPathDiv4" class="form-group col-md-12">
                                    <label class="control-label"><b>Your File will be saved at this path in document manager:</b></label>
                                    <button title="Delete Path" type="button" onclick="removeSelectFolderPath('4')" class="close" aria-hidden="true" style="">×</button>
                                    <input readonly name="customLocPath" id="customLocPath4" class="form-control" type="text" />
                                    <input name="FolderId" id="customLocPathHidden4" class="form-control" type="hidden" />
                                </div>
                            </div>

                        </div>
                    </div>
                }
                <!-- For selecting location in document mnager ends, By Wajeeh -->


                @if (Company.IsDocManager == 1)
                {
                    <hr />
                    <div class="row">
                        <div class="col-md-5 col-md-offset-1">
                            <label class="control-label">Upload file from Document Manager</label>
                        </div>
                        <div class="col-md-4">
                            <input onchange="FileDivTodoUpd()" class="col-md-2" type="checkbox" id="IsDocFileTodoUpd" style="margin-top:10px;" />
                            <span id="spinnerTodoUpd" style="display:none" class="col-md-2"><i class="icon-spinner6 spinner position-left"></i></span>
                        </div>
                        <div id="FileDivTodoUpd" class="form-group col-md-12" hidden>
                            <div class="col-md-4 col-md-offset-1">
                                <label class="control-label ml-10">Doc Manager Files</label>

                            </div>
                            <div class="col-md-6">
                                <select class="select-results-color" id="DocMIDTodoUpd" name="DocMID">
                                    <option value="">Please Choose a File</option>
                                </select>
                            </div>

                        </div>
                    </div>
                    <hr />
                }





                <div class="modal-footer">
                    <p style="color:red" id="ErrorMessage2"></p>
                    <button type="button" class="btn btn-sm  btn-default" data-dismiss="modal">Cancel</button>
                    <button type="submit" id="addtodobtn2" class="btn btn-sm  bg-primary-400">Update</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="deletetodomodal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form class="modal-body " action="@Url.Action("deleteEmployeeTaskTicket", "Task")" method="post">
                <input type="hidden" name="isModal" value="@ViewBag.isModal" />
                <input type="hidden" name="way" value="@ViewBag.way" />
                <input type="hidden" name="department" value="@ViewBag.department" />
                <input type="hidden" name="sid" value="@ViewBag.sid" />
                <input type="hidden" name="DivDepID" id="DivDepID" value="@ViewBag.DivDepID" />
                <div class="text-center">
                    <div class="icon-object border-slate-300 text-slate-300"><i class="icon-folder-upload"></i></div>
                    <h5 class="content-group">Are you sure you want to delete this To Do? <small class="display-block"></small></h5>
                </div>
                <input type="hidden" id="ticketid" name="ticketId" value="0" />
                <center>
                    <button type="button" data-dismiss="modal" class="btn btn-sm  bg-primary">No</button>
                    <button type="submit" id="sbbutton1" class="btn btn-sm  btn-danger">Yes</button>


                </center>

            </form>
        </div>
    </div>
</div>

<div id="completetciketmodal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form class="modal-body " action="@Url.Action("completeEmployeeTaskTicket", "Task")" method="post">
                <input type="hidden" name="isModal" value="@ViewBag.isModal" />
                <input type="hidden" name="way" value="@ViewBag.way" />
                <input type="hidden" name="department" value="@ViewBag.department" />
                <input type="hidden" name="sid" value="@ViewBag.sid" />
                <input type="hidden" name="DivDepID" id="DivDepID" value="@ViewBag.DivDepID" />
                <div class="text-center">
                    <div class="icon-object border-slate-300 text-slate-300"><i class="icon-folder-upload"></i></div>
                    <h5 class="content-group">Are you sure you would like to mark this To Do as complete? <small class="display-block"></small></h5>
                </div>
                <input type="hidden" id="ticketId" name="ticketId" value="0" />
                <center>
                    <button type="button" data-dismiss="modal" class="btn btn-sm  bg-primary">No</button>
                    <button type="submit" id="sbbutton1" class="btn btn-sm  btn-danger">Yes</button>


                </center>

            </form>
        </div>
    </div>
</div>

<div id="ModalSetTemplateName" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">


            <div class="modal-header  bg-primary">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Save Task as Template</h4>
            </div>
            <div class="modal-body">
                <div class="form-group col-md-12">
                    <label class="control-label">Template Name</label>
                    <input type="text" onkeyup="ValidateTemplateName(this)" name="TemplateName" id="TemplateName" class="form-control" required />
                    <p id="errmsgg" style="color:red"></p>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-sm  btn-default" data-dismiss="modal">Cancel</button>
                <a id="templatebtn" class="btn btn-primary" onclick="SetTemplate()">Save Template</a>
            </div>

        </div>
    </div>
</div>

<div id="ModalSetTemplateResponse" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">


            <div class="modal-header  bg-primary">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>

            </div>

            <div class="modal-body">
                <div class="form-group col-md-12">
                    <center><h4 id="TemplateResponse" class="modal-title"></h4></center>
                </div>

            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-sm  btn-default" data-dismiss="modal">Close</button>

            </div>

        </div>
    </div>
</div>

<div id="deleteFreqUtask" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header  bg-primary">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <br />
            </div>
            <div class="modal-body">
                <div class="text-center">
                    <div class="icon-object border-slate-300 text-slate-300"><i class="icon-folder-upload"></i></div>
                    <h5 class="content-group">Are you sure you would like to delete the task?<small class="display-block"></small></h5>
                </div>
            </div>

            <input type="hidden" id="UtaskId" value="-1" />
            <center>
                <button type="button" data-dismiss="modal" class="btn btn-sm  bg-primary">No</button>
                <button type="submit" id="sbbutton1" onclick="RemoveFreqTsk()" class="btn btn-sm  btn-danger">Yes</button>
                <br />


            </center>
            <br />

        </div>
    </div>
</div>

<div id="increaseFreqTask" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form action="@Url.Action("increaseFreqTask","Task")">
                <div class="modal-header  bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <center> <h3>Increase Frequency Tasks</h3></center>



                </div>
                <div class="modal-body">
                    <br />
                    <input type="hidden" name="isModal" value="@ViewBag.isModal" />
                    <input type="hidden" name="way" value="@ViewBag.way" />
                    <input type="hidden" name="department" value="@ViewBag.department" />
                    <input type="hidden" name="sid" value="@ViewBag.sid" />
                    <input type="hidden" name="DivDepID" id="DivDepID" value="@ViewBag.DivDepID" />
                    <input type="hidden" name="taskId" value="@General_Purpose.EncryptId(Model.Id)" />
                    <div class="form-group">
                        <label class="col-lg-4 control-label">Frequency Ending Date:</label>
                        <div class="col-lg-8">


                            <input type="date" name="FeqEndingDate" />
                        </div>
                    </div>
                    <br />
                </div>

                <input type="hidden" id="UtaskId" value="-1" />
                <p style="color:red; margin-left:50px">Frequency ending date should be greater than start date of last recursive task.</p>
                <center>
                    <button type="button" data-dismiss="modal" class="btn btn-sm  bg-primary">Cancel</button>
                    <button type="submit" id="sbbutton1" class="btn btn-sm  btn-danger">Submit</button>
                    <br />


                </center>
                <br />
            </form>
        </div>
    </div>
</div>

<div id="deletefrequencytasks" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form class="modal-body " action="@Url.Action("DeleteAllFrequencyTasks", "Task")" method="post">

                <input type="hidden" name="BackURL" id="BackURL" />
                <input type="hidden" name="Id" value="@Model.Id" />
                <div class="text-center">
                    <div class="icon-object border-slate-300 text-slate-300"><i class="icon-folder-upload"></i></div>
                    <h5 class="content-group">Are you sure you would like to delete all recursive tasks including this?<small class="display-block"></small></h5>
                </div>
                <center>
                    <button type="button" data-dismiss="modal" class="btn btn-sm  bg-primary">No</button>
                    <button type="submit" id="sbbutton1" class="btn btn-sm  btn-danger">Yes</button>


                </center>

            </form>
        </div>
    </div>
</div>

<!-- Modal for selecting location in documnet manager, By Wajeeh -->
<!-- Select Folder -->
<div id="moveDirectoryModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content login-form">
            <div class="modal-header bg-primary">
                <button type="button" class="close" data-dismiss="modal">×</button>
                <h6 id="moveTitle" class="modal-title text-center"><strong>Select Folder Location In Document Manager</strong></h6>
            </div>

            <div class="modal-body">
                <div class="breadcrumb-line">
                    <a class="breadcrumb-elements-toggle"><i class="icon-menu-open"></i></a>
                    <ul id="breadCrumbDiv" class="breadcrumb"></ul>

                </div>

                <div class="table-wrapper-scroll-y my-custom-scrollbar">
                    <div style="margin:0;" class="row">

                        <div class="col-lg-12 text-left">
                            <br />
                            <a style="display:none;" id="selectHomeLink"><b><i class="icon-select2"></i> Select Home</b></a>
                            <br />
                            <a id="createNewFolLink"><b><i class="icon-folder-plus2"></i> Create Folder</b></a>

                            <input style="display:none;margin-top:8px;margin-bottom:8px;" id="createNewFolInput" name="Name" type="text" class="form-control" placeholder="Name of Directory">
                            <h6 id="folErr" style="display:none;color:red;"><b>Enter folder name!</b></h6>
                            <h6 id="folGenErr" style="display:none;color:red;"><b></b></h6>
                            <h6 id="folGenMsg" style="display:none;color:green;"><b></b></h6>
                            <button style="display:none;" class="btn btn-sm bg-primary-300" id="createNewFolSubmitBtn"><i class="icon-check2"></i> Create</button>

                            @*<span>
                                    <button style="display:none;" class="btn btn-sm bg-primary-300" id="createNewFolSubmitBtn"><i class="icon-check2"></i></button>
                                    <button onclick="hideContent()" style="display:none;" class="btn btn-sm btn-danger" id="createNewCrossBtn"><i class="icon-cross2"></i></button>
                                </span>*@

                            <input type="hidden" id="createNewFolHidden" />
                        </div>


                    </div>
                    <table id="moveDirectoryTbl" class="table table-hover">
                        <thead>
                            <tr>
                                <th><strong>Folder Name</strong></th>
                                <th style="text-align:center;"><strong>Action</strong></th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<br />

<div class="content">
    <input type="hidden" name="name" value="@Model.EndDate" id="datep" />
    <input type="hidden" name="TemplateUtaskId" value="@Model.Id" id="TemplateUtaskId" />
    <input type="hidden" value="@Model.Id" id="UtaskId2" />
    <!-- Detailed task -->
    <div class="row">
        <div class="col-lg-9">
            @if (ViewBag.request != null)
            {
                <div class="alert alert-success" data-auto-dismiss role="alert">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    @ViewBag.request
                    @{
                        ViewBag.request = null;
                    }
                </div>
            }
            @if (ViewBag.requestResponse != null)
            {


                <div class="panel panel-flat" id="requestDiv">
                    <div class="panel-heading mt-5">
                        <h5 class="panel-title">Request</h5>

                    </div>

                    <div class="panel-body">

                        <h6 class="text-semibold"> @ViewBag.requestResponse</h6>
                        <a href="#" class="btn  btn-sm  bg-primary-400" id="requestButton">Dismiss</a>



                    </div>


                </div>
            }


            @if (ViewBag.extenstionRequest != null)
            {
                <!-- Task overview -->
                <div class="panel panel-flat" id="requestDiv">
                    <div class="panel-heading mt-5">
                        <h5 class="panel-title">Request</h5>
                        <div class="heading-elements">
                        </div>
                    </div>
                    <form method="post" id="requestmethod" action="@Url.Action("traineeTaskResponse", "Task")">
                        <input type="hidden" name="isModal" value="@ViewBag.isModal" />
                        <input type="hidden" name="way" value="@ViewBag.way" />
                        <input type="hidden" name="department" value="@ViewBag.department" />
                        <input type="hidden" name="sid" value="@ViewBag.sid" />
                        <input type="hidden" name="DivDepID" id="DivDepID" value="@ViewBag.DivDepID" />
                        <div class="panel-body">
                            <input type="hidden" name="rd" value="@ViewBag.erId" />
                            <input type="hidden" name="gd" value="@General_Purpose.EncryptId(Model.Id)" />
                            <input type="hidden" name="responseid" id="responseid" value="1" />
                            <h6 class="text-semibold"> @ViewBag.extenstionRequest</h6>
                            <a href="#" class="btn btn-sm  bg-primary-400" id="requestButton1" onclick="updateValue(1)">Accept</a>
                            <a href="#" class="btn btn-sm  bg-danger" id="_reject" onclick="updateValue(2)">Reject</a>


                        </div>
                    </form>

                </div>
            }
            <!-- Task overview -->
            <div class="panel panel-flat">
                <div class="panel-heading mt-5">
                    <label class="control-label"><b>Task Name </b> </label> <h5 class="panel-title">@Model.Task.Name</h5>


                    <div class="heading-elements">
                        <ul class="icons-list">
                            <li class="dropdown">
                                @if (Model.UserID != null)
                                {
                                    <a href="#" class="btn btn-sm dropdown-toggle bg-primary-400 text-white" data-toggle="dropdown">Actions <i class="icon-menu7"></i> </a>

                                }

                                <ul class="dropdown-menu dropdown-menu-right">
                                    <li>
                                        @if (Model.UserID != null)
                                        {
                                            <a href="@Url.Action("generateTraineeTaskReport", "ExportReport", new { sId = General_Purpose.EncryptId(Model.Id) })" target="_blank">Export PDF </a>

                                        }
                                    </li>
                                    @if ((logedinuser.Role == 3 || logedinuser.Role == 1 || logedinuser.Role == 2) && Model.User1 != null)
                                    {
                                        if (Model.CompletionDate == null)
                                        {
                                            <li>
                                                <a href="#" data-target="#statusModal" data-toggle="modal">Update Status</a>

                                            </li>
                                            if (Model.CreatedID.HasValue)
                                            {
                                                if (logedinuser.Role == 1 || logedinuser.Id == Model.CreatedID)
                                                {
                                                    <li>
                                                        <a href="#" data-target="#requestModal" data-toggle="modal">Update Deadline </a>
                                                    </li>
                                                }
                                                else
                                                {
                                                    <li>
                                                        <a href="#" data-target="#requestModal" data-toggle="modal">Request Extension </a>
                                                    </li>
                                                }

                                            }
                                            else
                                            {
                                                <li>
                                                    <a href="#" data-target="#requestModal" data-toggle="modal">Update Deadline </a>
                                                </li>
                                            }
                                        }
                                    }
                                    @*@if ((logedinuser.Role == 1 ||logedinuser.Id==Model.CreatedID) && Model.User1 != null)
                                        {
                                            <li>
                                                <a href="#" onclick="groupTaskValues()" data-target="#" data-toggle="modal">Change to Group Task </a>
                                            </li>
                                        }*@
                                    @if (ViewBag.DailyRem == 1 && Model.User1 != null && Model.CompletionDate == null && logedinuser.Id == Model.UserID)
                                    {
                                        <li class="dropdown-submenu  dropdown-submenu-left">
                                            <a href="#">Reminder</a>
                                            <ul class="dropdown-menu">

                                                @if (ViewBag.BeforeDDateReminder == null || ViewBag.DailyReminder == null)
                                                {

                                                    <li><a href="#" onclick="Showreminder()">Set Reminder</a></li>
                                                }
                                                @if (ViewBag.BeforeDDateReminder != null || ViewBag.DailyReminder != null)
                                                {
                                                    <li><a href="#" onclick="UpdateShowreminder()">Update Reminder</a></li>
                                                    <li><a href="#" onclick="OffShowreminder()">Set Off Reminder</a></li>

                                                }



                                            </ul>
                                        </li>


                                    }
                                    @*@if (ViewBag.CanvasCourse != null && Model.User1 != null)
                                        {
                                            <li>
                                                <a href="@Url.Action("CanvasCourseDetails", "Task", new { v =General_Purpose.EncryptId(ViewBag.CanvasCourse.id), taskid = HttpUtility.UrlEncode(General_Purpose.Encrypt(Model.Id)), way = ViewBag.way, isModal = ViewBag.isModal, sid = ViewBag.sid, department = ViewBag.department })">Canvas Course</a>


                                            </li>
                                        }*@
                                    @if (@*Model.CompletionDate==null &&*@ /**/
                                    /**/
                                    /**/
                                    /**/
                                    /**/
                                    /**/
                                    /**/
                                    /**/
                                    /**/
                                    /**/
                                    /**/
                                    /**/
                                    /**/
                                    /**/
                                    /**/
                                    /**/
                                    /**/
                                    /**/
                                    /**/
                                    /**/
                                    /**/
                                    /**/
                                    /**/
                                    /**/
                                    /**/
                                    /**/
                                    Model.User1 != null)
                                    {
                                        <li>

                                            <a onclick="GetTemplateName()">Create Template</a>


                                        </li>
                                    }

                                </ul>
                            </li>
                        </ul>
                    </div>


                </div>
                <div class="panel-body">
                    <h6 class="text-semibold">Task Description</h6>
                    <p class="content-group">@Model.Notes</p>
                    <div class="row container-fluid">


                    </div>


                </div>

            </div>
            <!-- /task overview -->

            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-flat">
                        <div class="panel-heading">
                            <center><h3 class="panel-title"><b>To Do</b></h3></center>
                            <div class="heading-elements">
                                @*@if (((int)Session["Role"] == 1 || (int)Session["Role"] == 2 || (int)Session["Role"] == 4) && ((Model.CreatedBy.HasValue && (int)Session["Id"] == Model.CreatedBy.Value) || Model.GroupTask_User.Where(x => x.IsActive == 1 && x.UserId == (int)Session["Id"]).Count() > 0))*@
                                @if (Model.User1 != null)
                                {
                                    if (Model.CompletionDate == null && (logedinuser.Role == 1 || logedinuser.Role == 3 || logedinuser.Id == Model.CreatedID))

                                    {
                                        @*<a href="#" data-target="#todoModal" data-toggle="modal"> Add To Do</a>*@
                                        <a href="#" class="btn btn-sm bg-primary-400 text-white" data-target="#todoModal" data-toggle="modal">Add To Do</a>
                                    }
                                }
                            </div>
                        </div>

                        <input type="hidden" id="Sortvalue" value="@Model.TicketSortBy" />
                        <div class="panel-body">
                            <div class="tabbable">
                                @{
                                    int activetodos = Model.Task_Ticket.Where(x => x.CompletionDatetime == null && x.IsActive == 1).Count();
                                    int completedtodos = Model.Task_Ticket.Where(x => x.CompletionDatetime != null).Count();
                                }
                                <ul class="nav nav-tabs nav-tabs-highlight border-grey-400">
                                    <li class="active"><a href="#badges-tab1" data-toggle="tab"><span class="badge badge-warning position-left">@activetodos</span> Active</a></li>
                                    <li><a href="#badges-tab2" data-toggle="tab"><span class="badge badge-success position-left">@completedtodos</span>Inactive </a></li>
                                    <li><a href="#badges-tab3" data-toggle="tab">To Do Chart</a></li>

                                </ul>
                                <div class="tab-content">
                                    <div style="height:265px; overflow:auto" class="tab-pane active table-responsive" id="badges-tab1">
                                        <table id="example" class="table datatable-row-events table-bordered table-striped">
                                            <thead>
                                                <tr>
                                                    <th>
                                                        <div>
                                                            Sr# @*<i id="asc" class="glyphicon glyphicon-chevron-up" onclick="sortTable('asc')"></i>
                                                                <i id="dsc" class="glyphicon glyphicon-chevron-down" onclick="sortTable('dsc')"></i>*@
                                                        </div>
                                                    </th>
                                                    <th>Name</th>
                                                    <th style="display:none">Id</th>
                                                    <th>Start Date</th>
                                                    <th>End Date</th>
                                                    <th>Action</th>

                                                </tr>
                                            </thead>
                                            <tbody>

                                                @{
                                                    int i = 0;
                                                    string str = "";
                                                    List<Task_Ticket> lst = new List<Task_Ticket>();
                                                    lst = Model.Task_Ticket.OrderBy(c => c.Position).Where(x => x.CompletionDatetime == null && x.IsActive == 1).ToList();


                                                    foreach (Task_Ticket item in lst)
                                                    {

                                                        i++;

                                                        str = "";
                                                        if (item.Name.Contains("qqqqaaaa"))
                                                        {
                                                            str = item.Name.Replace("qqqqaaaa", " ");

                                                        }
                                                        <tr>
                                                            <td>@i</td>


                                                            @if (str != "")
                                                            {
                                                                <td>
                                                                    <div class="col-lg-12">
                                                                        <div class="col-lg-11">
                                                                            <sup>

                                                                                <b>
                                                                                    (Edited)
                                                                                </b>

                                                                            </sup><br />
                                                                            @str
                                                                        </div>
                                                                        <div class="col-lg-1">
                                                                            @if (item.Ticket_File != null)
                                                                            {
                                                                                <form action="@Url.Action("download", "Trainee")">
                                                                                    <input type="hidden" name="filepath" value="@item.Ticket_File" />
                                                                                    <input type="hidden" name="name" value="@item.Ticket_FileName" />
                                                                                    <button type="submit" class="" title="@item.Ticket_FileName"><span class="icon-download"></span></button>
                                                                                </form>
                                                                            }

                                                                        </div>
                                                                    </div>

                                                                </td>
                                                            }
                                                            else
                                                            {
                                                                <td>
                                                                    <div class="col-lg-12">
                                                                        <div class="col-lg-11"> @item.Name</div>
                                                                        <div class="col-lg-1">
                                                                            @if (item.Ticket_File != null)
                                                                            {
                                                                                <form action="@Url.Action("download", "Trainee")">
                                                                                    <input type="hidden" name="filepath" value="@item.Ticket_File" />
                                                                                    <input type="hidden" name="name" value="@item.Ticket_FileName" />
                                                                                    <button type="submit" class="" title="@item.Ticket_FileName"><span class="icon-download"></span></button>
                                                                                </form>
                                                                            }

                                                                        </div>
                                                                    </div>


                                                                </td>
                                                            }

                                                            @{
                                                                int val = item.Id + 643;
                                                            }
                                                            <td style="display:none">@val/T</td>

                                                            <td>@item.StartDate</td>
                                                            <td>@item.EndDate</td>

                                                            @if (Model.User1 != null)
                                                            {

                                                                <td>

                                                                    @if (item.StartDate != null)
                                                                    {
                                                                        <input type="hidden" id="editname_@item.Id" value="@item.Name" />
                                                                        <input type="hidden" id="editsdate_@item.Id" value="@item.StartDate.Value.ToString("yyyy-MM-dd")" />
                                                                        <input type="hidden" id="editstime_@item.Id" value="@item.StartDate" />
                                                                        <input type="hidden" id="editedate_@item.Id" value="@item.EndDate.Value.ToString("yyyy-MM-dd")" />
                                                                        <input type="hidden" id="editetime_@item.Id" value="@item.EndDate" />
                                                                        <button class="" title="Edit To Do" onclick="editToDo('@item.Id','@item.IsDocMFile')"> Edit</button>

                                                                    }
                                                                    else
                                                                    {
                                                                        <input type="hidden" id="editname_@item.Id" value="@item.Name" />
                                                                        <input type="hidden" id="editsdate_@item.Id" value="@item.StartDate" />
                                                                        <input type="hidden" id="editstime_@item.Id" value="@item.StartDate" />
                                                                        <input type="hidden" id="editedate_@item.Id" value="@item.EndDate" />
                                                                        <input type="hidden" id="editetime_@item.Id" value="@item.EndDate" />
                                                                        <button class="" title="Edit To Do" onclick="editToDo('@item.Id','@item.IsDocMFile')"> Edit</button>

                                                                    }
                                                                    <button class="" title="Delete To Do" onclick="deleteToDo('@item.Id')"> Delete</button>
                                                                    <button class="" title="Close To Do" onclick="updatToDo(@item.Id)"> Close</button>



                                                                </td>


                                                            }
                                                            else
                                                            {

                                                                <td>
                                                                    <button class=""> Edit</button>
                                                                    <button class="" title="Delete To do"> Delete</button>
                                                                    <button class="" title="Close To Do"> Close</button>


                                                                </td>



                                                            }




                                                        </tr>
                                                    }
                                                }

                                            </tbody>
                                        </table>
                                    </div>
                                    <div style="height:215px; overflow:auto" class="tab-pane table-responsive" id="badges-tab2">
                                        <table class="table table-bordered table-striped">
                                            <thead>
                                                <tr>
                                                    <th>Sr#</th>
                                                    <th>Name</th>

                                                    <th>Time</th>
                                                </tr>
                                            </thead>
                                            <tbody>

                                                @{
                                                    int j = 0;
                                                    string str2 = "";
                                                    foreach (Task_Ticket item in Model.Task_Ticket.OrderByDescending(c => c.CompletionDatetime).Where(x => x.CompletionDatetime != null))
                                                    {
                                                        j++;

                                                        str2 = "";
                                                        if (item.Name.Contains("qqqqaaaa"))
                                                        {
                                                            str2 = item.Name.Replace("qqqqaaaa", " ");

                                                        }
                                                        <tr>
                                                            <td>@j</td>
                                                            @if (str2 != "")
                                                            {
                                                                <td>


                                                                    <div class="col-lg-12">
                                                                        <div class="col-lg-11">
                                                                            <sup>

                                                                                <b>
                                                                                    (Edited)
                                                                                </b>

                                                                            </sup><br />
                                                                            @str2
                                                                        </div>
                                                                        <div class="col-lg-1">
                                                                            @if (item.Ticket_File != null)
                                                                            {
                                                                                <form action="@Url.Action("download", "Trainee")">
                                                                                    <input type="hidden" name="filepath" value="@item.Ticket_File" />
                                                                                    <input type="hidden" name="name" value="@item.Ticket_FileName" />
                                                                                    <button type="submit" class="" title="@item.Ticket_FileName"><span class="icon-download"></span></button>
                                                                                </form>
                                                                            }

                                                                        </div>
                                                                    </div>

                                                                </td>
                                                            }
                                                            else
                                                            {
                                                                <td>
                                                                    <div class="col-lg-12">
                                                                        <div class="col-lg-11"> @item.Name</div>
                                                                        <div class="col-lg-1">
                                                                            @if (item.Ticket_File != null)
                                                                            {
                                                                                <form action="@Url.Action("download", "Trainee")">
                                                                                    <input type="hidden" name="filepath" value="@item.Ticket_File" />
                                                                                    <input type="hidden" name="name" value="@item.Ticket_FileName" />
                                                                                    <button type="submit" class="" title="@item.Ticket_FileName"><span class="icon-download"></span></button>
                                                                                </form>
                                                                            }

                                                                        </div>
                                                                    </div>
                                                                </td>
                                                            }


                                                            <td>@item.CompletionDatetime.Value.ToString()</td>

                                                        </tr>
                                                    }
                                                }

                                            </tbody>
                                        </table>
                                    </div>


                                    <div style="height:400px;" class="tab-pane table-responsive text-center" id="badges-tab3">

                                        <div class="row">
                                            <div class="col-md-2"></div>
                                            <div id="canvas-holder" class="col-lg-8">
                                                <canvas id="div_chart"></canvas>
                                                <h3>Active &amp; Completed To Dos</h3>
                                            </div>
                                        </div>

                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>

            <!-- Comments -->
            <div class="panel panel-flat">
                <div class="panel-heading">
                    <h5 class="panel-title text-semiold"><i class="icon-bubbles4 position-left"></i> Comments</h5>
                    @*<div class="heading-elements">
                            <a href="#" class="btn bg-blue btn-xs btn-icon"><i class="icon-plus2"></i></a>
                        </div>*@
                </div>
                <div class="panel-body">
                    @*<ul style="height:500px; overflow:auto" class="media-list content-group-lg stack-media-on-mobile scroll">*@
                    <ul class="media-list content-group-lg stack-media-on-mobile scroll">
                        @{int flag = 0;}
                        @foreach (TaskCommentDTO item in ViewBag.comments)
                        {


                            if (flag == 0)
                            {
                                <input type="hidden" value="@item.Id" id="dropupID" />
                                <div id="diva"></div>
                                flag++;
                            }

                            <li class="media filediv" id="f_@item.Id">
                                <div class="media-left">


                                    @if (item.Image != null && item.Image != "")
                                    {
                                        string URL = General_Purpose.RefreshImageSignature((int)item.userId);

                                        <img src="@URL" onclick="openUserProfileModal('@item.userId')" class="img-circle img-sm" alt="">


                                    }
                                    else
                                    {
                                        <img src="~/Content/Images/ig.png" onclick="openUserProfileModal('@item.userId')" class="img-circle img-sm" alt="">
                                    }
                                </div>
                                <div class="media-body">
                                    <div class="media-heading">
                                        <a href="#" class="text-semibold">
                                            @item.Name
                                            <sup><b>@item.ROLE</b></sup>
                                        </a>
                                        <span class="media-annotation dotted">@item.CommentTime</span>
                                    </div>
                                    @if (item.Comment == "" || item.Comment == null)
                                    {
                                        <p class="text-semibold">File Attached: @item.File</p>
                                    }
                                    else
                                    {
                                        int len = item.Comment.Length;
                                        if (len > 100)
                                        {
                                            <p>@item.Comment.Substring(0, 100)<span id="@item.Id+dots">...</span><span style="display:none" id="@item.Id+more">@item.Comment.Substring(100, len - 101)</span>&nbsp;&nbsp; <a onclick="myFunction(@item.Id)" id="@item.Id+myBtn">Read more</a></p>

                                        }
                                        else
                                        {
                                            <p>@item.Comment</p>
                                        }
                                        @*<button onclick="myFunction(@item.Id)" id="@item.Id+myBtn">Read more</button>*@

                                    }



                                    <ul class="list-inline list-inline-separate text-size-small">

                                        <li>
                                            <ul class="icons-list">

                                                <li id="li_@item.Id" class="dropdown dropup text-muted">


                                                    <a href="#" onclick="AdjustIconlist(@item.Id)" class="dropdown-toggle text-bold" data-toggle="dropdown" aria-expanded="false">Actions <span class="caret"></span></a>

                                                    @if (Model.UserID != null)
                                                    {
                                                        <ul id="@item.Id+ul" class="dropdown-menu table-condensed text-size-small">
                                                            @if (item.File != null)
                                                            {
                                                                <li><a href="@Url.Action("download", "Trainee", new { filePath = item.FilePath, name = item.File })"> <i class="icon-download"></i>Download File</a></li>


                                                            }
                                                            else
                                                            {
                                                                <li><a> <i class="icon-download"></i>No File</a></li>

                                                            }
                                                            @if (item.userId == logedinuser.Id)
                                                            {
                                                                <li><a onclick="editComment('@item.Comment','@item.Id','@item.isManager','@item.File','@item.IsDocMFile')"><i class="icon-sync"></i> Update Comment</a></li>
                                                                <li class="divider"></li>
                                                                <li><a onclick="deleteComment('@item.Id','@item.isManager')"><i class="icon-cross3"></i>Delete</a></li>
                                                            }
                                                            <li><a onclick="showreply(@item.Id)"><i class="icon-reply"></i>Reply</a></li>


                                                        </ul>
                                                    }
                                                </li>
                                                <li>
                                                    @if (item.obj.Count() > 0)
                                                    {
                                                        <a onclick="commentreplies(@item.Id)" class="dropdown-toggle  text-bold" data-toggle="dropdown" aria-expanded="false">(@item.obj.Count()) Replies <span class="caret"></span></a>

                                                    }
                                                </li>
                                            </ul>


                                    </ul>
                                </div>
                            </li>

                            if (item.obj.Count() > 0)
                            {

                                @*<div style="margin-left:150px; " class="rreply scroll" id="@item.Id">
                                    <div style="height:250px; overflow:auto">*@
                                <div style="margin-left:150px; margin-bottom: 20rem;" class="rreply scroll" id="@item.Id">
                                    <div>
                                        @{int flag1 = 0;}

                                        @foreach (TaskCommentDTO2 item2 in item.obj.OrderBy(x => x.Id))
                                        {

                                            if (flag1 == 0)
                                            {
                                                <input type="hidden" value="@item2.Id" id="RepliesdropupID_@item2.Id" />
                                                <div id="divrep_@item2.Id"></div>
                                                flag1++;
                                            }



                                            <li class="media filediv">
                                                <div class="media-left">
                                                    @if (item2.Image != null && item2.Image != "")
                                                    {
                                                        string URL = General_Purpose.RefreshImageSignature((int)item2.userId);
                                                        <img src="@URL" onclick="openUserProfileModal('@item2.userId')" class="img-circle img-sm" alt="">


                                                    }
                                                    else
                                                    {
                                                        <img src="~/Content/Images/ig.png" onclick="openUserProfileModal('@item2.userId')" class="img-circle img-sm" alt="">
                                                    }

                                                </div>
                                                <div class="media-body">
                                                    <div class="media-heading">
                                                        <a href="#" class="text-semibold">
                                                            @item2.Name
                                                            <sup><b>@item2.ROLE</b></sup>
                                                        </a>
                                                        <span class="media-annotation dotted">@item2.CommentTime</span>
                                                    </div>
                                                    @if (item2.Comment == "" || item2.Comment == null)
                                                    {
                                                        <p class="text-semibold">File Attached: @item2.File</p>
                                                    }
                                                    else
                                                    {
                                                        int len2 = item2.Comment.Length;
                                                        if (len2 > 100)
                                                        {
                                                            <p>@item2.Comment.Substring(0, 100)<span id="@item2.Id+dots">...</span><span style="display:none" id="@item2.Id+more">@item2.Comment.Substring(100, len2 - 101)</span>&nbsp;&nbsp; <a onclick="myFunction(@item2.Id)" id="@item2.Id+myBtn">Read more</a></p>

                                                        }
                                                        else
                                                        {
                                                            <p>@item2.Comment</p>
                                                        }

                                                    }



                                                    <ul class="list-inline list-inline-separate text-size-small">

                                                        <li>
                                                            <ul class="icons-list">
                                                                <li class="dropdown dropup text-muted" id="@item2.Id">
                                                                    <a href="#" class="dropdown-toggle text-bold " onclick="AdjustRepliesIconlist(@item2.Id)" data-toggle="dropdown" aria-expanded="false">Actions <span class="caret"></span></a>
                                                                    @if (Model.UserID != null)
                                                                    {
                                                                        <ul class="dropdown-menu dropdown-menu-right text-size-small">
                                                                            @if (item2.File != null)
                                                                            {
                                                                                <li><a href="@Url.Action("download", "Trainee", new { filePath = item2.FilePath, name = item2.File })"> <i class="icon-download"></i>Download File</a></li>


                                                                            }
                                                                            else
                                                                            {
                                                                                <li><a> <i class="icon-download"></i>No File</a></li>

                                                                            }
                                                                            @if (item2.userId == logedinuser.Id)
                                                                            {
                                                                                <li><a onclick="editComment('@item2.Comment','@item2.Id','@item2.isManager','@item2.File','@item2.IsDocMFile')"><i class="icon-sync"></i> Update Comment</a></li>
                                                                                <li class="divider"></li>
                                                                                <li><a onclick="deleteComment('@item2.Id','@item2.isManager')"><i class="icon-cross3"></i>Delete</a></li>
                                                                            }



                                                                        </ul>
                                                                    }
                                                                </li>
                                                            </ul>


                                                    </ul>
                                                </div>
                                            </li>



                                        }

                                    </div>
                                    @if (Model.CompletionDate == null && (logedinuser.Role == 1 || logedinuser.Role == 3 || logedinuser.Id == Model.CreatedID) && Model.UserID != null)
                                    {

                                        <form action="@Url.Action("addComment", "Task", new { repcomntid = item.Id })" method="post" enctype="multipart/form-data">
                                            <h6 class="text-semibold"><i class="icon-pencil7 position-left"></i> Your Reply</h6>
                                            <input type="hidden" name="isModal" value="@ViewBag.isModal" />
                                            <input type="hidden" name="way" value="@ViewBag.way" />
                                            <input type="hidden" name="department" value="@ViewBag.department" />
                                            <input type="hidden" name="sid" value="@ViewBag.sid" />
                                            <input type="hidden" name="DivDepID" id="DivDepID" value="@ViewBag.DivDepID" />

                                            <div class="content-group">
                                                <div class="col-md-12">

                                                    <textarea rows="4" id="yourreply" class="form-control" onkeyup="ValidateCommentText(this)" maxlength="500" required name="comment"></textarea><br />
                                                </div>

                                                <div class="row">
                                                    <div class="col-md-4">
                                                        Upload File &nbsp;&nbsp;<span class="small text-danger">(Max 10 MBs)</span>
                                                        
                                                        <br />
                                                        <p class="text-danger" id="errorMessageCmtReply"></p>
                                                    </div>
                                                    <div class="col-md-4">
                                                        <input type="file" name="file" onchange="ValidateSizeCommentReply(this)" />
                                                    </div>
                                                </div>
                                                        <br />

                                                        <!-- For selecting location in document mnager starts, By Wajeeh -->
                                                        @if (Company.IsDocManager == 1)
                                                        {
                                                            string mainDiv = "customLocPathMainBtn" + item.Id;

                                            <div class="row">
                                                <div id="@mainDiv">
                                                    <div class="col-md-4">
                                                        <h6 class="small">Select Document Manager Save Location:</h6>

                                                    </div>
                                                    <div class="col-md-4">
                                                        <button style="margin-bottom:15px;" onclick="selectFolderFromDocM('-1','45',@item.Id)" title="Select custom location in Document Manager" type="button" class="btn btn-sm bg-primary-400">Location</button>

                                                    </div>
                                                    
                                                    @{
                                                        string div = "customLocPathDiv" + item.Id.ToString();
                                                        string customInputDiv = "customLocPath" + item.Id.ToString();
                                                        string customInputHidden = "customLocPathHidden" + item.Id.ToString();
                                                    }

                                                    <div class="col-md-12">
                                                        <div style="display:none;" id="@div" class="form-group col-md-12">
                                                            <label class="control-label"><b>Your File will be saved at this path in document manager:</b></label>
                                                            <button title="Delete Path" type="button" onclick="removeSelectFolderPath('45',@item.Id)" class="close" aria-hidden="true" style="">×</button>
                                                            <input readonly name="customLocPath" id="@customInputDiv" class="form-control" type="text" />
                                                            <input name="FolderId" id="@customInputHidden" class="form-control" type="hidden" />
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                                            

                                                        }
                                                        <!-- For selecting location in document mnager ends, By Wajeeh -->

                                                    

                                                @if (Company.IsDocManager == 1)
                                                {
                                                    string checkBox = "IsDocFileCmtRply" + item.Id;
                                                    string spin = "spinnerCmtRply" + item.Id;
                                                    string ggg = "FileDivCmtRply" + item.Id;
                                                    <hr />
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <label class="control-label" style="margin-left:0px;">Upload file from Document Manager</label>
                                                </div>
                                                <div class="col-md-4">
                                                    <input onchange="FileDivCmtRply(@item.Id)" class="col-md-2" type="checkbox" id="@checkBox" />
                                                    <span id="@spin" style="display:none" class="col-md-2"><i class="icon-spinner6 spinner position-left"></i></span>
                                                </div>
                                                
                                                <div id="@ggg" class="col-md-12" hidden>
                                                    <label class="control-label">Doc Manager Files</label>
                                                    <select class="select-results-color" id="DocMIDCmtRply" name="DocMID">
                                                        <option value="">Please Choose a File</option>
                                                    </select>
                                                    <br />
                                                    <br />
                                                    <br />
                                                    <br />
                                                </div>
                                            </div>
                                                    <hr />
                                                }
                                                <div class="col-md-12">

                                                    <button style="margin-top:-30px; margin-right:10px; z-index:11;" id="submitReply" type="submit" class="btn  btn-sm  bg-primary-400 text-right pull-right"><i class="glyphicon glyphicon-send"></i> Send</button>

                                                </div>
                                                <br />
                                                <br />
                                                <br />
                                                <br />

                                            </div>

                                            <input type="hidden" name="taskId" value="@General_Purpose.EncryptId(Model.Id)" />




                                        </form>

                                    }
                                    <br />

                                </div>


                            }

                        }

                    </ul>
                    @if (Model.CompletionDate == null && (logedinuser.Role == 1 || logedinuser.Role == 3 || logedinuser.Id == Model.CreatedID) && Model.UserID != null)
                    {
                        <form action="@Url.Action("addComment", "Task")" method="post" enctype="multipart/form-data">
                            <h6 id="yourcomment" class="text-semibold"><i class="icon-pencil7 position-left"></i> Your comment</h6>
                            <input type="hidden" name="repcomntid" id="repcomntid" />
                            <input type="hidden" name="isModal" value="@ViewBag.isModal" />
                            <input type="hidden" name="way" value="@ViewBag.way" />
                            <input type="hidden" name="department" value="@ViewBag.department" />
                            <input type="hidden" name="sid" value="@ViewBag.sid" />
                            <input type="hidden" name="DivDepID" id="DivDepID" value="@ViewBag.DivDepID" />
                            <div class="content-group">
                                <div class="col-md-12">

                                    <button type="button" id="cancelreplybtn" onclick="cancelreply()" class="close" aria-hidden="true">&times;</button>
                                    <br />





                                    <textarea id="replycomment" style="opacity:0.5" rows="3" readonly class="form-control" maxlength="500" name="replycomment"></textarea><br />
                                    <button type="button" style="font-size:small" disabled id="charCounter" class="close " aria-hidden="true">500</button>

                                    <textarea rows="5" id="maincomment" onkeyup="ValidateCommentText(this,'yes')" maxlength="500" class="form-control" name="comment"></textarea><br />
                                </div>
                                <div class="row">
                                    <div class="col-md-3">
                                        Upload File &nbsp;&nbsp;<span class="small text-danger">(Max 10 MBs)</span>
                                        <br />
                                        <p class="text-danger" id="errorMessageCmt"></p>
                                    </div>
                                    <div class="col-md-4">
                                        <input type="file" name="file" onchange="ValidateSizeComment(this)" />
                                    </div>
                                </div>
                                <br />
                                        <!-- For selecting location in document mnager starts, By Wajeeh -->
                                        @if (Company.IsDocManager == 1)
                                        {
                            <div class="row">
                                <div id="customLocPathMainBtn">
                                    <div class="col-md-3">
                                        <h6 class="small">Select Document Manager Save Location:</h6>
                                    </div>
                                    <div class="col-md-4">
                                        <button style="margin-bottom:25px;" onclick="selectFolderFromDocM('-1','0')" title="Select custom location in Document Manager" type="button" class="btn btn-sm bg-primary-400">Location</button>
                                    </div>
                                    

                                    <div style="display:none;" id="customLocPathDiv" class="form-group col-md-12">
                                        <label class="control-label"><b>Your File will be saved at this path in document manager:</b></label>
                                        <button title="Delete Path" type="button" onclick="removeSelectFolderPath('0')" class="close" aria-hidden="true" style="">×</button>
                                        <input readonly name="customLocPath" id="customLocPath" class="form-control" type="text" />
                                        <input name="FolderId" id="customLocPathHidden" class="form-control" type="hidden" />
                                    </div>
                                </div>
                            </div>
                                            

                                        }
                                        <!-- For selecting location in document mnager ends, By Wajeeh -->

                                   



                                @if (Company.IsDocManager == 1)
                                {
                                    <hr />
                            <div class="row">
                                <div class="col-md-4">
                                    <label class="control-label">Upload file from Document Manager</label>
                                </div>
                                <div class="col-md-4">
                                    <input onchange="FileDivCmt()" class="col-md-2" type="checkbox" id="IsDocFileCmt" />
                                    <span id="spinnerCmt" style="display:none" class="col-md-2"><i class="icon-spinner6 spinner position-left"></i></span>
                                </div>
                                
                                <div id="FileDivCmt" class="form-group col-md-12" hidden>
                                    <label class="control-label ml-10">Doc Manager Files</label>
                                    <select class="select-results-color" id="DocMIDCmt" name="DocMID">
                                        <option value="">Please Choose a File</option>
                                    </select>
                                </div>
                            </div>
                            <hr />
                                }

                            </div>
                            <input type="hidden" id="TaskId" name="taskId" value="@General_Purpose.EncryptId(Model.Id)" />
                            <div class="text-right">

                                <button type="submit" id="submit" class="btn  btn-sm  bg-primary-400"><i class="glyphicon glyphicon-send"></i> Add comment</button>
                            </div>
                        </form>
                    }
                </div>
            </div>
            <!-- /comments -->
        </div>

        <div class="col-lg-3">
            <!-- Timer -->
            <div class="panel panel-flat">
                <div class="panel-heading">
                    <h7 class="panel-title"><i class="icon-watch position-left"></i> Task Timer</h7>
                    <div class="heading-elements">

                    </div>
                </div>
                @{
                    DateTime d = (DateTime)Model.EndDate;
                    //d = d.AddDays(-1);
                }
                <div class="panel-body">
                    @if (Model.User1 != null)
                    {
                        if (Model.CompletionDate == null)
                        {
                            if (d < DateTime.Now)
                            {
                                <ul class="timer mb-10">
                                    <li id="expire" class="text-danger">
                                        LATE
                                    </li>
                                </ul>

                            }
                            else
                            {
                                <ul class="timer-weekdays mb-10">
                                    @{
                                        var day = d.DayOfWeek.ToString();
                                    }
                                    @if (day == "Friday")
                                    {
                                        <li class="active"><a href="#" class="label label-danger">@d.DayOfWeek</a></li>
                                    }
                                    else
                                    {
                                        <li><a href="#" class="label label-default">Friday</a></li>

                                    }
                                    @if (day == "Saturday")
                                    {
                                        <li class="active"><a href="#" class="label label-danger">@d.DayOfWeek</a></li>
                                    }
                                    else
                                    {
                                        <li><a href="#" class="label label-default">Saturday</a></li>

                                    }
                                    @if (day == "Sunday")
                                    {
                                        <li class="active"><a href="#" class="label label-danger">@d.DayOfWeek</a></li>
                                    }
                                    else
                                    {
                                        <li><a href="#" class="label label-default">Sunday</a></li>

                                    }
                                    @if (day == "Monday")
                                    {
                                        <li class="active"><a href="#" class="label label-danger">@d.DayOfWeek</a></li>
                                    }
                                    else
                                    {
                                        <li><a href="#" class="label label-default">Monday</a></li>

                                    }
                                    @if (day == "Tuesday")
                                    {
                                        <li class="active"><a href="#" class="label label-danger">@d.DayOfWeek</a></li>
                                    }
                                    else
                                    {
                                        <li><a href="#" class="label label-default">Tuesday</a></li>

                                    }
                                    @if (day == "Wednesday")
                                    {
                                        <li class="active"><a href="#" class="label label-danger">@d.DayOfWeek</a></li>
                                    }
                                    else
                                    {
                                        <li><a href="#" class="label label-default">Wednesday</a></li>

                                    }
                                    @if (d.DayOfWeek.ToString() == "Thursday")
                                    {
                                        <li class="active"><a href="#" class="label label-danger">@d.DayOfWeek</a></li>
                                    }
                                    else
                                    {
                                        <li><a href="#" class="label label-default">Thursday</a></li>

                                    }
                                </ul>

                                <hr />
                                <ul class="timer mb-10">

                                    <li id="d">

                                    </li>
                                    <li id="h">

                                    </li>
                                    <li id="m">

                                    </li>
                                    <li id="s">

                                    </li>

                                </ul>
                            }
                        }

                        else
                        {
                            <ul class="timer mb-10">
                                <li id="expire" class="text-success">
                                    <h5>Completed</h5>
                                </li>
                            </ul>
                            if ((logedinuser.Role == 2 || logedinuser.Role == 4 || logedinuser.Role == 1))
                            {
                                <center>


                                    <a href="#" data-target="#statusModal" data-toggle="modal" class="btn btn-sm bg-primary-400 text-bold">Reopen Task</a>
                                </center>
                            }

                        }
                    }
                    <div id="clock"></div>
                </div>
            </div>
            <!-- /timer -->
            <!--LMS COurse-->
            @{

                int CourseID = -1;
                int CuserTaskID = -1;
                Course_UserTask cou = new Course_UserTaskBL().getCourse_UserTaskList().Where(c => c.User_TaskID == Model.Id).FirstOrDefault();
                string CuserTaskEncryptedId = "";
                string CourseEncryptedId = "";
                Course course = new Course();
                User_Task ut = new User_Task();
                if (cou != null && Model.UserID != null)
                {
                    ut = new User_TaskBL().getUser_TasksById((int)cou.User_TaskID);

                    course = new CourseBL().getCourseById((int)cou.CourseID);

                    if (logedinuser.Id == Model.UserID && course.IsPublished == 1)
                    {
                        CourseID = (int)cou.CourseID;
                        CuserTaskID = cou.Id;
                        CuserTaskEncryptedId = General_Purpose.EncryptId(CuserTaskID);
                        CourseEncryptedId = General_Purpose.EncryptId(CourseID);
                    }

                }
            }
            @if (cou != null && ut.UserID == logedinuser.Id && Model.UserID != null)
            {
                if (Company.IsLMS == 1)
                {
                    <div class="panel panel-flat">
                        <div class="panel-heading">
                            <h7 class="panel-title"><i class="icon-list position-left"></i> Attached Course</h7>
                            <div class="heading-elements">
                            </div>
                        </div>
                        <div class="panel-body">
                            <div class="col-lg-12">
                                <div class="col-lg-6">
                                    @course.Name
                                </div>

                                <div class="col-lg-6">
                                    @if (course.IsScorm == 1)
                                    {
                                        string url = HttpContext.Current.Request.Url.AbsoluteUri;
                                        ScormCloud.Configuration = new RusticiSoftware.HostedEngine.Client.Configuration(
                    "https://cloud.scorm.com/EngineWebServices",
                    ProjectVaraiables.ScormAppId,
                    ProjectVaraiables.ScormSecretKey,
                       ProjectVaraiables.ScormOrigin);

                                <a href="@ScormCloud.RegistrationService.GetLaunchUrl(cou.Id.ToString(),HttpContext.Current.Request.Url.AbsoluteUri)"> View Course </a>


                            }
                            else
                            {
                                <a href="@ProjectVaraiables.LMS_URL/Course/CourseDetails?v=@CourseEncryptedId&CuserTask=@CuserTaskEncryptedId"> View Course </a>
                            }

                                </div>
                            </div>
                        </div>
                    </div>
                }
            }

            <!--Frequency Tasks-->
            @if (logedinuser.Role == 1 || logedinuser.Role == 2 || logedinuser.Role == 4 || logedinuser.Role == 3)
            {
                <div class="panel panel-flat">
                    <div class="panel-heading">
                        <h7 class="panel-title"><i class="icon-files-empty position-left"></i> Frequency Tasks </h7>

                        <div class="heading-elements">


                            <ul class="icons-list col-lg-12">
                                @*<li><a data-action="collapse"></a></li>*@
                                @{
                                    int newcreatedId = -1;

                                    User_Task uss = new User_TaskBL().getUser_TasksList().Where(x => x.ParentID == Model.Id).FirstOrDefault();

                                    if (uss != null)
                                    {
                                        if (uss.CreatedID != null)
                                        {
                                            newcreatedId = -1;
                                        }
                                        else
                                        {
                                            newcreatedId = 1;
                                        }
                                    }
                                    else
                                    {
                                        User_Task uss1 = new User_TaskBL().getUser_TasksList().Where(x => x.Id == Model.Id).FirstOrDefault();

                                        if (uss1 != null)
                                        {
                                            if (uss1.CreatedID != null)
                                            {
                                                newcreatedId = -1;
                                            }
                                            else
                                            {
                                                newcreatedId = 1;
                                            }
                                        }
                                    }
                                    //if (uss == null)
                                    //{
                                    //    User_Task uss1 = new User_TaskBL().getUser_TasksList().Where(x => x.Id == Model.Id).FirstOrDefault();
                                    //    newcreatedId = Convert.ToInt16(uss1.CreatedID) ;
                                    //}
                                    //else
                                    //{
                                    //    newcreatedId = Convert.ToInt16(uss.CreatedID);
                                    //}
                                }

                                @if ((Model.DepartmentID != null || Model.DivisionID != null) && Model.User1 != null && logedinuser.Role != 3)
                                {
                                    if (Model.RepeatTime != null)
                                    {
                                        <li class="col-lg-2"><a title="You are unable to increase Division/Department recursive task" data-toggle="modal"> <i class="icon-add"></i></a></li>
                                        <li class="col-lg-2"> <a onclick="deleteall()" title="Delete all Rescursive tasks of '@Model.User1.FirstName @Model.User1.LastName'  including this"><i class="icon-trash-alt"></i></a></li>

                                    }

                                }
                                else
                                {
                                    if (Model.RepeatTime != null && Model.User1 != null && logedinuser.Role != 3)
                                    {
                                        <li class="col-lg-2"><a title="Increase Recursive task" data-target="#increaseFreqTask" data-toggle="modal"> <i class="icon-add"></i>&nbsp;</a></li>
                                        <li class="col-lg-2"> <a onclick="deleteall()" title="Delete all Rescursive tasks of '@Model.User1.FirstName @Model.User1.LastName'  including this"><i class="icon-trash-alt"></i></a></li>

                                    }
                                    else if (Model.RepeatTime != null && Model.User1 != null && logedinuser.Role == 3 && newcreatedId == 1)
                                    {
                                        <li class="col-lg-2"> <a onclick="deleteall()" title="Delete all Rescursive tasks of '@Model.User1.FirstName @Model.User1.LastName'  including this"><i class="icon-trash-alt"></i></a></li>
                                    }

                                }



                            </ul>

                        </div>
                    </div>
                    <div class="panel-body" style="max-height:295px; overflow:auto">
                        @{
                            User_Task us = new User_TaskBL().getUser_TasksList().Where(x => x.ParentID == Model.Id).FirstOrDefault();
                        }
                        @if ((logedinuser.Role == 1 || logedinuser.Role == 2 || logedinuser.Role == 4 || logedinuser.Role == 3) && Model.ParentID != null)
                        {
                            User_Task u = new User_TaskBL().getUser_TasksById((int)Model.ParentID);
                            List<User_Task> list = new User_TaskBL().getUser_TasksList().Where(c => c.IsActive == 1 && c.ParentID == u.Id).ToList();
                            list.Insert(0, u);
                            <h5 style="margin-left:48px">Start Dates</h5>

                            foreach (User_Task x in list)
                            {
                                if (x.Id == Model.Id)
                                {
                                    <div id="@x.Id" class="col-lg-12 frehover">

                                        <div class="col-lg-10">
                                            @*<div class="col-lg-4"><b>Start Date:</b></div>*@
                                            <div class="col-lg-12"><b>@x.StartDate</b></div>
                                        </div>


                                    </div>
                                }
                                else
                                {
                                    <div id="@x.Id" class="col-lg-12 frehover">
                                        <div class="col-lg-10">
                                            @*<div class="col-lg-4">Start Date:</div>*@
                                            @if (x.User1.Role == 3)
                                            {
                                                <div class="col-lg-12"><a target="_blank" title="@x.User1.FirstName @x.User1.LastName" href="@Url.Action("taskdetails","Task",new { v = General_Purpose.EncryptId(x.Id), isModal = "01" })">@x.StartDate</a></div>
                                            }
                                            else
                                            {
                                                <div class="col-lg-12"><a target="_blank" title="@x.User1.FirstName @x.User1.LastName" href="@Url.Action("taskdetails","Manager",new { v = General_Purpose.EncryptId(x.Id), isModal = "01" })">@x.StartDate</a></div>
                                            }

                                        </div>
                                        <div class="col-lg-2">
                                            @if (x.CreatedID == null && logedinuser.Role == 3)
                                            {
                                                <button type="button" id="RemoveFreqTask" onclick="deleteFreqUtask('@x.Id')" title="Delete" class="close" aria-hidden="true">&times;</button>
                                            }
                                            else if (logedinuser.Role != 3)
                                            {
                                                <button type="button" id="RemoveFreqTask" onclick="deleteFreqUtask('@x.Id')" title="Delete" class="close" aria-hidden="true">&times;</button>
                                            }
                                        </div>
                                    </div>
                                }

                            }

                        }
                        else
                        {
                            if ((logedinuser.Role == 1 || logedinuser.Role == 2 || logedinuser.Role == 4 || logedinuser.Role == 3) && us != null)
                            {
                                User_Task u1 = new User_TaskBL().getUser_TasksById((int)Model.Id);
                                List<User_Task> list1 = new User_TaskBL().getUser_TasksList().Where(c => c.IsActive == 1 && c.ParentID == Model.Id).ToList();
                                list1.Insert(0, u1);
                                <h5 style="margin-left:48px">Start Dates</h5>
                                foreach (User_Task x in list1)
                                {
                                    if (x.Id == Model.Id)
                                    {
                                        <div id="@x.Id" class="col-lg-12 frehover">

                                            <div class="col-lg-10">
                                                @*<div class="col-lg-4"><b>Start Date:</b></div>*@
                                                <div class="col-lg-12"><b>@x.StartDate</b></div>
                                            </div>


                                        </div>
                                    }
                                    else
                                    {
                                        <div id="@x.Id" class="col-lg-12 frehover">
                                            <div class="col-lg-10">
                                                @*<div class="col-lg-4">Start Date:</div>*@
                                                @if (x.User1.Role == 3)
                                                {
                                                    <div class="col-lg-12"><a target="_blank" title="@x.User1.FirstName @x.User1.LastName" href="@Url.Action("taskdetails","Task",new { v = General_Purpose.EncryptId(x.Id), isModal = "01" })">@x.StartDate</a></div>
                                                }
                                                else
                                                {
                                                    <div class="col-lg-12"><a target="_blank" title="@x.User1.FirstName @x.User1.LastName" href="@Url.Action("taskdetails","Manager",new { v = General_Purpose.EncryptId(x.Id), isModal = "01" })">@x.StartDate</a></div>
                                                }

                                            </div>
                                            <div class="col-lg-2">
                                                @if (x.CreatedID == null && logedinuser.Role == 3)
                                                {
                                                    <button type="button" title="Delete" id="RemoveFreqTask" onclick="deleteFreqUtask('@x.Id')" class="close" aria-hidden="true">&times;</button>
                                                }
                                                else if (logedinuser.Role != 3)
                                                {
                                                    <button type="button" title="Delete" id="RemoveFreqTask" onclick="deleteFreqUtask('@x.Id')" class="close" aria-hidden="true">&times;</button>
                                                }
                                            </div>
                                        </div>
                                    }

                                }

                            }

                        }
                    </div>

                </div>
            }

            <!--/Frequency Tasks-->
            <!-- Task details -->
            <div class="panel panel-flat">
                <div class="panel-heading">
                    <h7 class="panel-title"><i class="icon-files-empty position-left"></i> Task Details</h7>
                    <div class="heading-elements">
                        <ul class="icons-list">
                            <li><a data-action="collapse"></a></li>

                        </ul>
                    </div>
                </div>
                <table class="table table-borderless table-xs content-group-sm">
                    <tbody>
                        @*@if (Model.CanvasCourseId != null && Model.CanvasCourseId.HasValue)
                            {
                                string canvasUrl = ProjectVaraiables.CanvasRestClient + "/courses/" + Model.CanvasCourseId;
                                <tr>
                                    <td><i class="icon-alarm-add position-left"></i> Canvas Course</td>
                                    <td class="text-right"><a href="@canvasUrl" target="_blank"> Link</a></td>
                                </tr>
                                if (ViewBag.CanvasCourse != null)
                                {
                                    <tr>
                                        <td><i class="icon-alarm-add position-left"></i><b> Canvas Course Name</b></td>
                                        <td class="text-right"><b> @ViewBag.CanvasCourse.name</b></td>
                                    </tr>
                                }


                            }*@

                        @{
                            Task tsk = new TaskBL().getTasksById(Convert.ToInt32(Model.TaskID));

                            Department dprt = new DepartmentBL().getDepartmentsById(Convert.ToInt32(tsk.DepartmentID));

                            string DReminder = "";


                            if (Model.DailyReminder != null)
                            {
                                if (Model.DailyReminder == 1)
                                { DReminder = "Daily"; }
                                else if (Model.DailyReminder == 2)
                                { DReminder = "Weekly"; }
                                else
                                { DReminder = "Monthly"; }

                            }

                        }
                        @if (Model.BeforeDDateReminder != null && Model.UserID == logedinuser.Id)
                        {
                            <tr>
                                <td><i class="icon-reminder position-left"></i>Reminder 1</td>
                                <td class="text-right">@Model.BeforeDDateReminder.Value.ToString("MM/dd/yyyy")</td>
                            </tr>
                        }
                        @if (Model.DailyReminder != null && Model.UserID == logedinuser.Id)
                        {
                            <tr>
                                <td><i class="icon-reminder position-left"></i>Reminder 2</td>
                                <td class="text-right">@DReminder</td>
                            </tr>
                        }
                        <tr>
                            <td><i class="icon-city position-left"></i>Division Name </td>
                            <td class="text-right">@dprt.Division.Name</td>
                        </tr>
                        <tr>
                            <td><i class="icon-archive position-left"></i>Department Name </td>
                            <td class="text-right">@dprt.Name</td>
                        </tr>
                        <tr>
                            <td><i class="icon-alarm-add position-left"></i>Task Type</td>
                            <td class="text-right">@Model.Task.TaskType.Name</td>
                        </tr>
                        <tr>
                            <td><i class="icon-alarm-add position-left"></i> Start Date</td>
                            <td class="text-right">@Model.StartDate.Value.ToString("MM/dd/yyyy")</td>
                        </tr>
                        <tr>
                            @*<td><i class="icon-alarm-add position-left"></i> End Date & Time</td>*@
                            <td><i class="icon-alarm-add position-left"></i> End Date</td>
                            <td class="text-right">@d.ToString("MM/dd/yyyy")</td>
                        </tr>
                        @if (Model.CompletionDate != null)
                        {
                            <tr>
                                <td><i class="icon-alarm-add position-left"></i> Completion Date & Time</td>
                                <td class="text-right">@Model.CompletionDate.Value</td>
                            </tr>

                        }
                        else
                        {
                            <tr>
                                <td><i class="icon-alarm-add position-left"></i> Completion Date & Time</td>
                                <td class="text-right">Not Completed Yet</td>
                            </tr>
                        }
                        <tr>
                            <td><i class="icon-alarm-check position-left"></i> Hours</td>
                            <td class="text-right">@Model.Hours</td>
                        </tr>
                        <tr>
                            <td><i class="icon-circles2 position-left"></i> Priority:</td>
                            <td class="text-right">
                                <div class="btn-group">
                                    @if (!Model.Priority.HasValue)
                                    {
                                        <span></span>

                                    }
                                    else if (General_Purpose.getPriorityValue(Model.Priority.Value) == "Medium")
                                    {
                                        <span class="mediumPriorityButton">Medium</span>
                                    }
                                    else if (General_Purpose.getPriorityValue(Model.Priority.Value) == "Low")
                                    {
                                        <span class="lowPriorityButton">Low</span> }
                                    else
                                    {
                                        <span class="highPriorityButton">High</span>}
                                    @*<a href="#" class="label label-danger dropdown-toggle" data-toggle="dropdown">Highest <span class="caret"></span></a>
                                        <ul class="dropdown-menu dropdown-menu-right">
                                            <li><a href="#"><span class="status-mark position-left bg-danger"></span> Highest priority</a></li>
                                            <li><a href="#"><span class="status-mark position-left bg-info"></span> High priority</a></li>
                                            <li><a href="#"><span class="status-mark position-left bg-primary"></span> Normal priority</a></li>
                                            <li><a href="#"><span class="status-mark position-left bg-success"></span> Low priority</a></li>
                                        </ul>*@
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td><i class="icon-history position-left"></i> CEU:</td>
                            <td class="text-right">@Model.CEU</td>
                        </tr>
                        <tr>
                            <td><i class="icon-history position-left"></i> Grade (%):</td>
                            @if (Model.Grad != null)
                            {
                                <td class="text-right">@Model.Grad %</td>
                            }

                        </tr>
                        <tr>
                            <td><i class="icon-file-check position-left"></i> Status:</td>
                            @if (!Model.Status.HasValue)
                            {
                                <td class="text-right">

                                    @General_Purpose.getStatusValue(0)
                                </td>
                            }
                            else
                            {
                                <td class="text-right">

                                    @General_Purpose.getStatusValue(Model.Status.Value)
                                </td>
                            }
                        </tr>
                    </tbody>
                </table>

            </div>
            <!-- /task details -->
            <!-- Attached files -->
            <div class="panel panel-flat">
                <div class="panel-heading">
                    <h7 class="panel-title"><i class="icon-link position-left"></i> Attached Files</h7>
                    <div class="heading-elements">
                        <ul class="icons-list">
                            <li><a data-action="collapse"></a></li>

                        </ul>
                    </div>
                </div>

                <div class="panel-body" style="height:295px; overflow:auto">
                    <ul class="media-list">

                        @foreach (TaskCommentDTO item in ViewBag.Ticketfiles)
                        {
                            if (item.File != null)
                            {
                                <li class="media">
                                    <div class="media-left media-middle">
                                        <i class="icon-file-text3 icon-2x text-muted"></i>
                                    </div>
                                    <div class="media-body">
                                        <a href="@Url.Action("download", "Trainee", new { filePath = item.FilePath, name = item.File })" title="Download" class="media-heading text-semibold">@item.File</a>
                                        <ul class="list-inline list-inline-separate list-inline-condensed text-size-mini text-muted">
                                            <li>Date: @item.CommentTime</li>
                                            <li>Size: @item.FileSize</li>
                                            <li>Added by <a href="@Url.Action("download", "Trainee", new { filePath = item.FilePath, name = item.File })" title="Download">@item.Name</a></li>
                                        </ul>
                                    </div>
                                    <div class="media-right media-middle">
                                        <ul class="icons-list">
                                            <li><a href="@Url.Action("download", "Trainee", new { filePath = item.FilePath, name = item.File })" title="Download"><i class="icon-download"></i></a></li>
                                        </ul>
                                    </div>
                                </li>


                            }
                        }
                        @foreach (TaskCommentDTO item in ViewBag.comments1)
                        {
                            if (item.File != null)
                            {
                                <li class="media">
                                    <div class="media-left media-middle">
                                        <i class="icon-file-text3 icon-2x text-muted"></i>
                                    </div>
                                    <div class="media-body">
                                        <a href="@Url.Action("download", "Trainee", new { filePath = item.FilePath, name = item.File })" title="Download" class="media-heading text-semibold">@item.File</a>
                                        <ul class="list-inline list-inline-separate list-inline-condensed text-size-mini text-muted">
                                            <li>Date: @item.CommentTime</li>
                                            <li>Size: @item.FileSize</li>
                                            <li>Added by <a href="@Url.Action("download", "Trainee", new { filePath = item.FilePath, name = item.File })" title="Download">@item.Name</a></li>
                                        </ul>
                                    </div>
                                    <div class="media-right media-middle">
                                        <ul class="icons-list">
                                            <li><a href="@Url.Action("download", "Trainee", new { filePath = item.FilePath, name = item.File })" title="Download"><i class="icon-download"></i></a></li>
                                        </ul>
                                    </div>
                                </li>


                            }
                            if (item.obj.Count() > 0)
                            {

                                foreach (TaskCommentDTO2 item2 in item.obj)
                                {
                                    if (item2.File != null)
                                    {
                                        <li class="media">
                                            <div class="media-left media-middle">
                                                <i class="icon-file-text3 icon-2x text-muted"></i>
                                            </div>
                                            <div class="media-body">
                                                <a href="@Url.Action("download", "Trainee", new { filePath = item2.FilePath, name = item2.File })" title="Download" class="media-heading text-semibold">@item2.File</a>
                                                <ul class="list-inline list-inline-separate list-inline-condensed text-size-mini text-muted">
                                                    <li>Date: @item.CommentTime</li>
                                                    <li>Size: @item2.FileSize</li>
                                                    <li>Added by <a href="@Url.Action("download", "Trainee", new { filePath = item.FilePath, name = item.File })" title="Download">@item2.Name</a></li>
                                                </ul>
                                            </div>
                                            <div class="media-right media-middle">
                                                <ul class="icons-list">
                                                    <li><a href="@Url.Action("download", "Trainee", new { filePath = item2.FilePath, name = item2.File })" title="Download"><i class="icon-download"></i></a></li>
                                                </ul>
                                            </div>
                                        </li>
                                    }
                                }
                            }
                        }

                    </ul>
                </div>
            </div>
            <!-- /attached files -->


            <div class="panel panel-flat">
                <div class="panel-heading">
                    <h7 class="panel-title"><i class="icon-users position-left"></i>  Employees</h7>
                    <div class="heading-elements">
                        <ul class="icons-list">
                            @if ((logedinuser.Role == 1 || logedinuser.Role == 2) && Model.UserID != null)
                            {
                                <li><a data-toggle="modal" data-target="#AssignToAnother" title="Assign To Another"> <i class="glyphicon glyphicon-check"></i></a></li>
                            }
                            @if ((logedinuser.Role == 1 || logedinuser.Id == Model.CreatedID) && Model.User1 != null && Model.CompletionDate == null)
                            {
                                <li><a onclick="groupTaskValues()" title="Change To Group Task" data-toggle="modal"> <i class="icon-reset"></i></a></li>

                            }


                        </ul>
                    </div>

                </div>
                <div class="panel-body">
                    <ul class="media-list">
                        @{
                            int userProfileId = -1;
                        }
                        @if (Model.CreatedID != null && Model.UserID != null)
                        {

                            userProfileId = Model.User.Id;

                            <li class="media">
                                <div class="media-left">

                                    @if (Model.User.Image == "" || Model.User.Image == null)
                                    {
                                        <img src="~/Content/Images/ig.png" onclick="openUserProfileModal('@userProfileId')" class="img-circle img-sm" alt="">

                                    }
                                    else
                                    {
                                        string URL = General_Purpose.RefreshImageSignature((int)userProfileId);
                                        <img src="@URL" onclick="openUserProfileModal('@userProfileId')" class="img-sm img-circle" alt="">
                                    }


                                </div>
                                <div class="media-body media-middle text-semibold">
                                    @if (logedinuser.Id == Model.User.Id)
                                    {
                                        <span>You</span>

                                    }
                                    else
                                    {
                                        <span>@Model.User.FirstName  @Model.User.LastName</span>
                                    }


                                    <div class="media-annotation">Assigned the Task</div>
                                </div>

                            </li>
                        }

                        @if (Model.UserID != null)
                        {
                            userProfileId = Model.User1.Id;

                            <li class="media">
                                <div class="media-left">

                                    @if (Model.User1.Image == "" || Model.User1.Image == null)
                                    {

                                        <img src="~/Content/Images/ig.png" onclick="openUserProfileModal('@userProfileId')" class="img-circle img-sm" alt="">

                                    }
                                    else
                                    {
                                        string URL = General_Purpose.RefreshImageSignature((int)userProfileId);
                                        <img src="@URL" onclick="openUserProfileModal('@userProfileId')" class="img-sm img-circle" alt="">
                                    }



                                </div>
                                <div class="media-body media-middle text-semibold">


                                    @if (logedinuser.Id == Model.User1.Id)
                                    {
                                        <span>You</span>

                                    }
                                    else
                                    {
                                        <span>@Model.User1.FirstName @Model.User1.LastName</span>
                                    }
                                    @if (Model.CreatedID == null)
                                    {<div class="media-annotation">Assigned and Created the Task </div>
                                    }
                                    else
                                    {
                                        <div class="media-annotation">Assigned to Task </div>
                                    }
                                </div>

                            </li>
                        }



                    </ul>
                </div>
            </div>


        </div>
    </div>
    <!-- /detailed task -->
</div>


<script>
    function SetDD() {
        var val = $("#DailyReminder").val();
        if (val == "") {
            $('#Rsubmit').attr('disabled', true)
        } else {
            $('#Rsubmit').attr('disabled', false)
        }
    }
</script>
<script>

    function deleteall() {
        var backurl = $("#backbtn").attr("href");
        $("#BackURL").val(backurl);
        $("#deletefrequencytasks").modal("show");
        //          var origin = window.location.origin;
        //                               var empurl;
        //                           //    var manurl;

        //       empurl = "" + origin + "/Task/DeleteAllFrequencyTasks?Id=" + id + "&BackURL=" + backurl;
        ////empurl = "" + origin + "/ExportReport/ExportEmployeesPdf?list="+ListofObjects;
        //                                   //  location.replace(empurl)
        //                                   window.location.href = empurl;
    }

    var sortval = $("#Sortvalue").val();
    if (sortval == 1) {
        $("#asc").hide();
        $("#dsc").show();

    } else {
        $("#asc").show();
        $("#dsc").hide();
    }
    function sortTable(order) {
        var table = $("#example");
        var asc = order === 'asc',

            tbody = table.find('tbody');

        tbody.find('tr').sort(function (a, b) {
            if (asc) {
                $("#asc").hide();
                $("#dsc").show();
                return $('td:first', a).text().localeCompare($('td:first', b).text());
            } else {
                $("#asc").show();
                $("#dsc").hide();
                return $('td:first', b).text().localeCompare($('td:first', a).text());
            }
        }).appendTo(tbody);
    }


    function myFunction(val) {
        var dots = document.getElementById("" + val + "+dots");
        //var dots = "#" + val + "+dots";
        var moreText = document.getElementById("" + val + "+more");
        // var moreText = "#" + val + "+more";
        var btnText = document.getElementById("" + val + "+myBtn");
        //var btnText = "#" + val + "+myBtn";

        if (dots.style.display === "none") {
            dots.style.display = "inline";
            btnText.innerHTML = "Read more";
            moreText.style.display = "none";
        } else {
            dots.style.display = "none";
            btnText.innerHTML = "Read less";
            moreText.style.display = "inline";
        }
    }
</script>
<script type="text/javascript">
     $('#sdtimepicker1').timepicker();
    $('#edtimepicker1').timepicker();
    $('#sdtimepicker2').timepicker();
    $('#edtimepicker2').timepicker();




    function SortTickets(type) {
        var ut = $("#UtaskId2").val();
        $("#dd").hide();
          $.ajax({

               type: 'POST',
               url: '@Url.Action("SortTaskTickets", "Task")',
            timeout: 100000000,
            data: {
                UtaskID: ut,
                Type: type,


            },
               dataType: "json",
              success: function (json) {

                  location.reload();

               },
               error: function () {
                   alert("Something went wrong");


               }
           });
    }

    function deleteFreqUtask(id) {
        $("#UtaskId").val(id);
        $("#deleteFreqUtask").modal("show");

    }
      function RemoveFreqTsk()
      {
          var ut = $("#UtaskId").val();
                $("#" + ut + "").hide();
             $("#deleteFreqUtask").modal("hide");

        $.ajax({

               type: 'POST',
               url: '@Url.Action("RemoveFreqTask", "Task")',
            timeout: 100000000,
            data: {
                UtaskID: ut,


            },
               dataType: "json",
            success: function (json) {


               },
               error: function () {
                   alert("Something went wrong");


               }
           });

    }

    function checktimeperiod() {
         var StartDate = $("#AddStartDate").val();
        var EndDate = $("#AddEndDate").val();
        var TaskStartDate = $("#TaskStartDate").val();
        var TaskEndDate = $("#TaskEndDate").val();


        if ((StartDate != null && StartDate != "") && EndDate != null && EndDate != "")
        {
           if (StartDate < TaskStartDate) {
                $("#ErrorMessage").text("Start date must be equal or greater than Task's start date");
                $("#addtodobtn").attr('disabled', true);
            } else if (EndDate > TaskEndDate) {
                $("#ErrorMessage").text("End date must be equal or less than Task's end date");
                $("#addtodobtn").attr('disabled', true);

            } else if (StartDate > EndDate) {
                $("#ErrorMessage").text("Start date must be less than End date");
                $("#addtodobtn").attr('disabled', true);

            }
            else if (StartDate == EndDate) {

                var sdtimepicker1 = $("#sdtimepicker1").val();
                var edtimepicker1 = $("#edtimepicker1").val();

                var Sdatetime = StartDate + " " + sdtimepicker1;
                var Edatetime = EndDate + " " + edtimepicker1;

                var s = new Date(Sdatetime);
                var e = new Date(Edatetime);

                var ticks = ((s.getTime() * 10000) + 621355968000000000);
                var ticks2 = ((e.getTime() * 10000) + 621355968000000000);
                if (ticks < ticks2) {
                    $("#addtodobtn").attr('disabled', false);
                    $("#ErrorMessage").text("");
                } else {
                      $("#ErrorMessage").text("Time period must be valid");
                   $("#addtodobtn").attr('disabled', true);
                }



            } else {
                $("#ErrorMessage").text("");
                $("#addtodobtn").attr('disabled', false);

            }
        }

    }

    function Updatechecktimeperiod() {
         var StartDate = $("#StartDate").val();
        var EndDate = $("#EndDate").val();
        var TaskStartDate = $("#TaskStartDate").val();
        var TaskEndDate = $("#TaskEndDate").val();

        if ((StartDate != null && StartDate != "") && EndDate != null && EndDate != "")
        {
             if (StartDate < TaskStartDate) {
                $("#ErrorMessage2").text("Start date must be equal or greater than Task's start date");
                $("#addtodobtn2").attr('disabled', true);
            } else if (EndDate > TaskEndDate) {
                $("#ErrorMessage2").text("End date must be equal or less than Task's end date");
                $("#addtodobtn2").attr('disabled', true);

            } else if (StartDate > EndDate) {
                $("#ErrorMessage2").text("Start date must be less than End date");
                $("#addtodobtn2").attr('disabled', true);

            }
            else if (StartDate == EndDate) {
                var sdtimepicker2 = $("#sdtimepicker2").val();
                var edtimepicker2 = $("#edtimepicker2").val();

                var Sdatetime = StartDate + " " + sdtimepicker2;
                var Edatetime = EndDate + " " + edtimepicker2;

                var s = new Date(Sdatetime);
                var e = new Date(Edatetime);

                var ticks = ((s.getTime() * 10000) + 621355968000000000);
                var ticks2 = ((e.getTime() * 10000) + 621355968000000000);
                if (ticks < ticks2) {
                    $("#addtodobtn2").attr('disabled', false);
                    $("#ErrorMessage2").text("");
                } else {
                     $("#ErrorMessage2").text("Time period must be valid");
                    $("#addtodobtn2").attr('disabled', true);

                }







            }
               else {
                $("#ErrorMessage2").text("");
                $("#addtodobtn2").attr('disabled', false);

            }
        }

    }

    function CheckStartDateEndDate()
    {
        var StartDate = $("#AddStartDate").val();
        var EndDate = $("#AddEndDate").val();
        var TaskStartDate = $("#TaskStartDate").val();
        var TaskEndDate = $("#TaskEndDate").val();

        if ((StartDate != null && StartDate != "") && EndDate != null && EndDate != "")
        {
            if (StartDate < TaskStartDate) {
                $("#ErrorMessage").text("Start date must be equal or greater than Task's start date");
                $("#addtodobtn").attr('disabled', true);
            } else if (EndDate > TaskEndDate) {
                $("#ErrorMessage").text("End date must be equal or less than Task's end date");
                $("#addtodobtn").attr('disabled', true);

            } else if (StartDate > EndDate) {
                $("#ErrorMessage").text("Start date must be less than End date");
                $("#addtodobtn").attr('disabled', true);

            }
            else if (StartDate == EndDate) {

                       var sdtimepicker1 = $("#sdtimepicker1").val();
                      var edtimepicker1 = $("#edtimepicker1").val();

                 var Sdatetime = StartDate + " " + sdtimepicker1;
                var Edatetime = EndDate + " " + edtimepicker1;

                var s = new Date(Sdatetime);
                var e = new Date(Edatetime);

                var ticks = ((s.getTime() * 10000) + 621355968000000000);
                var ticks2 = ((e.getTime() * 10000) + 621355968000000000);
                if (ticks < ticks2) {
                    $("#addtodobtn").attr('disabled', false);
                    $("#ErrorMessage").text("");
                } else {
                      $("#ErrorMessage").text("Time period must be valid");
                   $("#addtodobtn").attr('disabled', true);
                }

                //if (sdtimepicker1.split(' ')[1] == "PM" && edtimepicker1.split(' ')[1] == "AM") {

                //     $("#ErrorMessage").text("Time period must be valid");
                //    $("#addtodobtn").attr('disabled', true);


                //} else {
                //    var x = sdtimepicker1.split(' ')[0].split(':')[0];
                //    var y = edtimepicker1.split(' ')[0].split(':')[0];
                //    if (parseInt(x) < parseInt(y))//Comparing hours
                //    {
                //        $("#addtodobtn").attr('disabled', false);
                //        $("#ErrorMessage").text("");
                //    } else if (parseInt(x) > parseInt(y))
                //    {
                //        if (sdtimepicker1.split(' ')[1] == "AM" && edtimepicker1.split(' ')[1] == "PM") {
                //            $("#addtodobtn").attr('disabled', false);
                //            $("#ErrorMessage").text("");
                //        } else {
                //            $("#ErrorMessage").text("Time period must be valid");
                //            $("#addtodobtn").attr('disabled', true);
                //        }
                //    } else {
                //        if (parseInt(sdtimepicker1.split(' ')[0].split(':')[1]) < parseInt(edtimepicker1.split(' ')[0].split(':')[1])) {
                //            $("#addtodobtn").attr('disabled', false);
                //            $("#ErrorMessage").text("");
                //        } else
                //        {
                //              $("#ErrorMessage").text("Time period must be valid");
                //            $("#addtodobtn").attr('disabled', true);
                //        }
                //    }

                //}

            }
            else {
                $("#ErrorMessage").text("");
                $("#addtodobtn").attr('disabled', false);

            }
        }


    }


    function UpdateCheckStartDateEndDate()
    {
        var StartDate = $("#StartDate").val();
        var EndDate = $("#EndDate").val();
        var TaskStartDate = $("#TaskStartDate").val();
        var TaskEndDate = $("#TaskEndDate").val();

        if ((StartDate != null && StartDate != "") && EndDate != null && EndDate != "")
        {
            if (StartDate < TaskStartDate) {
                $("#ErrorMessage2").text("Start date must be equal or greater than Task's start date");
                $("#addtodobtn2").attr('disabled', true);
            } else if (EndDate > TaskEndDate) {
                $("#ErrorMessage2").text("End date must be equal or less than Task's end date");
                $("#addtodobtn2").attr('disabled', true);

            } else if (StartDate > EndDate) {
                $("#ErrorMessage2").text("Start date must be less than End date");
                $("#addtodobtn2").attr('disabled', true);

            }
            else if (StartDate == EndDate) {

              var sdtimepicker2 = $("#sdtimepicker2").val();
                var edtimepicker2 = $("#edtimepicker2").val();

                var Sdatetime = StartDate + " " + sdtimepicker2;
                var Edatetime = EndDate + " " + edtimepicker2;

                var s = new Date(Sdatetime);
                var e = new Date(Edatetime);

                var ticks = ((s.getTime() * 10000) + 621355968000000000);
                var ticks2 = ((e.getTime() * 10000) + 621355968000000000);
                if (ticks < ticks2) {
                    $("#addtodobtn2").attr('disabled', false);
                    $("#ErrorMessage2").text("");
                } else {
                     $("#ErrorMessage2").text("Time period must be valid");
                    $("#addtodobtn2").attr('disabled', true);

                }

            }
            else {
                $("#ErrorMessage2").text("");
                $("#addtodobtn2").attr('disabled', false);

            }
        }


    }

    function GetTemplateName()
    {
        $("#ModalSetTemplateName").modal("show");
    }
    function SetTemplate()
    {
        var UtaskID = $("#TemplateUtaskId").val();
        var TemplateName = $("#TemplateName").val();

        $.ajax({

               type: 'POST',
               url: '@Url.Action("CreateTaskTemplate", "Task")',
            timeout: 100000000,
            data: {
                UtaskID: UtaskID,
                TemplateName:TemplateName,

            },
               dataType: "json",
            success: function (json) {

                $("#TemplateResponse").text(json);
                $("#ModalSetTemplateName").modal("hide");
                $("#ModalSetTemplateResponse").modal("show");

               },
               error: function () {
                   alert("Something went wrong");


               }
           });

    }
    function ValidateTemplateName(text)
    {


        $.ajax({

               type: 'POST',
               url: '@Url.Action("CheckTemplateName", "Task")',
            timeout: 100000000,
            data: {
                Name: text.value,

            },
               dataType: "json",
            success: function (json) {
                if (json == 0) {
                    $("#templatebtn").attr('disabled', false);
                    $("#errmsgg").text("");
                } else
                {

                    $("#templatebtn").attr('disabled', true);
                    $("#errmsgg").text("Template name already exists");

                }

               },
               error: function () {
                   alert("Something went wrong");


               }
           });

    }

    function ValidateCommentText(text,v="no")
    {
        if (v == "yes") {
  var c = text.value.length;
        $("#charCounter").text(500-c);
        }

        var x = $("#TaskId").val();
        $.ajax({

               type: 'POST',
               url: '@Url.Action("TestaddComment", "Task")',
            timeout: 100000000,
            data: {
                comment: text.value,
                taskId:x
            },
               dataType: "json",
               success: function (json) {
                    $('#submit').attr('disabled', false)

               },
               error: function () {
                   alert("Incorrect Input Format")
                   $('#submit').attr('disabled', true)

               }
           });

    }
    function checkstatus() {
        var x = $("#ActiveToDo").val();
        if ($("#status").val() == 4 && x > 0) {
            $("#statuswarn").text("There are some Active To Do's.If you update it they'll turn into Inactive! ");
        } else {
             $("#statuswarn").text("");
        }

    }



    //function printMousePos1() {

    //     // var style = window.getComputedStyle(document.getElementById('divrep'));
    //     //var marginTo = style.getPropertyValue('margin-top');
    //     //if (l == 0) {
    //     //    if (marginTo != "0px") {
    //     //        $("#divrep").css("margin-top", "0px");


    //     //    }
    //     //}else {
    //     //        l = 0;
    //     //    }


    //  }
    //function printMousePos(event) {
    //    printMousePos1();
    //      var style = window.getComputedStyle(document.getElementById('diva'));
    //     var marginTo = style.getPropertyValue('margin-top');
    //     if (j == 0) {
    //         if (marginTo != "0px") {
    //             $("#diva").css("margin-top", "0px");


    //         }
    //     }else {
    //             j = 0;
    //         }


    //  }

    //    document.addEventListener("click", printMousePos);
    var i = 2;
    var k = 2;
    var j = 0;
    var l = 0;
    var marginTop = "";
    var marginTop1 = "";
    function AdjustIconlist(id) {

        var topcomment = $('#dropupID').val();

        var element = document.getElementById('li_' + topcomment);
        element.classList.remove("dropup");
        //        if (id == topcomment) {
        //            var style = window.getComputedStyle(document.getElementById('diva'));
        // marginTop = style.getPropertyValue('margin-top');
        ////alert(marginTop);
        //            if (marginTop < "120px") {
        //                $("#diva").css("margin-top", "120px");
        //                i++;
        //            } else {
        //                $("#diva").css("margin-top", "0px");
        //                i = 2;
        //            }

        //            j = 1;
        //        } else
        //        {
        //             $("#diva").css("margin-top", "0px");
        //                i = 2;
        //        }


    }

    function AdjustRepliesIconlist(id) {



        var topcomment = $("#RepliesdropupID_" + id + "").val();
        var element = document.getElementById(topcomment);
        element.classList.remove("dropup");

        //        if (id == topcomment) {
        //            var style = window.getComputedStyle(document.getElementById("divrep_"+ id+""));
        // marginTop1 = style.getPropertyValue('margin-top');
        ////alert(marginTop);
        //            if (marginTop1 < "120px") {
        //                $("#divrep_"+ id+"").css("margin-top", "120px");
        //                k++;
        //            } else {
        //                $("#divrep_"+ id+"").css("margin-top", "0px");
        //                k = 2;
        //            }

        //            l = 1;
        //        } else
        //        {
        //             $("#divrep_"+ id+"").css("margin-top", "0px");
        //                i = 2;
        //        }


    }



    $(document).ready(function () {
        var topcomment = $('#dropupID').val();
        var li = "#" + topcomment + "+li";
        var ul = "#" + topcomment + "+ul";
        // $("#" + id + "").toggle();
        $(li).removeClass("dropup");
        $(ul).addClass("dropdown-menu-right");
    });
    $('#DReminder').hide("");
    $('#BeforeDDReminder').hide("");
    $('#UpdateDReminder').hide("");
    $('#UpdateBeforeDDReminder').hide("");




    function showsetremindertypes() {
        $('#Remindertype').show();
        $('#UpdateRemindertype').hide();
        $('#UpdateDReminder').hide();
        $('#UpdateBeforeDDReminder').hide();
    }

    function showUpdateremindertypes() {
        $('#UpdateRemindertype').show();
        $('#Remindertype').hide();
        $('#DReminder').hide();
        $('#BeforeDDReminder').hide();
    }

    function checkdays() {

        var taskid = $('#tskId').val();
        var x = $('#DaysBeforeDD').val();
        if (x == 0 || x == null || x < 0) {
            $('#txt').text("Days not be less than 1");
            $('#Rsubmit').attr('disabled', true)
        } else {
            $('#txt').text("");
            $('#Rsubmit').attr('disabled', false)

            $.ajax({
                type: 'POST',
                url: "../task/CheckDays",
                data: {
                    taskid: taskid,
                    days: x,
                },
                dataType: "json",
                success: function (data) {
                    if (data != 1) {
                        $('#txt').text("Task Endate is less then your number of days");
                        $('#Rsubmit').attr('disabled', true)

                    } else {
                        $('#txt').text("");
                        $('#Rsubmit').attr('disabled', false)
                    }

                },
                error: function () { alert('error'); }
            });
        }


    }

    function Updatecheckdays() {

        var taskid = $('#tskId').val();
        var x = $('#UpdateDaysBeforeDD').val();
        if (x == 0 || x == null || x < 0) {
            $('#txt').text("Days not be less than 1");
            $('#Upsubmit').attr('disabled', true)
        } else {
            $('#txt').text("");
            $('#Upsubmit').attr('disabled', false)
            $.ajax({
                type: 'POST',
                url: "../task/CheckDays",
                data: {
                    taskid: taskid,
                    days: x,
                },
                dataType: "json",
                success: function (data) {
                    if (data != 1) {
                        $('#txt').text("Task Endate is less then your number of days");
                        $('#Upsubmit').attr('disabled', true)

                    } else {
                        $('#txt').text("");
                        $('#Upsubmit').attr('disabled', false)
                    }

                },
                error: function () { alert('error'); }
            });
        }


    }

    function Showreminder() {



        $('#DReminder').hide("");
        $('#BeforeDDReminder').hide("");
        $('#ReminderModal').modal("show");
    }
    function UpdateShowreminder() {


        $('#UpdateDReminder').hide("");
        $('#UpdateBeforeDDReminder').hide("");
        $('#UpdateReminderModal').modal("show");

    }
    function OffShowreminder() {



        $('#OffReminderModal').modal("show");

    }

    var remmodalvalue = document.getElementById("Reminder").value;
    if (remmodalvalue == "") {
        document.getElementById("Rsubmit").disabled = true;
    }
    function Showremindertypes() {
        if ($('#Reminder').val() == "DailyReminder") {

            $('#DaysBeforeDD').val("");
            $('#DReminder').show();
            $('#BeforeDDReminder').hide();
            $('#Rsubmit').text("Set");

        } else if ($('#Reminder').val() == "BeforeDDayReminder") {
            $('#BeforeDDReminder').show();
            $('#DailyReminder').val("");
            $('#DReminder').hide();

            $('#Rsubmit').text("Set");
        } else {
            $('#BeforeDDReminder').hide();
            $('#DailyReminder').val("");
            $('#DaysBeforeDD').val("");
            $('#DReminder').hide();
        }
    }
    function ShowUpremindertypes() {
        if ($('#UpdateReminder').val() == "DailyReminder") {

            $('#UpdateDReminder').show();

            $('#UpdateBeforeDDReminder').hide();
            $('#Rsubmit').text("Update");
            //$('#UpdateDailyReminder').val("");


        } else if ($('#UpdateReminder').val() == "BeforeDDayReminder") {


            $('#UpdateBeforeDDReminder').show();
            $('#UpdateDReminder').hide();

            $('#Rsubmit').text("Update");
            // $('#UpdateDaysBeforeDD').val("");

        } else {


            $('#UpdateBeforeDDReminder').hide();
            $('#UpdateDReminder').hide();

        }
    }

    function groupTaskValues() {
        $('#AssignGroupTask').modal("show");
    }
    //function dropdwonprimary()
    //{
    //    var x = $('#primary').val();
    //    $('select[name *= "SecondaryLead"] option[value = ' + x + ']').attr('disabled', 'disabled').siblings().removeAttr('disabled');
    //}


    $(document).ready(function ()
    {
        var managerid = $('#managerid').val();
        var managercount = $('#managercount').val();
        if (managercount == 1)
        {
            $("#primary").val(managerid).change();
            $('select[name*="SecondaryLead"] option[value=' + managerid + ']').attr('disabled', true)
                .siblings().removeAttr('disabled');
        }
    });

    function dropdwonprimary()
    {
        var x = $('#primary').val();
        $('select[name*="SecondaryLead"] option[value=' + x + ']').attr('disabled', true)
            .siblings().removeAttr('disabled');
        //$('select[name *= "SecondaryLead"]').removeAttr("disabled");
        //$('select[name*="SecondaryLead"] option:selected').removeAttr('disabled');

        //var disabled_options_ids = $('#secondary option[disabled]').map(function (i, v) {
        //    return this.value;
        //}).get();

        //if (disabled_options_ids.length > 1)
        //{
        //    var aa = disabled_options_ids[1];
        //    $('#secondary option[value = ' + aa + ']').removeAttr('disabled');

        //}

        //$('select[name *= "SecondaryLead"] option[value = ' + x + ']').attr('disabled', 'disabled').siblings().removeAttr('disabled');

        //disabled_options_ids.length = 0;
    }
    function dropdwonsecondary() {
        var x = $('#secondary').val();
        $('select[name *= "PrimaryLead"] option[value = ' + x + ']').attr('disabled', 'disabled')
            .siblings().removeAttr('disabled');
    }

    //////////////////////////////////////////////////
    $('#replycomment').hide();
    $('#cancelreplybtn').hide();
    $('.rreply').hide();
    function commentreplies(id) {


        $("#" + id + "").toggle();



        // $("#" + id + "").css("margin-top", "30px");
        window.location = "#f_" + id + "";

        //$("#diva").css("margin-top", "0px");
        //     i = 2;


    }
    function showreply(cmntid) {
        $.ajax({
            type: 'POST',
            url: "../task/getReplyComment",
            data: { cmntid: cmntid },
            dataType: "json",
            success: function (data) {

                // get role of the user then if you are an admin then assign tasks to manager and employee
                // if you are manager then assign to employee
                // if you can self assign
                $("#replycomment").val("");

                $("#replycomment").val(data.Comment);
                $("#repcomntid").val(data.Id);



                $('#replycomment').show();
                $('#cancelreplybtn').show();

                window.location = "#yourcomment";
                $("#maincomment").focus();


            },
            error: function () { alert('fail'); }
        });

    }
    function cancelreply() {
        $('#replycomment').hide();
        $('#cancelreplybtn').hide();
        $("#repcomntid").val("");
    }

    //////////////////////////////////////////////////

    function changeFileStatus() {
        $('#removeFile').val(1);
        $('#removeExistingFile').attr('disabled', true);
    }
    function editComment(text, id, ism, isFile, IsDocMFile) {
        $('#removeExistingFile').attr('disabled', false);
        if (isFile == '') {
            document.getElementById('removeExistingFile').style.visibility = 'hidden';
            $('#upLoad').innerHtml = 'Upload File';
        }
        else {
            document.getElementById('removeExistingFile').style.visibility = 'visible';
            $('#upLoad').innerHtml = 'Upload New File';
        }
        $('#editText').val(text);

         //Setting the text in edit todo if file already exists -- Wajeeh
        if (IsDocMFile == "1") {
            $("#customText").text("Update path:(File exists in document manager)");
        }
        else {
            $("#customText").text("Select Document Manager Save Location:");
        }

        $('#commentId').val(id);
        $('#isManag').val(ism);
        $('#editComment').modal("show");
    }


    function deleteComment(id, ism) {
        $('#commentId1').val(id);
        $('#isManag1').val(ism);
        $('#deleteComment').modal("show");
    }



    var dt = $("#datep").val();

    // Set the date we're counting down to
    var countDownDate = new Date(dt).getTime();

    // Update the count down every 1 second
    var x = setInterval(function () {

        // Get todays date and time
        var now = new Date().getTime();

        if (countDownDate > now) {
            // Find the distance between now and the count down date
             var distance = countDownDate - now;

            // Time calculations for days, hours, minutes and seconds
            var days = Math.floor(distance / (1000 * 60 * 60 * 24));
            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((distance % (1000 * 60)) / 1000);

            // Output the result in an element with id="demo"

            document.getElementById("d").innerHTML = days + "d ";
            document.getElementById("h").innerHTML = hours + "h ";
            document.getElementById("m").innerHTML = minutes + "m ";
            document.getElementById("s").innerHTML = seconds + "s ";

        }
  }, 1000);
    (function ($) {

        'use strict';

        $('.alert[data-auto-dismiss]').each(function (index, element) {
            var $element = $(element),
                timeout = $element.data('auto-dismiss') || 5000;

            setTimeout(function () {
                $element.alert('close');
            }, timeout);
        });

    })(jQuery);
    $('#requestButton').click(function () {
        $('#requestDiv').hide();
    });

    function updateValue(response) {
        $('#responseid').val(response);
        $('#requestmethod').submit();
    }


    function updatToDo(id) {
        $('#ticketId').val(id);
        $('#completetciketmodal').modal("show");
    }

    function editToDo(id,IsDocMFile) {
       // var n="#" + id + "+li";
        var name = $("#editname_" + id + "").val();
        var sd=$("#editsdate_" + id + "").val();
        var st=$("#editstime_" + id + "").val();
        var ed=$("#editedate_" + id + "").val();
        var et=$("#editetime_" + id + "").val();

        if (name.indexOf(" qqqqaaaa ")) {
            $sttr = name.replace(" qqqqaaaa ", " ");
            $('#todoName').val($sttr);
        } else {
            $('#todoName').val(name);
        }
                $('#ticket_Id').val(id);
       // sd=sd.toString("yyyy-MM-dd")
        $('#StartDate').val(sd);
       // $('#StartDate').val(sd);
        $('#EndDate').val(ed);
        if (st != null && st != "") {
            var starttime = st.split(' ')[1];

            var starttimeAMPM = st.split(' ')[2];
            var st1 = starttime.split(':')[0];
            var st2 = starttime.split(':')[1];
            st = st1 + ":" + st2 + " " + starttimeAMPM;
            $('#sdtimepicker2').val(st);
        } else
        {
              $('#sdtimepicker2').val();
        }

        if (et != null && et != "") {
            var endtime = et.split(' ')[1];

            var endtimeAMPM = et.split(' ')[2];
            var et1 = endtime.split(':')[0];
            var et2 = endtime.split(':')[1];
            et = et1 + ":" + et2 + " " + endtimeAMPM;
            $('#edtimepicker2').val(et);


        } else {
            $('#edtimepicker2').val();
        }
        //et = et.split(' ')[1];



         //Setting the text in edit todo if file already exists -- Wajeeh
         if (IsDocMFile == "1") {
            $("#customText4").text("Update path:(File exists in document manager)");
        }
        else {
             $("#customText4").text("Select Document Manager Save Location:");
        }


        $('#edittodomodal').modal("show");
        UpdateCheckStartDateEndDate();
    }

    function deleteToDo(id) {
        $('#ticketid').val(id);
        $('#deletetodomodal').modal("show");
    }
</script>

<script>

    //var messageBody = document.querySelector('#badges-tab1');
    //messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;

    var msgBody = document.querySelector('.scroll');
    msgBody.scrollTop = msgBody.scrollHeight - msgBody.clientHeight;
</script>

<script>
    //functions used to limit the upload file size by 2 mbs in comment, update comment and Todo Sections


    function ValidateSizeComment(file) {
        var FileSize = file.files[0].size / 1024 / 1024; // in MB
        if (FileSize > 10) {
            $('#errorMessageCmt').text('File size exceeds 10 MBs');

            $('#submit').attr("disabled", true);
        } else {
            $('#errorMessageCmt').text('');

            $('#submit').attr("disabled", false);
        }
    }

    function ValidateSizeCommentUpd(file) {
        var FileSize = file.files[0].size / 1024 / 1024; // in MB
        if (FileSize > 10) {
            $('#errorMessageCmtUpd').text('File size exceeds 10 MBs');

            $('#submitUpd').attr("disabled", true);
        } else {
            $('#errorMessageCmtUpd').text('');

            $('#submitUpd').attr("disabled", false);
        }
    }

    function ValidateSizeCommentReply(file) {
        var FileSize = file.files[0].size / 1024 / 1024; // in MB
        if (FileSize > 10) {
            $('#errorMessageCmtReply').text('File size exceeds 10 MBs');

            $('#submitReply').attr("disabled", true);
        } else {
            $('#errorMessageCmtReply').text('');

            $('#submitReply').attr("disabled", false);
        }
    }

    function ValidateSizeTodo(file) {
        var FileSize = file.files[0].size / 1024 / 1024; // in MB
        if (FileSize > 10) {
            $('#errorMessageTodo').text('File size exceeds 10 MBs');

            $('#addtodobtn').attr("disabled", true);
        } else {
            $('#errorMessageTodo').text('');

            $('#addtodobtn').attr("disabled", false);
        }
    }


    function ValidateSizeTodoUpd(file) {
        var FileSize = file.files[0].size / 1024 / 1024; // in MB
        if (FileSize > 10) {
            $('#errorMessageTodoUpd').text('File size exceeds 10 MBs');

            $('#addtodobtn2').attr("disabled", true);
        } else {
            $('#errorMessageTodoUpd').text('');

            $('#addtodobtn2').attr("disabled", false);
        }
    }
</script>

<script>

    function dropdownAusertype()
    {
        var utype = $('#Ausertype').val();
        var comId = $('#AcompanyId').val();
        var uId = $('#AuserId').val();
        var depId = $('#AdepId').val();
        var divId = $('#AdivId').val();


        $.ajax({
            dataType: "json",
            type: "GET",
            url: '@Url.Action("GetAssignToAnotherUser", "Task")',
            data: { userType: utype, userId: uId, companyId: comId, departmentId: depId, divisionId: divId },
            success: function (response)
            {
                $('#AselectuserId').find('option').remove().end();

                $('#ATADiv').hide();

                if (utype == 1)
                {
                    $('#ATALabel').html("Administrator <span class='text-danger'>*</span>");
                    $("#AselectuserId").append('<option value="" disabled selected>Please Select Administrator</option>');
                }

                if (utype == 2) {
                    $('#ATALabel').html("Manager <span class='text-danger'>*</span>");
                    $("#AselectuserId").append('<option value="" disabled selected>Please Select Manager</option>');
                }

                if (utype == 3) {
                    $('#ATALabel').html("Employee <span class='text-danger'>*</span>");
                    $("#AselectuserId").append('<option value="" disabled selected>Please Select Employee</option>');
                }

                var i = 0;
                $.each(response, function ()
                {
                    $("#AselectuserId").append('<option value=' + response[i].Id + '>' + response[i].Name + '</option>');

                    i++;
                });

                $('#ATADiv').show();
            },
            error: function (response)
            {
                alert('Ajax Fail');
            }

        });

    }


    function postAssignToAnother()
    {
        var utype = $('#Ausertype').val();
        var uId = $('#AselectuserId').val();
        var utId = $('#AuserTaskId').val();

        if (utype == null || uId == null)
        {
            alert("Please Select User");
        }
        else
        {
            $.ajax({
            dataType: "json",
            type: "GET",
            url: '@Url.Action("PostAssignToAnother", "Task")',
            data: { Ausertype: utype, AuserTaskId: utId, AuserId: uId  },
            success: function (response)
            {
                if (response != "0")
                {
                    if (utype == 1 || utype == 2)
                    {
                        var origin = window.location.origin;
                        var empurl = "" + origin + "/Manager/taskDetails?v=" + response + "&isModal=3";
                        //  location.replace(empurl)
                        window.location.href = empurl;
                    }
                    else
                    {
                        location.reload();
                    }
                }
                else
                {
                    alert("Something Went Wrong!");
                }
            },
            error: function (response)
            {
                alert('Ajax Fail');
            }

        });
        }


    }

</script>

<script>

    var activetodos = '@activetodos';
    var completedtodos = '@completedtodos';

    var config = {
        type: 'doughnut',
        data: {
            datasets: [{
                data: [
                    parseInt(activetodos),
                    parseInt(completedtodos),

                ],
                backgroundColor: [
                    window.chartColors.red,
                    window.chartColors.green,
                ],
                label: 'Dataset 1'
            }],
            labels: [
                'Active Todos',
                'Completed Todos'
            ]
        },
        options: {
            responsive: true,
            legend: {
                position: 'top',
            },
            title: {
                display: false,
                text: 'Todos'
            },
            animation: {
                animateScale: true,
                animateRotate: true
            },
            tooltip: { isHtml: true }
        }
    };

    window.onload = function () {
        var ctx = document.getElementById('div_chart').getContext('2d');
        window.myDoughnut = new Chart(ctx, config);
    };


</script>


<script>

    //Getting Files From Document Manager for Comments
    function GetDocMFilesCmt() {

        $("#spinnerCmt").show();

        $.ajax({
            type: 'POST',
            url: "../Task/GetDocMFiles",
            dataType: "json",
            success: function (data) {
                // get role of the user then if you are an admin then assign tasks to manager and employee
                // if you are manager then assign to employee
                // if you can self assign
                //var role = data[0].SessionRole;
                $("#DocMIDCmt").html("");
                var count = 0;
                $('#DocMIDCmt').empty();
                $('#DocMIDCmt').append('<option value="" selected > Please Choose a Doc Manager File</option>');
                for (var i = 0; i < data.length; i++) {
                    var division = '<option value="' + data[i]['Id'] + '">' + data[i]['Name'] + '</option>';
                    $('#DocMIDCmt').append(division);
                }
                $("#spinnerCmt").hide();
                $("#FileDivCmt").show();

            },
            error: function () { $("#AjaxErrorModal").modal("show"); }
        });
    }

    function FileDivCmt() {
        if (document.getElementById("IsDocFileCmt").checked == true) {
            //Hiding selecting location button -- Wajeeh
            $("#customLocPath").val("");
            $("#customLocPathHidden").val("");
            $("#customLocPathMainBtn").hide();
            GetDocMFilesCmt();
        }
        else {
            //Showing selecting location button -- Wajeeh
            $("#customLocPath").val("");
            $("#customLocPathHidden").val("");
            $("#customLocPathMainBtn").show();

            $("#FileDivCmt").hide();
            $("#spinnerCmt").hide();
        }
    }
    //Getting Files From Document Manager for Comments



    //Getting Files From Document Manager for Comments Reply
    function GetDocMFilesCmtRply(id) {
        $("#spinnerCmtRply" + id).show();

        $.ajax({
            type: 'POST',
            url: "../Task/GetDocMFiles",
            dataType: "json",
            success: function (data) {
                // get role of the user then if you are an admin then assign tasks to manager and employee
                // if you are manager then assign to employee
                // if you can self assign
                //var role = data[0].SessionRole;
                $("#DocMIDCmtRply").html("");
                var count = 0;
                $('#DocMIDCmtRply').empty();
                $('#DocMIDCmtRply').append('<option value="" selected > Please Choose a Doc Manager File</option>');
                for (var i = 0; i < data.length; i++) {
                    var division = '<option value="' + data[i]['Id'] + '">' + data[i]['Name'] + '</option>';
                    $('#DocMIDCmtRply').append(division);
                }
                $("#spinnerCmtRply" + id).hide();
                $("#FileDivCmtRply" + id).show();

            },
            error: function () { $("#AjaxErrorModal").modal("show"); }
        });
    }

    function FileDivCmtRply(id) {
        if (document.getElementById("IsDocFileCmtRply" + id).checked == true) {

            //Hiding selecting location button -- Wajeeh
            $("#customLocPath" + id).val("");
            $("#customLocPathHidden" + id).val("");
            $("#customLocPathMainBtn" + id).hide();

            GetDocMFilesCmtRply(id);

        } else {

            //Showing selecting location button -- Wajeeh
            $("#customLocPath" + id).val("");
            $("#customLocPathHidden" + id).val("");
            $("#customLocPathMainBtn" + id).show();

            $("#FileDivCmtRply" + id).hide();
            $("#spinnerCmtRply" + id).hide();
        }
    }
    //Getting Files From Document Manager for Comments Reply



    //Getting Files From Document Manager for Comments Update
    function GetDocMFilesCmtUpd() {

        $("#spinnerCmtUpd").show();

        $.ajax({
            type: 'POST',
            url: "../Task/GetDocMFiles",
            dataType: "json",
            success: function (data) {
                // get role of the user then if you are an admin then assign tasks to manager and employee
                // if you are manager then assign to employee
                // if you can self assign
                //var role = data[0].SessionRole;
                $("#DocMIDCmtUpd").html("");
                var count = 0;
                $('#DocMIDCmtUpd').empty();
                $('#DocMIDCmtUpd').append('<option value="" selected > Please Choose a Doc Manager File</option>');
                for (var i = 0; i < data.length; i++) {
                    var division = '<option value="' + data[i]['Id'] + '">' + data[i]['Name'] + '</option>';
                    $('#DocMIDCmtUpd').append(division);
                }
                $("#spinnerCmtUpd").hide();
                $("#FileDivCmtUpd").show();

            },
            error: function () { $("#AjaxErrorModal").modal("show"); }
        });
    }

    function FileDivCmtUpd() {
        if (document.getElementById("IsDocFileCmtUpd").checked == true) {
            //Hiding selecting location button -- Wajeeh
            $("#customLocPath1").val("");
            $("#customLocPathHidden1").val("");
            $("#customLocPathMainBtn1").hide();
            GetDocMFilesCmtUpd();
        }
        else {
            //Showing selecting location button -- Wajeeh
            $("#customLocPath1").val("");
            $("#customLocPathHidden1").val("");
            $("#customLocPathMainBtn1").show();
            $("#FileDivCmtUpd").hide();
            $("#spinnerCmtUpd").hide();
        }
    }
    //Getting Files From Document Manager for Comments update




    //Getting Files From Document Manager for Todo
    function GetDocMFilesTodo() {

        $("#spinnerTodo").show();

        $.ajax({
            type: 'POST',
            url: "../Task/GetDocMFiles",
            dataType: "json",
            success: function (data) {
                // get role of the user then if you are an admin then assign tasks to manager and employee
                // if you are manager then assign to employee
                // if you can self assign
                //var role = data[0].SessionRole;
                $("#DocMIDTodo").html("");
                var count = 0;
                $('#DocMIDTodo').empty();
                $('#DocMIDTodo').append('<option value="" selected > Please Choose a Doc Manager File</option>');
                for (var i = 0; i < data.length; i++) {
                    var division = '<option value="' + data[i]['Id'] + '">' + data[i]['Name'] + '</option>';
                    $('#DocMIDTodo').append(division);
                }
                $("#spinnerTodo").hide();
                $("#FileDivTodo").show();

            },
            error: function () { $("#AjaxErrorModal").modal("show"); }
        });
    }

    function FileDivTodo() {
        if (document.getElementById("IsDocFileTodo").checked == true) {

            //Hiding selecting location button -- Wajeeh
            $("#customLocPath3").val("");
            $("#customLocPathHidden3").val("");
            $("#customLocPathMainBtn3").hide();

            GetDocMFilesTodo();
        }
        else {

            //Showing selecting location button -- Wajeeh
            $("#customLocPath3").val("");
            $("#customLocPathHidden3").val("");
            $("#customLocPathMainBtn3").show();

            $("#FileDivTodo").hide();
            $("#spinnerTodo").hide();
        }
    }
    //Getting Files From Document Manager for Todo




    //Getting Files From Document Manager for Todo Update
    function GetDocMFilesTodoUpd() {

        $("#spinnerTodoUpd").show();

        $.ajax({
            type: 'POST',
            url: "../Task/GetDocMFiles",
            dataType: "json",
            success: function (data) {
                // get role of the user then if you are an admin then assign tasks to manager and employee
                // if you are manager then assign to employee
                // if you can self assign
                //var role = data[0].SessionRole;
                $("#DocMIDTodoUpd").html("");
                var count = 0;
                $('#DocMIDTodoUpd').empty();
                $('#DocMIDTodoUpd').append('<option value="" selected > Please Choose a Doc Manager File</option>');
                for (var i = 0; i < data.length; i++) {
                    var division = '<option value="' + data[i]['Id'] + '">' + data[i]['Name'] + '</option>';
                    $('#DocMIDTodoUpd').append(division);
                }
                $("#spinnerTodoUpd").hide();
                $("#FileDivTodoUpd").show();

            },
            error: function () { $("#AjaxErrorModal").modal("show"); }
        });
    }

    function FileDivTodoUpd() {
        if (document.getElementById("IsDocFileTodoUpd").checked == true) {
            //Hiding selecting location button -- Wajeeh
            $("#customLocPath4").val("");
            $("#customLocPathHidden4").val("");
            $("#customLocPathMainBtn4").hide();
            GetDocMFilesTodoUpd();
        }
        else {
            //Showing selecting location button -- Wajeeh
            $("#customLocPath4").val("");
            $("#customLocPathHidden4").val("");
            $("#customLocPathMainBtn4").show();

            $("#FileDivTodoUpd").hide();
            $("#spinnerTodoUpd").hide();
        }
    }
    //Getting Files From Document Manager for Todo Update

</script>

<!-- Wajeeh Script starts for document manager custom folder location -->

<script>

    function selectFolderFromDocM(j, check, ff) {

        var b = -1;

        $("#createNewFolInput").val("");
        $("#createNewFolInput").hide();
        $("#createNewFolSubmitBtn").removeAttr("onclick");
        $("#createNewFolSubmitBtn").hide();
        $("#createNewFolHidden").val("");
        $("#createNewFolLink").removeAttr("onclick");
        $("#folErr").hide();
        //$("#createNewCrossBtn").hide();

        $("#breadCrumbDiv").html("");

        $("#moveDirectoryTbl > tbody").html("");

        //getting all folders list for breadcrumbs
        $.ajax({
            url: "../Manager/get_allfolders",
            type: "POST",
            dataType: "json",
            success: function (allFolders) {

                //now we get all folders
                var folders = allFolders;

                //preparing breadcrumbs
                $("#breadCrumbDiv").append("<li><a class='active' style='font-weight: 700;'><i class='icon-home2 position-left'></i> Home</a></li>");

                //create folder link event binding
                $("#createNewFolLink").removeAttr("onclick");
                $("#createNewFolLink").attr("onclick", "createFolder(" + b + "," + check + "," + ff + ")");
                $("#createNewFolLink").show();

                //appending home link
                $("#selectHomeLink").removeAttr("onclick");
                var jha = -1;
                $("#selectHomeLink").attr("onclick", "getSelectFolderPath(" + jha + "," + check + "," + ff + ")");
                $("#selectHomeLink").show();

                //getting home/root folders
                var currentHierarchyFolders = $.grep(folders, function (fol) {
                    return fol.ParentId === null && fol.IsActive === 1;
                });

                //appending folders
                $("#moveDirectoryTbl > tbody").html("");
                var i = 0;
                var trobject = "";
                $.each(currentHierarchyFolders, function () {
                    trobject = '<tr style="width:100% !important"><td style="width: 35% !important;"><a onclick="selectBreadCrumbFolder(' + currentHierarchyFolders[i].Id + ',' + check + ',' + ff + ')"><i class="icon-folder iconStyle"></i>' + currentHierarchyFolders[i].Name + '</a></td><td style="width: 20% !important;" class="text-center"><a onclick="getSelectFolderPath(' + currentHierarchyFolders[i].Id + ',' + check + ',' + ff + ')" class="btn btn-sm bg-primary-300">Select</a></td>';
                    trobject = trobject + '</tr>';
                    $('#moveDirectoryTbl > tbody:last-child').append(trobject);
                    i++;
                });

                if (j == -1 || j == undefined || j == null) {
                    $("#moveDirectoryModal").modal("show");
                }

            },
            error: function () { $("#AjaxErrorModal").modal("show"); }
        });
    }

    function selectBreadCrumbFolder(parent, check, ff) {

        var j = 1;

        $("#createNewFolInput").val("");
        $("#createNewFolInput").hide();
        $("#createNewFolSubmitBtn").removeAttr("onclick");
        $("#createNewFolSubmitBtn").hide();
        $("#createNewFolHidden").val("");
        $("#createNewFolLink").removeAttr("onclick");
        $("#folErr").hide();
        //$("#createNewCrossBtn").hide();

        $("#breadCrumbDiv").html("");

        $("#moveDirectoryTbl > tbody").html("");

        $.ajax({
            url: "../Manager/get_allfolders",
            type: "POST",
            dataType: "json",
            success: function (allFolders) {

                //now we get all folders
                var folders = allFolders;

                //preparing breadcrumbs
                var parentFolder = $.grep(folders, function (obj) { return obj.Id === parent; })[0];
                var breadCrumbs = [];
                breadCrumbs = parentFolder.FolderPath.split(",");

                for (var i = 0; i < breadCrumbs.length; i++) {

                    var folder = $.grep(folders, function (obj) { return obj.Id.toString() === breadCrumbs[i]; })[0];

                    if (i == 0) {
                        $("#breadCrumbDiv").append("<li><a onclick='selectFolderFromDocM(" + j + "," + check + "," + ff + ")' class='active'><i class='icon-home2 position-left'></i> Home</a></li>");
                    }
                    if (breadCrumbs[i] == parent) {
                        $("#breadCrumbDiv").append("<li style='font-weight: 700;'><a class='active' onclick='selectBreadCrumbFolder(" + folder.Id + "," + check + "," + ff + ")'>" + folder.Name + "</a></li>");
                    }
                    else {
                        $("#breadCrumbDiv").append("<li style='font-weight: 700;'><a class='active' onclick='selectBreadCrumbFolder(" + folder.Id + "," + check + "," + ff + ")'>" + folder.Name + "</a></li>");
                    }
                }

                //create folder link event binding
                $("#createNewFolLink").removeAttr("onclick");
                $("#createNewFolLink").attr("onclick", "createFolder(" + parent + "," + check + "," + ff + ")");
                $("#createNewFolLink").show();

                //appending home link
                $("#selectHomeLink").removeAttr("onclick");
                var jha = -1;
                $("#selectHomeLink").attr("onclick", "getSelectFolderPath(" + jha + "," + check + "," + ff + ")");
                $("#selectHomeLink").show();

                //selecting folders
                var currentHierarchyFolders = $.grep(folders, function (fol) {
                    if (fol.ParentId != null) {
                        return fol.ParentId === parent && fol.IsActive === 1;
                    }
                });

                //appending folders
                $("#moveDirectoryTbl > tbody").html("");
                var i = 0;
                var trobject = "";
                $.each(currentHierarchyFolders, function () {
                    trobject = '<tr style="width:100% !important"><td style="width: 35% !important;"><a onclick="selectBreadCrumbFolder(' + currentHierarchyFolders[i].Id + ',' + check + ',' + ff + ')" ><i class="icon-folder iconStyle"></i> ' + currentHierarchyFolders[i].Name + '</a></td><td style="width: 20% !important;" class="text-center"><a onclick="getSelectFolderPath(' + currentHierarchyFolders[i].Id + ',' + check + ',' + ff + ')" class="btn btn-sm bg-primary-300">Select</a></td>';
                    trobject = trobject + '</tr>';
                    $('#moveDirectoryTbl > tbody:last-child').append(trobject);
                    i++;
                });

            }
        });
    }

    function createFolder(parentId, check, ff) {

        $("#createNewFolHidden").val(parentId);
        parentId = $("#createNewFolHidden").val();
        $("#createNewFolLink").removeAttr("onclick");
        $("#createNewFolInput").show();
        $("#createNewFolSubmitBtn").attr("onclick", "submitFolder(" + parentId + "," + check + "," + ff + ")");
        $("#createNewFolSubmitBtn").show();

    }

    function submitFolder(parentId, check, ff) {

        var name = $("#createNewFolInput").val();

        if (name == "" || name == undefined || name == null) {
            $("#folErr").show().delay(2000).fadeOut();
        }
        else {
            $.ajax({
                type: 'POST',
                url: "../Manager/CreateFolder",
                dataType: "json",
                data: {
                    ParentId: parentId,
                    Name: name
                },
                success: function (data) {
                    $('#folGenMsg').text("Directory Created!").show().delay(2000).fadeOut();
                    $("#createNewFolInput").val("");
                    $("#createNewFolInput").hide();
                    $("#createNewFolSubmitBtn").removeAttr("onclick");
                    $("#createNewFolSubmitBtn").hide();
                    $("#createNewFolHidden").val("");
                    $("#createNewFolLink").removeAttr("onclick");
                    $("#folErr").hide();


                    if (parentId == -1) {
                        selectFolderFromDocM('-1', check, ff);
                    }
                    else {
                        selectBreadCrumbFolder(parentId, check, ff);
                    }
                },
                error: function (jqXHR, exception) {
                    console.log(jqXHR.responseText);
                    $("#folGenErr").text(jqXHR.responseText);
                    $("#createNewFolInput").val("");
                    $('#folGenErr').show().delay(2000).fadeOut();
                    $("#AjaxErrorModal").modal("show");
                }
            });
        }
    }

    function getSelectFolderPath(FolderId, check, ff) {
        $.ajax({
            url: "../Manager/get_folder",
            type: "POST",
            dataType: "json",
            data: {
                Id: FolderId
            },
            success: function (folder) {

                if (check == 0) {
                    $("#customLocPath").val(folder.PathText);
                    $("#customLocPathHidden").val(folder.Id);
                    $("#customLocPathDiv").show();

                }
                else if (check == 1) {
                    $("#customLocPath1").val(folder.PathText);
                    $("#customLocPathHidden1").val(folder.Id);
                    $("#customLocPathDiv1").show();

                }
                else if (check == 2) {
                    $("#customLocPath2").val(folder.PathText);
                    $("#customLocPathHidden2").val(folder.Id);
                    $("#customLocPathDiv2").show();

                }
                else if (check == 3) {
                    $("#customLocPath3").val(folder.PathText);
                    $("#customLocPathHidden3").val(folder.Id);
                    $("#customLocPathDiv3").show();

                }
                else if (check == 4) {
                    $("#customLocPath4").val(folder.PathText);
                    $("#customLocPathHidden4").val(folder.Id);
                    $("#customLocPathDiv4").show();

                }
                else if (check == 45) {
                    $("#customLocPath" + ff).val(folder.PathText);
                    $("#customLocPathHidden" + ff).val(folder.Id);
                    $("#customLocPathDiv" + ff).show();
                }

                $("#moveDirectoryModal").modal("hide");

            },
            error: function (jqXHR, exception) {

                if (check == 0) {
                    $("#customLocPath").val("");
                    $("#customLocPathHidden").val("");

                }
                else if (check == 1) {
                    $("#customLocPath1").val("");
                    $("#customLocPathHidden1").val("");

                }
                else if (check == 2) {
                    $("#customLocPath2").val("");
                    $("#customLocPathHidden2").val("");

                }
                else if (check == 3) {
                    $("#customLocPath3").val("");
                    $("#customLocPathHidden3").val("");

                }
                else if (check == 4) {
                    $("#customLocPath4").val("");
                    $("#customLocPathHidden4").val("");

                }
                else if (check == 45) {
                    $("#customLocPath" + ff).val("");
                    $("#customLocPathHidden" + ff).val("");
                }

                alert(jqXHR.responseText);
                $("#AjaxErrorModal").modal("show");
            }
        });
    }

    function removeSelectFolderPath(check, ff) {
        if (check == 0) {
            $("#customLocPath").val("");
            $("#customLocPathHidden").val("");
            $("#customLocPathDiv").hide();
        }
        else if (check == 1) {
            $("#customLocPath1").val("");
            $("#customLocPathHidden1").val("");
            $("#customLocPathDiv1").hide();
        }
        else if (check == 2) {
            $("#customLocPath2").val("");
            $("#customLocPathHidden2").val("");
            $("#customLocPathDiv2").hide();
        }
        else if (check == 3) {
            $("#customLocPath3").val("");
            $("#customLocPathHidden3").val("");
            $("#customLocPathDiv3").hide();
        } else if (check == 4) {
            $("#customLocPath4").val("");
            $("#customLocPathHidden4").val("");
            $("#customLocPathDiv4").hide();
        }
        else if (check == 45) {
            $("#customLocPath" + ff).val("");
            $("#customLocPathHidden" + ff).val("");
            $("#customLocPathDiv" + ff).hide();
        }
    }


</script>

<!-- Wajeeh Script ends for selecting custom location in document manager -->

<script>
    //function will return false when we submit off reminder without selecting any option
    function validateOffReminder() {
        var Rval = $('#OffReminder').val();
        if (Rval == "") {
            return false;
        }
        else {
            return true;
        }
    }
</script>
