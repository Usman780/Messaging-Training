
@{
    ViewBag.Title = "Divisions";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model TrainingTracker.Models.Division
@using TrainingTracker.Models
@using TrainingTracker.HelpingClasses
@using TrainingTracker.BL

@{
    CheckAuthenticationDTO logedinuser = General_Purpose.CheckAuthentication();
    List<Course> courses = new CourseBL().getCourseList();
    Company Company = new CompanyBL().getCompanyById(Convert.ToInt32(logedinuser.Company));

}
<style>
    .dropdown-menu-right {
        left: auto !important;
        right: auto !important;
    }

    .dropdown-menu {
        top: auto !important;
    }

    #backbtn {
        margin-left: 20px;
    }

    .leftbordr {
        border-right: 1px solid;
    }


    .clr {
        background-color: #008940;
        color: white !important;
    }

    .editclr {
        color: white !important;
    }

    .dataTables_filter {
        display: none;
    }
</style>

<script type="text/javascript" src="~/Content/assets/js/pages/datatables_basic.js"></script>

<!--Bread Crumb line-->
<div class="bg-white">
    <div class="breadcrumb-line">
        <a class="breadcrumb-elements-toggle"><i class="icon-menu-open"></i></a>
        <ul class="breadcrumb">
            <li><a href="@Url.Action("Index","Auth")"><i class="icon-home2 position-left"></i> Home</a></li>
            <li class="active">Set-Up</li>
            <li class="active"><a href="@Url.Action("displayDivision","Utilities")">Division</a></li>
            <li class="active">@Model.Name</li>

        </ul>
    </div>
</div>
<!--Bread Crumb line-->

<br />
<a id="backbtn" class="btn btn-sm bg-primary pull-left" href="@Url.Action("displayDivision","Utilities")">Back</a>
<br />
<br />


<div class="content">

    <div class="panel panel-flat">
        <br />
        <center><h1><strong>@Model.Name</strong></h1></center><br />
        <div class="tab-content-bordered content-group">
            <ul class="nav nav-tabs nav-tabs-highlight nav-lg nav-justified">
                <li class="active leftbordr"><a href="#tab-department" data-toggle="tab" class="legitRipple " aria-expanded="true"><b>Department</b></a></li>
                <li class="leftbordr"><a href="#tab-manager" data-toggle="tab" class="legitRipple " aria-expanded="false"><b>Managers</b></a></li>
                <li class="leftbordr"><a href="#tab-groupTasks" data-toggle="tab" class="legitRipple " aria-expanded="false"><b>Group Tasks</b></a></li>

                @*<li class="leftbordr"><a href="#tab-tag" data-toggle="tab" class="legitRipple " aria-expanded="false"><b>Tags</b></a></li>*@
            </ul>

            <div class="tab-content">
                <div class="tab-pane has-padding active" id="tab-department">
                    <div class="panel-heading">
                        <h3 class="panel-title"><b>List of Departments</b></h3>
                        <div class="heading-elements">

                            @if (logedinuser.Role != 3)
                            {

                                <a class="btn btn-sm bg-primary" href="@Url.Action("displayDepartment", "Utilities", new { sid=ViewBag.Id })">View All Departments</a>
                                <a class="btn btn-sm bg-primary" data-target="#departmentAddModal" data-toggle="modal">Add Department</a>
                                <a onclick="displayAssignEmpTask()" class="btn btn-sm  bg-primary" style="color:white;">Assign Task to Division</a>

                            }
                        </div>
                    </div>
                    <table class="table  datatable-button-html5-basic table-bordered table-hover table-striped">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Action</th>

                            </tr>
                        </thead>
                        <tbody>
                            @{

                                int j = 1;

                                foreach (Department item in Model.Departments.Where(x => x.IsActive == 1).ToList())
                                {

                                    <tr>
                                        <td>

                                            <p> @item.Name </p>

                                        </td>
                                        <td>
                                            <button type="button" class="btn btn-sm clr dropdown-toggle legitRipple" data-toggle="dropdown" aria-expanded="false">Action <span class="caret"></span></button>

                                            <ul class="dropdown-menu dropdown-menu-right">
                                                <li>
                                                    <a href="@Url.Action("departmentAnalysis", "Analysis", new { sid = General_Purpose.EncryptId(item.Id)})">
                                                        View Analytics
                                                    </a>
                                                </li>
                                                <li>
                                                    <a href="@Url.Action("displayDepartmentDetails", "Utilities", new { sid = General_Purpose.EncryptId(item.Id)})">
                                                        View Department
                                                    </a>
                                                </li>
                                                <li>
                                                    <a onclick="setSelectedIndexDiv(@item.DivisionID,'@item.Name',@item.Id)">
                                                        Update
                                                    </a>
                                                </li>
                                                @if (new DepartmentBL().getDepartmentsById(item.Id).Users.Where(x => x.Role == 3 && x.IsActive == 1).Count() == 0 && new DepartmentBL().getDepartmentsById(item.Id).Tasks.Where(x => x.IsActive == 1).Count() == 0)
                                                {
                                                    <li>
                                                        <a onclick="deleteDept(@item.Id)">
                                                            Delete
                                                        </a>
                                                    </li>
                                                }
                                                @if (logedinuser.Role != 3)
                                                {
                                                    <li>
                                                        <a onclick="displayAssignTaskToDept(@item.Id)">Assign Task to Department</a>

                                                    </li>
                                                }
                                            </ul>

                                        </td>

                                    </tr>
                                    j++;
                                }
                            }

                        </tbody>
                    </table>
                </div>

                <div class="tab-pane has-padding" id="tab-manager">
                    <div class="panel-heading">
                        <center><h3 class="panel-title"><b>List of Managers</b></h3></center>
                        <div class="heading-elements">

                            @if (true == true)//session check for number of managers
                            {
                                <a href="@Url.Action("DisplayManager", "Utilities", new {sid=General_Purpose.EncryptId(Model.Id) })" target="_blank" class="btn btn-sm  bg-primary" style="color:white;"> View All Manager </a>

                                <a href="@Url.Action("AddManager", "Utilities", new { divisionId= General_Purpose.EncryptId(Model.Id), page = "division" })" class="btn btn-sm  bg-primary" style="color:white;"> Add Manager <i style="margin-top:-5%;" class="icon-plus-circle2"></i></a>


                                @*<button type="button" class="btn btn-sm  bg-primary dropdown-toggle" data-toggle="dropdown">Add Manager <span class="caret"></span></button>

                                      <ul class="dropdown-menu">

                                          <li>
                                              <a href="@Url.Action("AddManager", "Utilities", new { divisionId= General_Purpose.EncryptId(Model.Id), page = "division" })">
                                                  Add New Manager
                                              </a>
                                          </li>
                                          <li>
                                              <a>
                                                  Add Manager Through C,S,V
                                              </a>
                                          </li>
                                          <li>
                                              <a href="../Content/Backup/2018-11-9--12-17-51.xlsx" download>
                                                  Download C,S,V template
                                              </a>


                                          </li>


                                    </ul>*@



                            }
                            else
                            {

                                <a href="@Url.Action("DisplayManager", "Utilities", new {sid=General_Purpose.EncryptId(Model.Id) })" class="btn  btn-sm bg-primary" style="color:white;"> View All Manager </a>

                                <button class="btn  btn-sm bg-primary-400" style="color:white;" disabled> Add Manager <i class="icon-plus-circle2"></i></button>


                            }



                        </div>
                    </div>
                    <table class="table datatable-button-html5-basic table-bordered table-hover table-striped">

                        <thead>
                            <tr>

                                <th>Name</th>

                                <th>Role</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>

                            @{

                                int k = 0;

                                foreach (User item in Model.Users.Where(x => x.IsActive == 1 || x.IsActive == 2))
                                {

                                    <tr>


                                        <td>
                                            @item.FirstName  @item.LastName
                                        </td>


                                        @{if (item.Role == 2)
                                            {
                                                <td>Manager</td>
                                            }
                                            else if (item.Role == 4)
                                            {
                                                <td>Cordinator</td>
                                            }
                                        }



                                        <td>


                                            <button type="button" class="btn btn-sm btn-success dropdown-toggle legitRipple" data-toggle="dropdown" aria-expanded="false">Action <span class="caret"></span></button>

                                            <ul class="dropdown-menu dropdown-menu-right">
                                                @if (item.IsActive == 2)
                                                {
                                                    <li>
                                                        <a title="@item.Email" href="@Url.Action("sendMailInviteManager", "Utilities", new { id = item.Id, em = item.Email, fn = item.FirstName, isUtilityPage = false, sid = General_Purpose.EncryptId(Model.Id) })">
                                                            Send Invite Again
                                                        </a>
                                                    </li>

                                                }
                                                else
                                                {
                                                    <li>
                                                        <a href="@Url.Action("displayMangAnalaysis", "Analysis", new { sid = General_Purpose.EncryptId(item.Id), page1=ViewBag.page })">
                                                            View Analytics
                                                        </a>
                                                    </li>

                                                    <li>
                                                        <a onclick="displayAssignManagerTask(@item.Id)">
                                                            Assign Task
                                                        </a>
                                                    </li>



                                                    <li>
                                                        <a onclick="openTurnOverModal(@item.Id)">
                                                            Transfer Task
                                                        </a>
                                                    </li>




                                                    <li>
                                                        <a href="@Url.Action("UpdateManager", "Utilities", new { sid = General_Purpose.EncryptId(item.Id),division="yes", way="Division" })">
                                                            Update
                                                        </a>


                                                    </li>
                                                }
                                                <li>
                                                    <a onclick="deleteManager(@item.Id,@item.Role)">
                                                        Delete
                                                    </a>
                                                </li>

                                            </ul>
                                        </td>
                                    </tr>

                                }
                            }

                        </tbody>
                    </table>
                </div>

                <div class="tab-pane has-padding" id="tab-groupTasks">
                    <div class="panel-heading">
                        <center><h3 class="panel-title"><b>List of Group Tasks</b></h3></center>
                        <div class="heading-elements">

                            <a onclick="showAddGroupTask()" class="btn btn-sm  bg-primary" style="color:white;">Add Group Task</a>

                        </div>
                    </div>
                    <table class="table datatable-button-html5-basic table-bordered table-hover table-striped">

                        <thead>
                            <tr>

                                <th>Name</th>


                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>

                            @{

                                k = 0;

                                foreach (User item in Model.Users.Where(x => x.IsActive == 1 || x.IsActive == 2).ToList())
                                {
                                    foreach (var gt in item.GroupTasks.Where(x => x.IsActive == 1).ToList())
                                    {

                                        <tr>
                                            <td>
                                                @gt.Name
                                            </td>
                                            <td>
                                                <button type="button" class="btn btn-sm btn-success dropdown-toggle legitRipple" data-toggle="dropdown" aria-expanded="false">Action <span class="caret"></span></button>

                                                <ul class="dropdown-menu dropdown-menu-right">


                                                    <li>
                                                        <a onclick="showEditGroupTask('@gt.Name','@gt.Id')">
                                                            Update
                                                        </a>
                                                    </li>
                                                    <li>
                                                        <a onclick="deleteGroupTask('@gt.Id')">
                                                            Delete
                                                        </a>
                                                    </li>
                                                </ul>

                                            </td>
                                        </tr>
                                    }


                                }
                            }

                        </tbody>
                    </table>
                </div>

                <div class="tab-pane has-padding" id="tab-tag">
                    <div class="panel-heading">
                        <center><h3 class="panel-title"><b>List of Tags</b></h3></center>
                        <div class="heading-elements">
                            <ul class="icons-list">

                                <li>
                                    <a class="btn  btn-sm bg-primary" href="@Url.Action("displayTag", "Utilities",new { sid=ViewBag.Id, way="Division" })" style="color:white;"> View All Tags</a>
                                </li>
                                <li>
                                    <a class="btn  btn-sm bg-primary" data-target="#addTagModal" data-toggle="modal" style="color:white;"> Add Tag <i style="margin-top:-5%;" class="icon-plus-circle2"></i></a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <table class="table datatable-button-html5-basic table-bordered table-hover table-striped">

                        <thead>
                            <tr>

                                <th>Name</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>

                            @{

                                int kro = 0;

                                foreach (Tag item in Model.Tags.Where(x => x.IsActive == 1))
                                {

                                    <tr>
                                        <td>
                                            @item.Name
                                        </td>

                                        <td>
                                            <button type="button" class="btn  btn-sm btn-success dropdown-toggle legitRipple" data-toggle="dropdown" aria-expanded="false">Action <span class="caret"></span></button>

                                            <ul class="dropdown-menu dropdown-menu-right">

                                                <li>
                                                    <a onclick="setSelectedIndexTag(@item.DivisionId,'@item.Name',@item.Id)">
                                                        Update
                                                    </a>
                                                </li>
                                                <li>
                                                    <a onclick="deleteTag(@item.Id)">
                                                        Delete
                                                    </a>
                                                </li>
                                            </ul>
                                        </td>
                                    </tr>

                                }
                            }

                        </tbody>
                    </table>
                </div>
            </div>

        </div>

    </div>
    <!-- Basic initialization -->
</div>



<div id="UserTurnOverModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Transfer User Tasks</h4>

            </div>
            <form action="@Url.Action("PostTurnOverTask","Task")" method="post">
                <div class="modal-body">

                    <input type="hidden" name="FromId" id="fromId" />
                    <input type="hidden" name="Way" value="Division" />
                    <input type="hidden" name="sid" value="@Model.Id"/>

                    <div class="form-group col-md-12">
                        <label class="control-label">Select User</label> <i id="turnOverUserSpiner" class="icon-spinner spinner" style="display:none"></i>
                        <select class="select" onchange="getUserList(this.value)" required>
                            <option selected disabled value="">Please select User Type</option>
                            <option value="1">Admins</option>
                            <option value="2">Managers</option>
                        </select>

                    </div>

                    <div class="form-group col-md-12" id="turnOverUserDiv" hidden>
                        <label class="control-label" id="turnOverUserLabel">Select User</label>
                        <select class="select" name="ToId" id="turnOverUserOption" required>
                            <option selected disabled value="">Please select User</option>
                        </select>

                    </div>

                </div>
                <div class="modal-footer">
                    <span id="btnInfoTurnOver" style="color:red"></span>
                    <button type="button" class="btn btn-sm  btn-default" data-dismiss="modal">Close</button>
                    <button class="btn btn-sm  bg-primary-400">Change</button>
                </div>
            </form>
        </div>
    </div>
</div>


<div id="AssignEmpTask" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form class="form-horizontal" id="assignTask2" onsubmit="return frequencyCheckEmployee()" action="@Url.Action("AssignTaskToDivisionfromDetails","Task")" method="post">
                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">Assign task to Whole Division</h4>
                </div>
                @*<input type="hidden" name="traineeId" value="-1" id="traineeId" />*@
                <input type="hidden" name="divID" value="@Model.Id" id="divaId" />
                <div class="modal-body">

                    <div class="form-group">
                        <label class="col-lg-3 control-label">Task<span class="text-danger">*</span></label>
                        <div class="col-lg-9">
                            <select class="select-results-color" required="required" onchange="setwholedivisionValues()" name="TaskId" id="selectDivTask">

                                <option value="" selected disabled>Select Task</option>
                                @{
                                    List<Task> list2 = new List<Task>();
                                }
                                @foreach (var department in Model.Departments.Where(x => x.IsActive == 1).ToList())
                                {
                                    foreach (var item in department.Tasks.Where(x => x.IsPrivate == 0 && x.IsActive == 1).ToList())
                                    {
                                        list2.Add(item);
                                    }
                                }
                                @foreach (var item in list2.OrderBy(x => x.Name))
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-lg-3 control-label">Cost ($) </label>
                        <div class="col-lg-9">
                            <input type="text" class="form-control" name="Cost" maxlength="150" id="cost2">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">CEU's</label>
                        <div class="col-lg-9">
                            <input type="text" class="form-control" name="CEU" maxlength="150" id="ceu2">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label"> Hours <span class="text-danger"></span></label>
                        <div class="col-lg-9">
                            @*<input type="text" class="form-control" name="hours" id="hours2">*@
                            <select class="select-results-color" name="hours" id="hours2">
                                <option value="">Select Hours</option>
                                <option value="0.5">0.5</option>
                                <option value="1">1</option>
                                <option value="1.5">1.5</option>
                                <option value="2">2</option>
                                <option value="2.5">2.5</option>
                                <option value="3">3</option>
                                <option value="3.5">3.5</option>
                                <option value="4">4</option>
                                <option value="4.5">4.5</option>
                                <option value="5">5</option>
                                <option value="5.5">5.5</option>
                                <option value="6">6</option>
                                <option value="6.5">6.5</option>
                                <option value="7">7</option>
                                <option value="7.5">7.5</option>
                                <option value="8">8</option>
                                <option value="8.5">8.5</option>
                                <option value="9">9</option>
                                <option value="9.5">9.5</option>
                                <option value="10">10</option>
                                <option value="10.5">10.5</option>
                                <option value="11">11</option>
                                <option value="11.5">11.5</option>
                                <option value="12">12</option>
                                <option value="12.5">12.5</option>
                                <option value="13">13</option>
                                <option value="13.5">13.5</option>
                                <option value="14">14</option>
                                <option value="14.5">14.5</option>
                                <option value="15">15</option>
                                <option value="15.5">15.5</option>
                                <option value="16">16</option>
                                <option value="16.5">16.5</option>
                                <option value="17">17</option>
                                <option value="17.5">17.5</option>
                                <option value="18">18</option>
                                <option value="18.5">18.5</option>
                                <option value="19">19</option>
                                <option value="19.5">19.5</option>
                                <option value="20">20</option>
                                <option value="20.5">20.5</option>
                                <option value="21">21</option>
                                <option value="21.5">21.5</option>
                                <option value="22">22</option>
                                <option value="22.5">22.5</option>
                                <option value="23">23</option>
                                <option value="23.5">23.5</option>
                                <option value="24">24</option>
                                <option value="24.5">24.5</option>
                                <option value="25">25</option>
                                <option value="25.5">25.5</option>
                                <option value="26">26</option>
                                <option value="26.5">26.5</option>
                                <option value="27">27</option>
                                <option value="27.5">27.5</option>
                                <option value="28">28</option>
                                <option value="28.5">28.5</option>
                                <option value="29">29</option>
                                <option value="29.5">29.5</option>
                                <option value="30">30</option>
                                <option value="30.5">30.5</option>
                                <option value="31">31</option>
                                <option value="31.5">31.5</option>
                                <option value="32">32</option>
                                <option value="32.5">32.5</option>
                                <option value="33">33</option>
                                <option value="33.5">33.5</option>
                                <option value="34">34</option>
                                <option value="34.5">34.5</option>
                                <option value="35">35</option>
                                <option value="35.5">35.5</option>
                                <option value="36">36</option>
                                <option value="36.5">36.5</option>
                                <option value="37">37</option>
                                <option value="37.5">37.5</option>
                                <option value="38">38</option>
                                <option value="38.5">38.5</option>
                                <option value="39">39</option>
                                <option value="39.5">39.5</option>
                                <option value="40">40</option>
                                <option value="40.5">40.5</option>
                                <option value="41">41</option>
                                <option value="41.5">41.5</option>
                                <option value="42">42</option>
                                <option value="42.5">42.5</option>
                                <option value="43">43</option>
                                <option value="43.5">43.5</option>
                                <option value="44">44</option>
                                <option value="44.5">44.5</option>
                                <option value="45">45</option>
                                <option value="45.5">45.5</option>
                                <option value="46">46</option>
                                <option value="46.5">46.5</option>
                                <option value="47">47</option>
                                <option value="47.5">47.5</option>
                                <option value="48">48</option>
                                <option value="48.5">48.5</option>
                                <option value="49">49</option>
                                <option value="49.5">49.5</option>
                                <option value="50">50</option>



                            </select>

                        </div>
                    </div>
                    <div id="DivisionTaskGradeDiv" class="form-group">
                        <label class="col-lg-3 control-label">Grade (%)</label>
                        <div class="col-lg-9">
                            <input type="number" class="form-control" min="0" max="100" name="Grad" id="divGrade">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Notes</label>
                        <div class="col-lg-9">
                            <textarea class="form-control" name="Notes" id="notes2"></textarea>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Priority</label>
                        <div class="col-lg-9">
                            <select class="select" name="Priority">

                                <option value="0" selected>Low</option>
                                <option value="1">Medium</option>
                                <option value="2">High</option>
                            </select>
                        </div>
                    </div>

                    @*<div id="DivisionCourse" class="form-group">
                            <label class="col-lg-3 control-label"><span class="text-danger"></span>Canvas Course</label>
                            <div class="col-lg-9">
                                <select class="select-results-color" name="CanvasCourseId" id="DivisionCanvasCourseId">
                                    <option value="">Select Canvas Course</option>
                                    @if (ViewBag.canvascourses != null)
                                    {
                                        foreach (Course cr in ViewBag.canvascourses)
                                        {
                                            <option value="@cr.id">@cr.name</option>
                                        }
                                    }


                                </select>
                            </div>
                        </div>*@
                    @if (Company.IsLMS == 1)
                    {
                        <div id="" class="form-group">
                            <label class="col-lg-3 control-label"><span class="text-danger"></span>Course</label>
                            <div class="col-lg-9">
                                <select class="select-results-color" onchange="CheckDivisionSCORMCourse()" name="CanvasCourseId" id="divCourseId">
                                    <option value="">Select Course</option>

                                    @foreach (Course cr in courses)
                                    {
                                        if (cr.IsScorm == 1)
                                        {
                                            <option id="@cr.Id" value="@cr.Id">@cr.Name</option>

                                        }
                                        else
                                        {

                                            <option value="@cr.Id">@cr.Name</option>
                                        }
                                    }


                                </select>
                            </div>
                        </div>
                    }

                    @*<div class="form-group">
                            <label class="col-lg-3 control-label">Is Private</label>
                            <div class="col-lg-9">
                                <input type="checkbox"  name="" checked> Yes
                            </div>
                        </div>*@

                    <div class="form-group" style="margin-bottom:20px;">
                        <label class="col-lg-3 control-label">Start Date<span class="text-danger">*</span></label>
                        <div class="col-lg-9">
                            <input type="date" class="form-control" name="StartDate" id="StartDateTask2" required>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-2 control-label">End Date</label>
                        <div class="col-lg-4 col-lg-offset-1">
                            <input type="date" class="form-control" onchange="checkDates2()" name="EndDate" id="EndDateTask2">
                        </div>
                        <label class="col-lg-2 control-label">End Time</label>
                        <div class="col-lg-3">
                            <input id="timepicker2" type="text" name="time" value="11:59 PM" class="form-control input-small">
                        </div>
                    </div>
                    <p class="text-center">OR</p>
                    <fieldset>
                        <legend>Frequency</legend>

                        <div class="form-group">
                            <label class="col-lg-3 control-label">Frequency</label>
                            <div class="col-lg-9">
                                <input type="radio" id="Eradiotype1" name="days" value="1" onclick="setDivReminderOption(this.value)"/> Every Day<br />
                                <input type="radio" id="Eradiotype2" name="days" value="2" onclick="setDivReminderOption(this.value)"/> Every Week<br />
                                <input type="radio" id="Eradiotype3" name="days" value="3" onclick="setDivReminderOption(this.value)"/> Every Month<br />
                                <input type="radio" id="Eradiotype4" name="days" value="4" onclick="setDivReminderOption(this.value)"/> Every Year<br />
                                <input type="radio" id="Eradiotype5" name="days" value="5" onclick="setDivReminderOption(this.value)"/> Every 2 Years<br />

                                <input type="radio" id="Eradiotype6" name="days" value="6" onclick="setDivReminderOption(this.value)"/> Custom<br />
                                <input type="radio" id="Eradiotype-1" checked name="days" value="-1" onclick="setDivReminderOption(this.value)"/> None <br />

                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Custom Frequency</label>
                            <div class="col-lg-9">
                                <input type="number" class="form-control" name="freqDays" id="freqDays2" maxlength="150" onkeyup="setCustomDivReminderOption(this.value)" placeholder="Days">
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Frequency Ending Date:</label>
                            <div class="col-lg-9">


                                <input type="date" id="EFeqEndingDate" name="FeqEndingDate" />
                            </div>
                        </div>
                    </fieldset>

                    <fieldset>
                        <legend>Set Reminder</legend>
                        <div class="form-group col-md-12" id="DReminder">
                            <label class="col-lg-3 control-label">Reminder: </label>
                            <div class="col-lg-9">
                                <select class="select" name="DReminder" id="divDailyReminder">
                                    @*<option selected value="@ViewBag.currentStatus">@General_Purpose.getStatusValue((int)ViewBag.currentStatus)</option>*@
                                    <option value="">Select Type</option>
                                    <option value="1">Daily</option>
                                </select>
                            </div>


                        </div>
                    </fieldset>
                    <div id="data2"></div>

                </div>
                <div class="modal-footer">
                    <label id="errorDisplayTask2" class="control-label text-danger" hidden> No Employee Selected !  </label>
                    <span style="color:red" id="Espanmsg"></span>

                    <button type="button" class="btn btn-sm  btn-default" data-dismiss="modal">Close</button>
                    <button type="button" id="sbButtonTask2" onclick="checkValues2()" class="btn btn-sm  btn-primary">Assign</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="AssignTaskToDept" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form class="form-horizontal" id="assignTask3" onsubmit="return frequencyCheckManager()" action="@Url.Action("AssignTaskToDepatmentfromDetails","Task")" method="post">
                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">Assign task to Whole Department</h4>
                </div>
                @*<input type="hidden" name="traineeId" value="-1" id="traineeId" />*@
                <input type="hidden" name="depatmentID" value="-1" id="departmentID" />
                <input type="hidden" name="divID" value="@Model.Id" id="divaId" />
                <div class="modal-body">

                    <div class="form-group">
                        <label class="col-lg-3 control-label">Task<span class="text-danger">*</span></label>
                        <div class="col-lg-9">
                            <select class="select-results-color" required="required" onchange="setwholedepatmentValues()" name="TaskId" id="selectDeptTask">


                                <option value="" selected disabled>Select Task</option>
                                @*@foreach (var department in Model.Departments.Where(x => x.IsActive == 1).ToList())
                                    {
                                        foreach (var item in department.Tasks.Where(x => x.IsPrivate == 0 && x.IsActive == 1).ToList())
                                        {
                                            <option value="@item.Id">@item.Name</option>
                                        }
                                    }*@
                            </select>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-lg-3 control-label">Cost ($) </label>
                        <div class="col-lg-9">
                            <input type="text" class="form-control" name="Cost" maxlength="150" id="cost3">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">CEU's</label>
                        <div class="col-lg-9">
                            <input type="text" class="form-control" name="CEU" maxlength="150" id="ceu3">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label"> Hours <span class="text-danger"></span></label>
                        <div class="col-lg-9">
                            @*<input type="text" class="form-control" name="hours" id="hours3" required>*@
                            <select class="select-results-color" name="hours" id="hours3">
                                <option value="">Select Hours</option>
                                <option value="0.5">0.5</option>
                                <option value="1">1</option>
                                <option value="1.5">1.5</option>
                                <option value="2">2</option>
                                <option value="2.5">2.5</option>
                                <option value="3">3</option>
                                <option value="3.5">3.5</option>
                                <option value="4">4</option>
                                <option value="4.5">4.5</option>
                                <option value="5">5</option>
                                <option value="5.5">5.5</option>
                                <option value="6">6</option>
                                <option value="6.5">6.5</option>
                                <option value="7">7</option>
                                <option value="7.5">7.5</option>
                                <option value="8">8</option>
                                <option value="8.5">8.5</option>
                                <option value="9">9</option>
                                <option value="9.5">9.5</option>
                                <option value="10">10</option>
                                <option value="10.5">10.5</option>
                                <option value="11">11</option>
                                <option value="11.5">11.5</option>
                                <option value="12">12</option>
                                <option value="12.5">12.5</option>
                                <option value="13">13</option>
                                <option value="13.5">13.5</option>
                                <option value="14">14</option>
                                <option value="14.5">14.5</option>
                                <option value="15">15</option>
                                <option value="15.5">15.5</option>
                                <option value="16">16</option>
                                <option value="16.5">16.5</option>
                                <option value="17">17</option>
                                <option value="17.5">17.5</option>
                                <option value="18">18</option>
                                <option value="18.5">18.5</option>
                                <option value="19">19</option>
                                <option value="19.5">19.5</option>
                                <option value="20">20</option>
                                <option value="20.5">20.5</option>
                                <option value="21">21</option>
                                <option value="21.5">21.5</option>
                                <option value="22">22</option>
                                <option value="22.5">22.5</option>
                                <option value="23">23</option>
                                <option value="23.5">23.5</option>
                                <option value="24">24</option>
                                <option value="24.5">24.5</option>
                                <option value="25">25</option>
                                <option value="25.5">25.5</option>
                                <option value="26">26</option>
                                <option value="26.5">26.5</option>
                                <option value="27">27</option>
                                <option value="27.5">27.5</option>
                                <option value="28">28</option>
                                <option value="28.5">28.5</option>
                                <option value="29">29</option>
                                <option value="29.5">29.5</option>
                                <option value="30">30</option>
                                <option value="30.5">30.5</option>
                                <option value="31">31</option>
                                <option value="31.5">31.5</option>
                                <option value="32">32</option>
                                <option value="32.5">32.5</option>
                                <option value="33">33</option>
                                <option value="33.5">33.5</option>
                                <option value="34">34</option>
                                <option value="34.5">34.5</option>
                                <option value="35">35</option>
                                <option value="35.5">35.5</option>
                                <option value="36">36</option>
                                <option value="36.5">36.5</option>
                                <option value="37">37</option>
                                <option value="37.5">37.5</option>
                                <option value="38">38</option>
                                <option value="38.5">38.5</option>
                                <option value="39">39</option>
                                <option value="39.5">39.5</option>
                                <option value="40">40</option>
                                <option value="40.5">40.5</option>
                                <option value="41">41</option>
                                <option value="41.5">41.5</option>
                                <option value="42">42</option>
                                <option value="42.5">42.5</option>
                                <option value="43">43</option>
                                <option value="43.5">43.5</option>
                                <option value="44">44</option>
                                <option value="44.5">44.5</option>
                                <option value="45">45</option>
                                <option value="45.5">45.5</option>
                                <option value="46">46</option>
                                <option value="46.5">46.5</option>
                                <option value="47">47</option>
                                <option value="47.5">47.5</option>
                                <option value="48">48</option>
                                <option value="48.5">48.5</option>
                                <option value="49">49</option>
                                <option value="49.5">49.5</option>
                                <option value="50">50</option>



                            </select>
                        </div>
                    </div>
                    <div id="DepartmentTaskGradeDiv" class="form-group">
                        <label class="col-lg-3 control-label">Grade (%)</label>
                        <div class="col-lg-9">
                            <input type="number" class="form-control" min="0" max="100" name="Grad" id="depGrade">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Notes</label>
                        <div class="col-lg-9">
                            <textarea class="form-control" name="Notes" id="notes3" maxlength="500"></textarea>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Priority</label>
                        <div class="col-lg-9">
                            <select class="select" name="Priority">

                                <option value="0" selected>Low</option>
                                <option value="1">Medium</option>
                                <option value="2">High</option>
                            </select>
                        </div>
                    </div>
                    @if (Company.IsLMS == 1)
                    {
                        <div id="" class="form-group">
                            <label class="col-lg-3 control-label"><span class="text-danger"></span>Course</label>
                            <div class="col-lg-9">
                                <select class="select-results-color" onchange="CheckDepartmentSCORMCourse()" name="CanvasCourseId" id="depCourseId">
                                    <option value="">Select Course</option>

                                    @foreach (Course cr in courses)
                                    {
                                        if (cr.IsScorm == 1)
                                        {
                                            <option id="@cr.Id" value="@cr.Id">@cr.Name</option>

                                        }
                                        else
                                        {

                                            <option value="@cr.Id">@cr.Name</option>
                                        }
                                    }



                                </select>
                            </div>
                        </div>
                    }
                    @*<div id="DepartmentCourse" class="form-group">
                            <label class="col-lg-3 control-label"><span class="text-danger"></span>Canvas Course</label>
                            <div class="col-lg-9">
                                <select class="select-results-color" name="CanvasCourseId" id="DepartmentCanvasCourseId">
                                    <option value="">Select Canvas Course</option>
                                    @if (ViewBag.canvascourses!=null)
                                    {
                                        foreach (Course cr in ViewBag.canvascourses)
                                        {
                                            <option value="@cr.id">@cr.name</option>
                                        }

                                    }

                                </select>
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            <label class="col-lg-3 control-label">Is Private</label>
                            <div class="col-lg-9">
                                <input type="checkbox"  name="" checked> Yes
                            </div>
                        </div>*@

                    <div class="form-group" style="margin-bottom:20px;">
                        <label class="col-lg-3 control-label">Start Date<span class="text-danger">*</span></label>
                        <div class="col-lg-9">
                            <input type="date" class="form-control" name="StartDate" id="StartDateTask3" required>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-2 control-label">End Date</label>
                        <div class="col-lg-4 col-lg-offset-1">
                            <input type="date" class="form-control" onchange="checkDates3()" name="EndDate" id="EndDateTask3">
                        </div>
                        <label class="col-lg-2 control-label">End Time</label>
                        <div class="col-lg-3">
                            <input id="timepicker1" type="text" name="time" value="11:59 PM" class="form-control input-small">
                        </div>
                    </div>
                    <p class="text-center">OR</p>
                    <fieldset>
                        <legend>Frequency</legend>

                        <div class="form-group">
                            <label class="col-lg-3 control-label">Frequency</label>
                            <div class="col-lg-9">
                                <input type="radio" id="Mradiotype1" name="days" value="1" onclick="setDepReminderOption(this.value)"/> Every Day<br />
                                <input type="radio" id="Mradiotype2" name="days" value="2" onclick="setDepReminderOption(this.value)"/> Every Week<br />
                                <input type="radio" id="Mradiotype3" name="days" value="3" onclick="setDepReminderOption(this.value)"/> Every Month<br />
                                <input type="radio" id="Mradiotype4" name="days" value="4" onclick="setDepReminderOption(this.value)"/> Every Year<br />
                                <input type="radio" id="Mradiotype5" name="days" value="5" onclick="setDepReminderOption(this.value)"/> Every 2 Years<br />

                                <input type="radio" id="Mradiotype6" name="days" value="6" onclick="setDepReminderOption(this.value)"/> Custom<br />
                                <input type="radio" id="Mradiotype-1" checked name="days" value="-1" onclick="setDepReminderOption(this.value)"/> None <br />

                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Custom Frequency</label>
                            <div class="col-lg-9">
                                <input type="number" class="form-control" name="freqDays" id="freqDays3" maxlength="150" onkeyup="setCustomDepReminderOption(this.value)" placeholder="Days">
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Frequency Ending Date:</label>
                            <div class="col-lg-9">


                                <input type="date" id="MFeqEndingDate" name="FeqEndingDate" />
                            </div>
                        </div>
                    </fieldset>
                    <fieldset>
                        <legend>Set Reminder</legend>
                        <div class="form-group col-md-12" id="DReminder">
                            <label class="col-lg-3 control-label">Reminder: </label>
                            <div class="col-lg-9">
                                <select class="select" name="DReminder" id="depDailyReminder">
                                    @*<option selected value="@ViewBag.currentStatus">@General_Purpose.getStatusValue((int)ViewBag.currentStatus)</option>*@
                                    <option value="">Select Type</option>
                                    <option value="1">Daily</option>
                                </select>
                            </div>


                        </div>
                    </fieldset>
                    <div id="data"></div>

                </div>
                <div class="modal-footer">
                    <label id="errorDisplayTask3" class="control-label text-danger" hidden> No Employee Selected !  </label>
                    <span style="color:red" id="Mspanmsg"></span>

                    <button type="button" class="btn btn-sm  btn-default" data-dismiss="modal">Close</button>
                    <button type="button" id="sbButtonTask3" onclick="checkValues3()" class="btn btn-sm  btn-primary">Assign</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="AssignTask" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form class="form-horizontal" id="assignTask1" onsubmit="return frequencyCheck()" action="@Url.Action("assigntoManager","Manager")" method="post">
                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">Assign task to Manager</h4>
                </div>
                <input type="hidden" name="managerId" value="-1" id="managerId" />
                <input type="hidden" name="divisionId" value="@Model.Id" id="divaId" />
                <div class="modal-body">

                    <div class="form-group">
                        <label class="col-lg-3 control-label">Task  <span class="text-danger">*</span></label>
                        <div class="col-lg-9">
                            <select class="select-results-color" required="required" onchange="setValues()" name="TaskId" id="selectTask">

                                <option value="" selected disabled>Select Task</option>
                                @{
                                    List<Task> list = new List<Task>();
                                }
                                @foreach (Department dept in Model.Departments)
                                {

                                    foreach (var item in dept.Tasks.Where(x => x.IsPrivate == 0 && x.IsActive == 1).ToList())
                                    {
                                        list.Add(item);
                                    }
                                }
                                @{
                                    // list.Sort();
                                }
                                @foreach (var item in list.OrderBy(x => x.Name))
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-lg-3 control-label">Cost ($)</label>
                        <div class="col-lg-9">
                            <input type="text" class="form-control" name="Cost" maxlength="150" id="cost1">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">CEU's</label>
                        <div class="col-lg-9">
                            <input type="text" class="form-control" name="CEU" maxlength="150" id="ceu1">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Hours </label>
                        <div class="col-lg-9">
                            @*<input type="text" class="form-control" name="hours" id="hours1">*@
                            <select class="select-results-color" name="hours" id="hours1" required>
                                <option value="">Select Hours</option>
                                <option value="0.5">0.5</option>
                                <option value="1">1</option>
                                <option value="1.5">1.5</option>
                                <option value="2">2</option>
                                <option value="2.5">2.5</option>
                                <option value="3">3</option>
                                <option value="3.5">3.5</option>
                                <option value="4">4</option>
                                <option value="4.5">4.5</option>
                                <option value="5">5</option>
                                <option value="5.5">5.5</option>
                                <option value="6">6</option>
                                <option value="6.5">6.5</option>
                                <option value="7">7</option>
                                <option value="7.5">7.5</option>
                                <option value="8">8</option>
                                <option value="8.5">8.5</option>
                                <option value="9">9</option>
                                <option value="9.5">9.5</option>
                                <option value="10">10</option>
                                <option value="10.5">10.5</option>
                                <option value="11">11</option>
                                <option value="11.5">11.5</option>
                                <option value="12">12</option>
                                <option value="12.5">12.5</option>
                                <option value="13">13</option>
                                <option value="13.5">13.5</option>
                                <option value="14">14</option>
                                <option value="14.5">14.5</option>
                                <option value="15">15</option>
                                <option value="15.5">15.5</option>
                                <option value="16">16</option>
                                <option value="16.5">16.5</option>
                                <option value="17">17</option>
                                <option value="17.5">17.5</option>
                                <option value="18">18</option>
                                <option value="18.5">18.5</option>
                                <option value="19">19</option>
                                <option value="19.5">19.5</option>
                                <option value="20">20</option>
                                <option value="20.5">20.5</option>
                                <option value="21">21</option>
                                <option value="21.5">21.5</option>
                                <option value="22">22</option>
                                <option value="22.5">22.5</option>
                                <option value="23">23</option>
                                <option value="23.5">23.5</option>
                                <option value="24">24</option>
                                <option value="24.5">24.5</option>
                                <option value="25">25</option>
                                <option value="25.5">25.5</option>
                                <option value="26">26</option>
                                <option value="26.5">26.5</option>
                                <option value="27">27</option>
                                <option value="27.5">27.5</option>
                                <option value="28">28</option>
                                <option value="28.5">28.5</option>
                                <option value="29">29</option>
                                <option value="29.5">29.5</option>
                                <option value="30">30</option>
                                <option value="30.5">30.5</option>
                                <option value="31">31</option>
                                <option value="31.5">31.5</option>
                                <option value="32">32</option>
                                <option value="32.5">32.5</option>
                                <option value="33">33</option>
                                <option value="33.5">33.5</option>
                                <option value="34">34</option>
                                <option value="34.5">34.5</option>
                                <option value="35">35</option>
                                <option value="35.5">35.5</option>
                                <option value="36">36</option>
                                <option value="36.5">36.5</option>
                                <option value="37">37</option>
                                <option value="37.5">37.5</option>
                                <option value="38">38</option>
                                <option value="38.5">38.5</option>
                                <option value="39">39</option>
                                <option value="39.5">39.5</option>
                                <option value="40">40</option>
                                <option value="40.5">40.5</option>
                                <option value="41">41</option>
                                <option value="41.5">41.5</option>
                                <option value="42">42</option>
                                <option value="42.5">42.5</option>
                                <option value="43">43</option>
                                <option value="43.5">43.5</option>
                                <option value="44">44</option>
                                <option value="44.5">44.5</option>
                                <option value="45">45</option>
                                <option value="45.5">45.5</option>
                                <option value="46">46</option>
                                <option value="46.5">46.5</option>
                                <option value="47">47</option>
                                <option value="47.5">47.5</option>
                                <option value="48">48</option>
                                <option value="48.5">48.5</option>
                                <option value="49">49</option>
                                <option value="49.5">49.5</option>
                                <option value="50">50</option>



                            </select>
                        </div>
                    </div>
                    <div id="ManagerTaskGradeDiv" class="form-group">
                        <label class="col-lg-3 control-label">Grade (%)</label>
                        <div class="col-lg-9">
                            <input type="number" class="form-control" min="0" max="100" name="Grad" id="managerGrade">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Notes</label>
                        <div class="col-lg-9">
                            <textarea class="form-control" name="Notes" id="notes1"></textarea>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Priority</label>
                        <div class="col-lg-9">
                            <select class="form-control" name="Priority">

                                <option value="0" selected>Low</option>
                                <option value="1">Medium</option>
                                <option value="2">High</option>
                            </select>
                        </div>
                    </div>

                    @*<div id="ManagerCourse" class="form-group">
                            <label class="col-lg-3 control-label"><span class="text-danger"></span>Canvas Course</label>
                            <div class="col-lg-9">
                                <select class="select-results-color" name="CanvasCourseId" id="ManagerCanvasCourseId">
                                    <option value="">Select Canvas Course</option>
                                    @if (ViewBag.canvascourses!=null)
                                    {
                                        foreach (Course cr in ViewBag.canvascourses)
                                        {
                                            <option value="@cr.id">@cr.name</option>
                                        }
                                    }


                                </select>
                            </div>
                        </div>*@
                    @if (Company.IsLMS == 1)
                    {
                        <div id="" class="form-group">
                            <label class="col-lg-3 control-label"><span class="text-danger"></span>Course</label>
                            <div class="col-lg-9">
                                <select class="select-results-color" onchange="CheckManagerTaskSCORMCourse" name="CanvasCourseId" id="managerCourseId">
                                    <option value="">Select Course</option>

                                    @foreach (Course cr in courses)
                                    {
                                        if (cr.IsScorm == 1)
                                        {
                                            <option id="@cr.Id" value="@cr.Id">@cr.Name</option>

                                        }
                                        else
                                        {

                                            <option value="@cr.Id">@cr.Name</option>
                                        }
                                    }

                                </select>
                            </div>
                        </div>
                    }

                    @*<div class="form-group">
                            <label class="col-lg-3 control-label">Is Private</label>
                            <div class="col-lg-9">
                                <input type="checkbox"  name="" checked> Yes
                            </div>
                        </div>*@

                    <div class="form-group" style="margin-bottom:20px;">
                        <label class="col-lg-3 control-label">Start Date  <span class="text-danger">*</span></label>
                        <div class="col-lg-9">
                            <input type="date" class="form-control" name="StartDate" id="StartDateTask1" required>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">End Date</label>
                        <div class="col-lg-4 ">
                            <input type="date" class="form-control" onchange="checkDates1()" name="EndDate" id="EndDateTask1">
                        </div>
                        <label class="col-lg-2 control-label">End Time</label>
                        <div class="col-lg-3">
                            <input id="" value="11:59 PM" type="text" name="time" class="form-control input-small">
                        </div>
                    </div>
                    <p class="text-center">OR</p>
                    <fieldset>
                        <legend><b>Frequency</b></legend>

                        <div class="form-group">
                            <label class="col-lg-3 control-label">Frequency</label>
                            <div class="col-lg-9">
                                <input type="radio" id="radiotype1" name="days" value="1" onclick="setManagerReminderOption(this.value)" /> Every Day<br />
                                <input type="radio" id="radiotype2" name="days" value="2" onclick="setManagerReminderOption(this.value)" /> Every Week<br />
                                <input type="radio" id="radiotype3" name="days" value="3" onclick="setManagerReminderOption(this.value)" /> Every Month<br />
                                <input type="radio" id="radiotype4" name="days" value="4" onclick="setManagerReminderOption(this.value)" /> Every Year<br />
                                <input type="radio" id="radiotype5" name="days" value="5" onclick="setManagerReminderOption(this.value)" /> Every 2 Years<br />

                                <input type="radio" id="radiotype6" name="days" value="6" onclick="setManagerReminderOption(this.value)" /> Custom<br />
                                <input type="radio" id="radiotype-1" checked name="days" value="-1" onclick="setManagerReminderOption(this.value)" /> None <br />

                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Custom Frequency</label>
                            <div class="col-lg-9">
                                <input type="number" class="form-control" maxlength="150" name="freqDays" id="freqDays1" onkeyup="setCustomManagerReminderOption(this.value)" placeholder="Days">
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Frequency Ending Date:</label>
                            <div class="col-lg-9">


                                <input type="date" id="FeqEndingDate" name="FeqEndingDate" />
                            </div>
                        </div>
                    </fieldset>

                    <fieldset>
                        <legend>Set Reminder</legend>
                        <div class="form-group col-md-12" id="DReminder">
                            <label class="col-lg-3 control-label">Reminder: </label>
                            <div class="col-lg-9">
                                <select class="select" name="DReminder" id="managerDailyReminder">
                                    @*<option selected value="@ViewBag.currentStatus">@General_Purpose.getStatusValue((int)ViewBag.currentStatus)</option>*@
                                    <option value="">Select Type</option>
                                    <option value="1">Daily</option>
                                </select>
                            </div>


                        </div>
                    </fieldset>
                    <div id="data1"></div>

                </div>
                <div class="modal-footer">
                    <label id="errorDisplayTask1" class="control-label text-danger" hidden> No Employee Selected !  </label>
                    <span style="color:red" id="spanmsg"></span>

                    <button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Close</button>
                    <button id="sbButtonTask1" onclick="checkValues1()" class="btn btn-primary btn-sm">Assign</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="EditTag" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form class="form-horizontal">
                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">Assign tasks to multiple Employees</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Tag</label>
                        <div class="col-lg-9">
                            <input type="text" class="form-control" name="" id="">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Division</label>
                        <div class="col-lg-9">
                            <select class="form-control">
                                <option disabled selected value="">Select task</option>

                            </select>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn  btn-sm btn-default" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn  btn-sm btn-primary">Assign</button>
                </div>
            </form>
        </div>
    </div>
</div>


<div id="EditTag" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form class="form-horizontal">
                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">Assign tasks to multiple trainees</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Tag</label>
                        <div class="col-lg-9">
                            <input type="text" class="form-control" name="" id="">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Division</label>
                        <div class="col-lg-9">
                            <select class="form-control">
                                <option disabled selected value="">Select Tag</option>
                                <option value="">abc</option>
                            </select>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn  btn-sm btn-default btn-sm" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn  btn-sm btn-primary btn-sm">Assign</button>
                </div>
            </form>
        </div>
    </div>
</div>


<div class="modal fade" id="departmentAddModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form class="form-horizontal" method="post" action="@Url.Action("AddDepartments","Utilities")">
                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="exampleModalLabel">Add Department</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Department</label>
                        <div class="col-lg-9">
                            <input required type="text" class="form-control" maxlength="150" name="Name" id="adddepartment" onkeyup="vlidateDepartment(document.getElementById('adddepartment').id,'divIdd', document.getElementById('errorDisplay').id, document.getElementById('sb').id,'add')" />

                            <input type="hidden" name="divisionId" id="divIdd" value="@Model.Id" />
                            <input type="hidden" name="way" value="Department" />
                        </div>
                    </div>




                    <div class="form-group col-lg-3">
                    </div>
                </div>
                <div class="modal-footer">
                    <label id="errorDisplay" class="control-label text-danger" hidden> Name not Available in this Division !</label>
                    <button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Close</button>
                    <button type="submit" id="sb" class="btn bg-primary-400 btn-sm">Add</button>
                </div>
            </form>
        </div>
    </div>
</div>


<div id="editDepart" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form class="form-horizontal" action="@Url.Action("UpdateDepartmentAction","Utilities")">
                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">Update Department</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Department</label>
                        <div class="col-lg-9">
                            <input type="text" class="form-control" required maxlength="49" name="Name" id="updateDepartment" onkeyup="vlidateDepartment(document.getElementById('updateDepartment').id,'updateDepartmentDivId', document.getElementById('updateerrorDisplay').id, document.getElementById('updatesb').id)">
                            <input type="hidden" name="DivisionID" id="updateDepartmentDivId" value="@Model.Id" />
                            <input type="hidden" name="way" id="" value="Div" />
                        </div>
                    </div>



                </div>
                <input type="hidden" name="Id" id="depId" value="" />
                <div class="modal-footer">
                    <label id="updateerrorDisplay" class="control-label text-danger" hidden> Name not Available in the System !</label>

                    <button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Close</button>
                    <button type="submit" id="updatesb" class="btn btn-primary bg-primary-400 btn-sm">Update</button>
                </div>
            </form>
        </div>
    </div>
</div>
<!-- /basic initialization -->

<div id="updateTagModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form class="form-horizontal" method="post" action="@Url.Action("UpdateTagAction","Utilities")">
                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">Update Tag</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Tag</label>
                        <div class="col-lg-9">
                            <input type="text" maxlength="150" class="form-control" onkeyup="vlidateTag(document.getElementById('updateTag').id,document.getElementById('updateDivTag').id, document.getElementById('updateTagerrorDisplay').id, document.getElementById('updateSbTag').id)" name="Name" id="updateTag">
                            <input type="hidden" value="@Model.Id" name="divisionId" id="updateDivTag" />
                        </div>
                    </div>

                </div>
                <input type="hidden" name="Id" id="tagId" value="" />

                <div class="modal-footer">
                    <label id="updateTagerrorDisplay" class="control-label text-danger" hidden> Name not Available in the Division !</label>

                    <button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Close</button>
                    <button type="submit" id="updateSbTag" class="btn bg-primary-400 btn-sm">Update</button>
                </div>
            </form>
        </div>
    </div>
</div>


<div class="modal fade" id="addTagModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form class="form-horizontal" method="post" action="@Url.Action("AddTags", "Utilities")">

                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="exampleModalLabel">Add Tag</h4>
                </div>
                <div class="modal-body">

                    <div class="form-group">
                        <label class="col-lg-3 control-label">Add Tag</label>
                        <div class="col-lg-9">
                            <input required type="text" name="Name" maxlength="150" onkeyup="vlidateTag(document.getElementById('inputNameAddTag').id,document.getElementById('addTagDivision').id, document.getElementById('errorDisplayAddTag').id, document.getElementById('addTagsb').id)" id="inputNameAddTag" class="form-control" />
                            <input type="hidden" name="divisionId" value="@Model.Id" id="addTagDivision" />
                        </div>
                    </div>


                </div>
                <div class="modal-footer">
                    <label id="errorDisplayAddTag" class="control-label text-danger" hidden> Name not Available in the Division !</label>

                    <button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Close</button>
                    <button type="submit" id="addTagsb" class="btn bg-primary-400 btn-sm">Add Tag</button>
                </div>
            </form>
        </div>
    </div>
</div>


<div id="modalTaskDelete" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content login-form">

            <!-- Form -->
            <form class="modal-body " action="@Url.Action("deleteTaskAdmin","Task")" method="post">

                <div class="text-center">
                    <div class="icon-object border-slate-300 text-slate-300"><i class="icon-folder-upload"></i></div>
                    <h5 class="content-group">Are You Sure you want to Delete? <small class="display-block"></small></h5>
                </div>
                <input type="hidden" name="divisionId" value="@Model.Id" />
                <input type="hidden" name="taskId" value="-1" id="taskiid" />
                <center>
                    <button type="button" data-dismiss="modal" class="btn bg-primary btn-sm">No</button>
                    <button type="submit" id="sbbutton1" class="btn btn-danger btn-sm">Yes</button>


                </center>

            </form>
            <!-- /form -->

        </div>
    </div>
</div>


<div id="modalManagerDelete" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content login-form">

            <!-- Form -->
            <form class="modal-body " action="@Url.Action("deleteUser","Utilities")" method="post">

                <div class="text-center">
                    <div class="icon-object border-slate-300 text-slate-300"><i class="icon-folder-upload"></i></div>
                    <h5 class="content-group">Are You Sure you want to Delete? <small class="display-block"></small></h5>
                </div>

                <input type="hidden" name="id" value="-1" id="managerId1" />

                <input type="hidden" name="accessLevel" value="-1" id="managerAccess" />

                <input type="hidden" name="divisionId" value="@Model.Id" id="divisionIddd" />
                <center>
                    <button type="button" data-dismiss="modal" class="btn bg-primary btn-sm">No</button>
                    <button type="submit" id="sbbutton1" class="btn btn-danger btn-sm">Yes</button>


                </center>

            </form>
            <!-- /form -->

        </div>
    </div>
</div>


<div id="modalDeptDelete" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content login-form">

            <!-- Form -->
            <form class="modal-body " action="@Url.Action("deleteDepartment","Utilities")" method="post">

                <div class="text-center">
                    <div class="icon-object border-slate-300 text-slate-300"><i class="icon-folder-upload"></i></div>
                    <h5 class="content-group">Are You Sure you want to Delete? <small class="display-block"></small></h5>
                </div>

                <input type="hidden" name="id" value="-1" id="deptIdd" />

                <input type="hidden" name="divisionId" value="@Model.Id" id="divisionIddd" />
                <center>
                    <button type="button" data-dismiss="modal" class="btn bg-primary btn-sm">No</button>
                    <button type="submit" id="sbbutton1" class="btn btn-danger btn-sm">Yes</button>


                </center>

            </form>
            <!-- /form -->

        </div>
    </div>
</div>




<div id="AssignGroupTask" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form class="form-horizontal" action="@Url.Action("addTraineeGroupTask","Task")" method="post">
                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">Assign Group Task to multiple Employees</h4>
                </div>
                <div class="modal-body">

                    <div class="form-group">
                        <label class="col-lg-3 control-label">Group Task   <span class="text-danger">*</span></label>
                        <div class="col-lg-9">
                            <select class="select-results-color" required="required" name="GroupTaskId" id="selectGroupTask">
                                <option disabled selected value="">Select task</option>
                                <option value="">abc</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Primary   <span class="text-danger">*</span></label>
                        <div class="col-lg-9">
                            <select class="select-results-color" required="required" name="PrimaryLead" onchange="dropdwonprimary()" id="primary">
                                <option value="" selected disabled>Please Select Primary Lead</option>
                                @foreach (User item in Model.Users.Where(x => x.IsActive == 1).ToList())
                                {
                                    <option value="@item.Id">@item.FirstName @item.LastName</option>

                                }
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Secondary</label>
                        <div class="col-lg-9">
                            <select class="select-results-color" name="SecondaryLead" onchange="dropdwonsecondary()" id="secondary">
                                <option value="" selected disabled>Please Select Secondary Lead</option>
                                @foreach (User item in Model.Users.Where(x => x.IsActive == 1).ToList())
                                {
                                    <option value="@item.Id">@item.FirstName @item.LastName</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="form-group" style="margin-bottom:20px;">
                        <label class="col-lg-3 control-label">Start Date   <span class="text-danger">*</span></label>
                        <div class="col-lg-9">
                            <input type="date" class="form-control" name="StartDate" id="StartGroupDate" required>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-2 control-label">End Date   <span class="text-danger">*</span></label>
                        <div class="col-lg-4 col-lg-offset-1">
                            <input type="date" class="form-control" onchange="groupDatesValues()" name="EndDate" id="EndGroupDate" required>
                        </div>
                        <label class="col-lg-2 control-label">End Time</label>
                        <div class="col-lg-3">
                            <input id="timepicker1" type="time" name="time" class="form-control input-small" value="00:00">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Slack Channel Name</label>
                        <div class="col-lg-9">
                            <input type="text" class="form-control" maxlength="49" name="SlackChannel" id="slackChannel">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Priority</label>
                        <div class="col-lg-9">
                            <select class="select" name="Priority">

                                <option value="0" selected>Low</option>
                                <option value="1">Medium</option>
                                <option value="2">High</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Cost ($)</label>
                        <div class="col-lg-9">
                            <input type="number" maxlength="9" class="form-control" name="Cost" id="cost">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">CEU's</label>
                        <div class="col-lg-9">
                            <input type="number" maxlength="9" class="form-control" name="CEU" id="ceu">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Hours</label>
                        <div class="col-lg-9">
                            @*<input type="number" maxlength="9" class="form-control" name="hours" id="hours">*@
                            <select class="select-results-color" name="hours" id="hours" required>
                                <option value="">Select Hours</option>
                                <option value="0.5">0.5</option>
                                <option value="1">1</option>
                                <option value="1.5">1.5</option>
                                <option value="2">2</option>
                                <option value="2.5">2.5</option>
                                <option value="3">3</option>
                                <option value="3.5">3.5</option>
                                <option value="4">4</option>
                                <option value="4.5">4.5</option>
                                <option value="5">5</option>
                                <option value="5.5">5.5</option>
                                <option value="6">6</option>
                                <option value="6.5">6.5</option>
                                <option value="7">7</option>
                                <option value="7.5">7.5</option>
                                <option value="8">8</option>
                                <option value="8.5">8.5</option>
                                <option value="9">9</option>
                                <option value="9.5">9.5</option>
                                <option value="10">10</option>
                                <option value="10.5">10.5</option>
                                <option value="11">11</option>
                                <option value="11.5">11.5</option>
                                <option value="12">12</option>
                                <option value="12.5">12.5</option>
                                <option value="13">13</option>
                                <option value="13.5">13.5</option>
                                <option value="14">14</option>
                                <option value="14.5">14.5</option>
                                <option value="15">15</option>
                                <option value="15.5">15.5</option>
                                <option value="16">16</option>
                                <option value="16.5">16.5</option>
                                <option value="17">17</option>
                                <option value="17.5">17.5</option>
                                <option value="18">18</option>
                                <option value="18.5">18.5</option>
                                <option value="19">19</option>
                                <option value="19.5">19.5</option>
                                <option value="20">20</option>
                                <option value="20.5">20.5</option>
                                <option value="21">21</option>
                                <option value="21.5">21.5</option>
                                <option value="22">22</option>
                                <option value="22.5">22.5</option>
                                <option value="23">23</option>
                                <option value="23.5">23.5</option>
                                <option value="24">24</option>
                                <option value="24.5">24.5</option>
                                <option value="25">25</option>
                                <option value="25.5">25.5</option>
                                <option value="26">26</option>
                                <option value="26.5">26.5</option>
                                <option value="27">27</option>
                                <option value="27.5">27.5</option>
                                <option value="28">28</option>
                                <option value="28.5">28.5</option>
                                <option value="29">29</option>
                                <option value="29.5">29.5</option>
                                <option value="30">30</option>
                                <option value="30.5">30.5</option>
                                <option value="31">31</option>
                                <option value="31.5">31.5</option>
                                <option value="32">32</option>
                                <option value="32.5">32.5</option>
                                <option value="33">33</option>
                                <option value="33.5">33.5</option>
                                <option value="34">34</option>
                                <option value="34.5">34.5</option>
                                <option value="35">35</option>
                                <option value="35.5">35.5</option>
                                <option value="36">36</option>
                                <option value="36.5">36.5</option>
                                <option value="37">37</option>
                                <option value="37.5">37.5</option>
                                <option value="38">38</option>
                                <option value="38.5">38.5</option>
                                <option value="39">39</option>
                                <option value="39.5">39.5</option>
                                <option value="40">40</option>
                                <option value="40.5">40.5</option>
                                <option value="41">41</option>
                                <option value="41.5">41.5</option>
                                <option value="42">42</option>
                                <option value="42.5">42.5</option>
                                <option value="43">43</option>
                                <option value="43.5">43.5</option>
                                <option value="44">44</option>
                                <option value="44.5">44.5</option>
                                <option value="45">45</option>
                                <option value="45.5">45.5</option>
                                <option value="46">46</option>
                                <option value="46.5">46.5</option>
                                <option value="47">47</option>
                                <option value="47.5">47.5</option>
                                <option value="48">48</option>
                                <option value="48.5">48.5</option>
                                <option value="49">49</option>
                                <option value="49.5">49.5</option>
                                <option value="50">50</option>



                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Grade</label>
                        <div class="col-lg-9">
                            <input type="text" class="form-control" name="Grad" maxlength="150" id="Grade">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Notes</label>
                        <div class="col-lg-9">
                            <textarea class="form-control" maxlength="500" name="Notes" id="notes"></textarea>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-lg-12 control-label text-danger">Note : If values of Hours,CEU,Cost are not entered, it will be calculated from the Tasks in Group Task </label>
                    </div>
                    <div id="Groupdata"></div>

                </div>
                <input type="hidden" value="@Model.Id" name="divisionId" />
                <div class="modal-footer">

                    <button type="button" class="btn btn-sm btn-default" data-dismiss="modal">Close</button>
                    <button type="submit" id="sbGroupButton" class="btn btn-sm  btn-primary bg-primary-400">Assign</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="modalTagDelete" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content login-form">

            <!-- Form -->
            <form class="modal-body " action="@Url.Action("deleteTag","Utilities")" method="post">

                <div class="text-center">
                    <div class="icon-object border-slate-300 text-slate-300"><i class="icon-folder-upload"></i></div>
                    <h5 class="content-group">Are You Sure you want to Delete? <small class="display-block"></small></h5>
                </div>

                <input type="hidden" name="id" id="tagIdd" />
                <input type="hidden" name="divisionId" value="@Model.Id" />

                <center>
                    <button type="button" data-dismiss="modal" class="btn bg-primary btn-sm">No</button>
                    <button type="submit" class="btn btn-danger btn-sm">Yes</button>
                </center>

            </form>
            <!-- /form -->

        </div>
    </div>
</div>
<div id="addGroupTask" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form class="form-horizontal" action="@Url.Action("addGroupTask","Task")">
                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">Add Group Task</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Name</label>
                        <div class="col-lg-9">
                            <input type="text" id="addName" onkeyup="vlidateGroupTask('addName','@Model.Id','errorDisplayGroupTask','addgrouptaskbutton','add')" class="form-control" maxlength="49" name="Name" required>
                        </div>
                    </div>
                    <input type="hidden" name="divisionId" value="@Model.Id" />
                </div>
                <div class="modal-footer">
                    <label id="errorDisplayGroupTask" class="control-label text-danger" hidden> Group Task with same Name already exist in this division !   </label>

                    <button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Close</button>
                    <button type="submit" id="addgrouptaskbutton" class="btn btn-primary bg-primary-400 btn-sm">Add</button>

                </div>
            </form>

        </div>
    </div>
</div>


<div id="updateGroupTask" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form class="form-horizontal" action="@Url.Action("updategroupTaskObject","Task")">
                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">Update Group Task</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label class="col-lg-3 control-label">Name</label>
                        <div class="col-lg-9">
                            <input type="text" required class="form-control" maxlength="49" onkeyup="vlidateGroupTask('updatename','@Model.Id','errorDisplayUpdateGroupTask','updateSubmitButton')" name="Name" id="updatename">

                        </div>
                    </div>
                    <input type="hidden" name="divisionId" value="@Model.Id" />
                    <input type="text" name="Id" id="I_d" hidden>

                </div>
                <div class="modal-footer">
                    <label id="errorDisplayUpdateGroupTask" class="control-label text-danger" hidden> Group Task with same Name already exist in this division !  </label>

                    <button type="button" class="btn btn-sm  btn-default" data-dismiss="modal">Close</button>
                    <button type="submit" id="updateSubmitButton" class="btn btn-sm  btn-primary bg-primary">Update</button>
                </div>
            </form>
        </div>
    </div>
</div>
<div id="modalGtDelete" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content login-form">

            <!-- Form -->
            <form class="form-horizontal" action="@Url.Action("deleteGroupTaskId","Task")">

                <div class="text-center">
                    <div class="icon-object border-slate-300 text-slate-300"><i class="icon-folder-upload"></i></div>
                    <h5 class="content-group">Are You Sure you want to Delete? <small class="display-block"></small></h5>
                </div>

                <input type="hidden" name="gt" id="gtIdd" />
                <input type="hidden" name="divisionId" value="@Model.Id" />

                <center>
                    <button type="button" data-dismiss="modal" class="btn bg-primary btn-sm">No</button>
                    <button type="submit" class="btn btn-danger btn-sm">Yes</button>
                </center>

            </form>
            <!-- /form -->
            <br />
        </div>
    </div>
</div>


<!-- Footer -->




<script type="text/javascript">

    function frequencyCheck() {
        var x1 = $("#radiotype1");
        var x2 = $("#radiotype2");
        var x3 = $("#radiotype3");
        var x4 = $("#radiotype4");
        var x5 = $("#radiotype5");
        var x6 = $("#radiotype6");
        var x11 = $("#radiotype-1");
        if ($("#radiotype1").prop("checked") == true || x2.prop("checked") == true || x3.prop("checked") == true || x4.prop("checked") == true || x5.prop("checked") == true || x6.prop("checked") == true) {

            if (x6.prop("checked") == true) {
                var fdays = $('#freqDays1').val();
                if (fdays == "") {
                    $("#spanmsg").text("Please Set Frequency");

                    return false;
                }

            }

            var c = $("#FeqEndingDate").val();
            if (c == "") {
                $("#EndDateTask1").attr("required", false);
                $("#FeqEndingDate").attr("required", true);
                $("#spanmsg").text("Frequency ending date is required");
                return false
            } else {
                $("#EndDateTask1").attr("required", false);
                $("#FeqEndingDate").attr("required", false);
                $("#spanmsg").text("");
                return true
            }




        } else {
            if ($("#EndDateTask1").val() == "") {
                $("#EndDateTask1").attr("required", true);
                $("#spanmsg").text("Task Endate is Required")
                return false;
            }
            $("#FeqEndingDate").attr("required", false);
            $("#spanmsg").text("");
            //      $(".radiotype").val(null);

            return true
        }

    }

    function frequencyCheckEmployee() {
        var x1 = $("#Eradiotype1");
        var x2 = $("#Eradiotype2");
        var x3 = $("#Eradiotype3");
        var x4 = $("#Eradiotype4");
        var x5 = $("#Eradiotype5");
        var x6 = $("#Eradiotype6");
        var x11 = $("#Eradiotype-1");
        if ($("#Eradiotype1").prop("checked") == true || x2.prop("checked") == true || x3.prop("checked") == true || x4.prop("checked") == true || x5.prop("checked") == true || x6.prop("checked") == true) {

            if (x6.prop("checked") == true) {
                var fdays = $('#freqDays2').val();
                if (fdays == "") {
                    $("#Espanmsg").text("Please Set Frequency");

                    return false;
                }

            }

            var c = $("#EFeqEndingDate").val();
            if (c == "") {
                $("#EndDateTask2").attr("required", false);

                $("#EFeqEndingDate").attr("required", true);
                $("#Espanmsg").text("Frequency ending date is required");
                return false
            } else {
                $("#EndDateTask2").attr("required", false);

                $("#EFeqEndingDate").attr("required", false);
                $("#Espanmsg").text("");
                return true
            }

            //   $(".radiotype").val(null);


        } else {
            if ($("#EndDateTask2").val() == "") {
                $("#EndDateTask2").attr("required", true);
                $("#Espanmsg").text("Task Endate is Required")
                return false;
            }
            $("#EFeqEndingDate").attr("required", false);
            $("#Espanmsg").text("");
            //      $(".radiotype").val(null);

            return true
        }

    }

    function frequencyCheckManager() {
        var x1 = $("#Mradiotype1");
        var x2 = $("#Mradiotype2");
        var x3 = $("#Mradiotype3");
        var x4 = $("#Mradiotype4");
        var x5 = $("#Mradiotype5");
        var x6 = $("#Mradiotype6");
        var x11 = $("#Mradiotype-1");
        if ($("#Mradiotype1").prop("checked") == true || x2.prop("checked") == true || x3.prop("checked") == true || x4.prop("checked") == true || x5.prop("checked") == true || x6.prop("checked") == true) {

            if (x6.prop("checked") == true) {
                var fdays = $('#freqDays3').val();
                if (fdays == "") {
                    $("#Mspanmsg").text("Please Set Frequency");

                    return false;
                }

            }

            var c = $("#MFeqEndingDate").val();
            if (c == "") {
                $("#EndDateTask3").attr("required", false);

                $("#MFeqEndingDate").attr("required", true);
                $("#Mspanmsg").text("Frequency ending date is required");
                return false
            } else {
                $("#EndDateTask3").attr("required", false);

                $("#MFeqEndingDate").attr("required", false);
                $("#Mspanmsg").text("");
                return true
            }

            //   $(".radiotype").val(null);


        } else {
            if ($("#EndDateTask3").val() == "") {
                $("#EndDateTask3").attr("required", true);
                $("#Mspanmsg").text("Task Endate is Required")
                return false;
            }
            $("#MFeqEndingDate").attr("required", false);
            $("#Mspanmsg").text("");
            //      $(".radiotype").val(null);

            return true
        }

    }

    $('#DivisionCourse').hide();
    $('#DepartmentCourse').hide();
    $('#ManagerCourse').hide();


    $('#timepicker1').timepicker();

    function setDepartmentValues(deptid) {
        var departmentId = deptid;

        $.ajax({
            type: 'POST',
            url: "../task/getTaskDTOs",
            data: { departmentId: departmentId },
            dataType: "json",
            success: function (data) {
                // get role of the user then if you are an admin then assign tasks to manager and employee
                // if you are manager then assign to employee
                // if you can self assign



                //if (data.empty) {
                //      $('#selectAdminTask').empty();
                //        $('#selectAdminTask').append('<option value="" selected disabled> Please Choose a Task</option>');
                //        $('#selectAdminTask').append('<option value="0"> Create New Task</option>');

                //}

                //if (role == null) {
                //    $('#selectAdminTask').empty();
                //        $('#selectAdminTask').append('<option value="" selected disabled> Please Choose a Task</option>');
                //        $('#selectAdminTask').append('<option value="0"> Create New Task</option>');

                //}
                //var role = data[0].SessionRole;



                $("#selectDeptTask").html("");
                var count = 0;
                $('#selectDeptTask').empty();
                $('#selectDeptTask').append('<option value="" selected disabled> Please Choose a Task</option>');

                for (var i = 0; i < data.length; i++) {
                    var division = '<option value="' + data[i]['Id'] + '">' + data[i]['Name'] + '</option>';
                    $('#selectDeptTask').append(division);
                }




            },
            error: function () { alert('fail'); }
        });
    }
</script>

<script type="text/javascript">

     function displayAssignEmpTask() {
        //$('#traineeId').val(managerId);
        $('#AssignEmpTask').modal("show");
    }

    function displayAssignTaskToDept(deptId) {

        setDepartmentValues(deptId);
        $('#departmentID').val(deptId);
        $('#AssignTaskToDept').modal("show");
    }

    var scope = 0;
    var scope2 = 4;
    var scope1 = 0;
    var scope3 = 4;
    function deleteTask(taskId) {
        $('#taskiid').val(taskId);
        $('#modalTaskDelete').modal("show");
    }
    function deleteTag(tagId) {
        $('#tagIdd').val(tagId);
        $('#modalTagDelete').modal("show");
    }
    function showAddGroupTask() {

        $('#addGroupTask').modal("show");
    }
    function deleteDept(deptId) {
        $('#deptIdd').val(deptId);
        $('#modalDeptDelete').modal("show");
    }
    function deleteGroupTask(taskId) {
        $('#gtIdd').val(taskId);
        $('#modalGtDelete').modal("show");
    }
    function showEditGroupTask(data, taskId) {
        $('#updatename').val(data);
        $('#I_d').val(taskId);
        $('#updateGroupTask').modal("show");
    }


    function vlidateDepartment(name, divId, error, button, way = "") {
       var deptID =  $("#depId").val();

        var sele = $('#' + divId).val();
        var name = $('#' + name).val();

        $.ajax({

               type: 'POST',
               url: '@Url.Action("departmentNameValidation", "Utilities")',
               timeout: 100000000,
               data: { _data: name, divId:sele,deptID:deptID,way:way },
               dataType: "json",
               success: function (json) {

                   if (json != 1) {
                       $('#' + error).hide();
                       $('#' + button).attr('disabled', false)
                       }
               else
                   {
                       $('#' + error).show();
                       $('#' + button).attr('disabled', true)

               }

               },
               error: function (data) {

                   $('.loading3').hide();
                   $('#curvechart_error').show();
                   $('#curve_chart').hide();
               }
           });
   }

 function setSelectedIndexDiv(valsearch,name,vaid) {
        //var s = $('#updateDivisionID');
        $("select#updateDivisionID option")
            .each(function () {
                //this.selected = (this.value == valsearch);
                $("#updateDivisionID option[value=" + valsearch + "]").attr("selected", true).change();
            });
        //$("#updateDivisionID").
        $("#updateDepartment").val(name);
        $("#depId").val(vaid);
        $('#editDepart').modal("show");



    }
 function vlidateTag(name,divId,error,button) {

        var sele = $('#' + divId).val();
        var name = $('#' + name).val();

        $.ajax({

               type: 'POST',
               url: '@Url.Action("tagNameValidation", "Utilities")',
               timeout: 100000000,
               data: { _data: name, divId:sele },
               dataType: "json",
               success: function (json) {

                   if (json != 1) {
                       $('#' + error).hide();
                       $('#' + button).attr('disabled', false)
                       }
               else
                   {
                       $('#' + error).show();
                       $('#' + button).attr('disabled', true)

               }

               },
               error: function (data) {

                   $('.loading3').hide();
                   $('#curvechart_error').show();
                   $('#curve_chart').hide();
               }
           });
    }

    function vlidateGroupTask(name,divId,error,button,way="") {
        var grptaskID= $('#I_d').val();
        var sele = divId;
        var name = $('#' + name).val();

        $.ajax({

               type: 'POST',
               url: '@Url.Action("groupTaskNameValidation", "Utilities")',
               timeout: 100000000,
               data: { _data: name, divId:sele,grptaskID:grptaskID,way:way },
               dataType: "json",
               success: function (json) {

                   if (json == 0) {
                       $('#' + error).hide();
                       $('#' + button).attr('disabled', false)
                       }
               else
                   {
                       $('#' + error).show();
                       $('#' + button).attr('disabled', true)

               }

               },
               error: function (data) {

                   $('.loading3').hide();
                   $('#curvechart_error').show();
                   $('#curve_chart').hide();
               }
           });
   }






    function setSelectedIndexTag(valsearch, name, vaid) {


        $("#updateTag").val(name);
        $("#tagId").val(vaid);
        $('#updateTagModal').modal("show");
    }

    function displayAssignManagerTask(managerId) {
        $('#managerId').val(managerId);
        $('#AssignTask').modal("show");
    }
  function setValues() {
        var v = $('#selectTask').val();


        $.ajax({

               type: 'GET',
               url: '@Url.Action("getDetails","Task")',
               timeout: 100000000,
               data: {_id:v },
               dataType: "json",
               success: function (data) {


                   $('#cost1').empty();
                   $('#cost1').val(data.Cost_);
                   $('#ceu1').empty();
                   $('#ceu1').val(data.CEU);
                  // $('#hours1').empty();
                   $('#hours1').val(data.Hours).change();
                   $('#notes1').empty();
                   $('#notes1').val(data.Description);
                    if (data.CourseId) {
                      // $("#ManagerCourse").show();
                       //$("#ManagerCanvasCourseId").val(data.CourseId).change();

                   } else {
                        //$("#ManagerCanvasCourseId").val("").change();
                         //$("#ManagerCourse").hide();
                   }
                   var count = 1;






                   if (count == 0) {

                       scope = -1;

                       $('#errorDisplay').text("No Employee Selected")
                       $('#errorDisplay').show();
                       $('#sbButton1').attr('disabled', true);
                       document.getElementById("EndDate").value = "";
                   }
                   else {
                       $('#data1').empty();
                       $('#data1').append(data);
                       scope = 1;
                       if (scope2 == 0) {

                           $('#errorDisplay1').text("End date should be greater than Start date")
                           $('#errorDisplay1').show();
                           $('#sbButton').attr('disabled', true);
                           document.getElementById("EndDate").value = "";

                       }
                       else {
                           $('#errorDisplay1').hide();
                           $('#sbButton1').attr('disabled', false);
                       }

                   }
               },
               error: function (data) {

                   $('.loading3').hide();
                   $('#curvechart_error').show();
                   $('#curve_chart').hide();
               }
           });
    }

     function setwholedivisionValues() {
        var v = $('#selectDivTask').val();


        $.ajax({

               type: 'GET',
               url: '@Url.Action("getDetails","Task")',
               timeout: 100000000,
               data: {_id:v },
               dataType: "json",
               success: function (data) {


                   $('#cost2').empty();
                   $('#cost2').val(data.Cost_);
                   $('#ceu2').empty();
                   $('#ceu2').val(data.CEU);
                  // $('#hours2').empty();
                   $('#hours2').val(data.Hours).change();
                   $('#notes2').empty();
                   $('#notes2').val(data.Description);

                   if (data.CourseId) {
                       //$("#DivisionCourse").show();
                       //$("#DivisionCanvasCourseId").val(data.CourseId).change();

                   } else {
                        //$("#DivisionCanvasCourseId").val("").change();
                         //$("#DivisionCourse").hide();
                   }


                   var count = 1;






                   if (count == 0) {

                       scope = -1;

                       $('#errorDisplay2').text("No Employee Selected")
                       $('#errorDisplay2').show();
                       $('#sbButton2').attr('disabled', true);
                       document.getElementById("EndDate").value = "";
                   }
                   else {
                       $('#data2').empty();
                       $('#data2').append(data);
                       scope = 1;
                       if (scope2 == 0) {

                           $('#errorDisplay2').text("End date should be greater than Start date")
                           $('#errorDisplay2').show();
                           $('#sbButton2').attr('disabled', true);
                           document.getElementById("EndDate").value = "";

                       }
                       else {
                           $('#errorDisplay2').hide();
                           $('#sbButton2').attr('disabled', false);
                       }

                   }
               },
               error: function (data) {

                   $('.loading3').hide();
                   $('#curvechart_error').show();
                   $('#curve_chart').hide();
               }
           });
    }


    function setwholedepatmentValues() {
        var v = $('#selectDeptTask').val();


        $.ajax({

               type: 'GET',
               url: '@Url.Action("getDetails","Task")',
               timeout: 100000000,
               data: {_id:v },
               dataType: "json",
               success: function (data) {


                   $('#cost3').empty();
                   $('#cost3').val(data.Cost_);
                   $('#ceu3').empty();
                   $('#ceu3').val(data.CEU);
                   //$('#hours3').empty();
                   $('#hours3').val(data.Hours).change();
                   $('#notes3').empty();
                   $('#notes3').val(data.Description);
                   if (data.CourseId) {
                   //    $("#DepartmentCourse").show();
                     //  $("#DepartmentCanvasCourseId").val(data.CourseId).change();

                   } else {
                       // $("#DepartmentCanvasCourseId").val("").change();
                         //$("#DepartmentCourse").hide();
                   }
                   var count = 1;






                   if (count == 0) {

                       scope = -1;

                       $('#errorDisplay3').text("No Employee Selected")
                       $('#errorDisplay3').show();
                       $('#sbButton3').attr('disabled', true);
                       document.getElementById("EndDate").value = "";
                   }
                   else {
                       $('#data3').empty();
                       $('#data3').append(data);
                       scope = 1;
                       if (scope2 == 0) {

                           $('#errorDisplay3').text("End date should be greater than Start date")
                           $('#errorDisplay3').show();
                           $('#sbButton3').attr('disabled', true);
                           document.getElementById("EndDate").value = "";

                       }
                       else {
                           $('#errorDisplay3').hide();
                           $('#sbButton3').attr('disabled', false);
                       }

                   }
               },
               error: function (data) {

                   $('.loading3').hide();
                   $('#curvechart_error').show();
                   $('#curve_chart').hide();
               }
           });
    }


    function deleteManager(id, accessLevel) {
        $('#managerId1').val(id);
        $('#managerAccess').val(accessLevel);
        $('#modalManagerDelete').modal("show");
    }
    function checkDates1() {
        var startDate = document.getElementById("StartDateTask1").value;
        var endDate = document.getElementById("EndDateTask1").value;

        if ((Date.parse(startDate) > Date.parse(endDate))) {

            scope2 = 0;


            $('#errorDisplayTask1').text("End date should be greater than Start date")
            $('#errorDisplayTask1').show();
            $('#sbButtonTask1').attr('disabled', true);
            document.getElementById("EndDateTask1").value = "";



        }
        else {

            $('#errorDisplayTask1').hide();
            $('#sbButtonTask1').attr('disabled', false);




        }
    }

    function checkDates2() {
        var startDate = document.getElementById("StartDateTask2").value;
        var endDate = document.getElementById("EndDateTask2").value;

        if ((Date.parse(startDate) > Date.parse(endDate))) {

            scope2 = 0;


            $('#errorDisplayTask2').text("End date should be greater than Start date")
            $('#errorDisplayTask2').show();
            $('#sbButtonTask2').attr('disabled', true);
            document.getElementById("EndDateTask2").value = "";



        }
        else {

            $('#errorDisplayTask2').hide();
            $('#sbButtonTask2').attr('disabled', false);




        }
    }

    function checkDates3() {
        var startDate = document.getElementById("StartDateTask3").value;
        var endDate = document.getElementById("EndDateTask3").value;

        if ((Date.parse(startDate) > Date.parse(endDate))) {

            scope2 = 0;


            $('#errorDisplayTask3').text("End date should be greater than Start date")
            $('#errorDisplayTask3').show();
            $('#sbButtonTask3').attr('disabled', true);
            document.getElementById("EndDateTask").value = "";



        }
        else {

            $('#errorDisplayTask3').hide();
            $('#sbButtonTask3').attr('disabled', false);




        }
    }

    //Manger Task Assingment
    function CheckManagerTaskSCORMCourse() {
        var val = $("#managerCourseId").val();


        var val2 = $("#" + val + "").val();
        if (val == val2) {
            $("#managerGrade").val("");
            $("#managerGrade").attr("required", false);
            // $("#GradeSpan").text("");
            $("#ManagerTaskGradeDiv").hide();



        } else {
            $("#ManagerTaskGradeDiv").show();
            //$("#grpGrade").attr("required", true);
            //   $("#GradeSpan").text("*");

        }
    }
    function checkValues1() {
        frequencyCheck();

        var managerCId = $('#managerCourseId').val();
        var managerGrade = $('#managerGrade').val();
        if (managerCId != "" && managerGrade == "" && $('#ManagerTaskGradeDiv').css('display') != 'none') {
            $("#errorDisplayTask1").text("Grade is required. ");
            $('#errorDisplayTask1').show();

            $("#managerGrade").prop('required', true);

            return false;
        }
        else {
            $("#managerGrade").prop('required', false);
        }

        $("endDate1").prop('required', true);
        var isRepeat = false;
        $("#assignTask1 input[type=radio]:checked").each(function () {
            if (this.checked == true) {
                isRepeat = true;
                $("endDate1").prop('required', true);
                return false;
            }
        });

        if (isRepeat == false) {
            if (!Date.parse($('#EndDateTask1').val())) {
                $('#errorDisplayTask1').text("Select End Date or Repeat Frequency !")
                $('#errorDisplayTask1').show();
                $('#sbButtonTask1').prop("type", "button");
            }
            else {

                $('#sbButtonTask1').prop("type", "submit");
                $("#AssignTask").submit();
            }
        }

        else {
            $('#sbButtonTask1').prop("type", "submit");
            $("#AssignTask").submit();
        }

    }
    //Ends
    // Task Assignment to whole division
    function CheckDivisionSCORMCourse() {
        var val = $("#divCourseId").val();


        var val2 = $("#" + val + "").val();
        if (val == val2) {
            $("#divGrade").val("");
            $("#divGrade").attr("required", false);
            // $("#GradeSpan").text("");
            $("#DivisionTaskGradeDiv").hide();



        } else {
            $("#DivisionTaskGradeDiv").show();
            //$("#grpGrade").attr("required", true);
            //   $("#GradeSpan").text("*");

        }
    }
    function checkValues2() {
        frequencyCheckEmployee();


        var divCId = $('#divCourseId').val();
        var divGrade = $('#divGrade').val();
        if (divCId != "" && divGrade == "" && $('#DivisionTaskGradeDiv').css('display') != 'none') {
            $("#errorDisplayTask2").text("Grade is required. ");
            $('#errorDisplayTask2').show();

            return false
        }

        $("endDate2").prop('required', true);
        var isRepeat = false;
        $("#assignTask2 input[type=radio]:checked").each(function () {
            if (this.checked == true) {
                isRepeat = true;
                $("endDate2").prop('required', true);
                return false;
            }
        });

        if (isRepeat == false) {
            if (!Date.parse($('#EndDateTask2').val())) {
                $('#errorDisplayTask2').text("Select End Date or Repeat Frequency !")
                $('#errorDisplayTask2').show();
                $('#sbButtonTask2').prop("type", "button");
            }
            else {

                $('#sbButtonTask2').prop("type", "submit");
                $("#AssignEmpTask").submit();
            }
        }

        else {
            $('#sbButtonTask2').prop("type", "submit");
            $("#AssignEmpTask").submit();
        }

    }
    //Ends
    //Task Assignment to whole Department
    function CheckDepartmentSCORMCourse() {
        var val = $("#depCourseId").val();


        var val2 = $("#" + val + "").val();
        if (val == val2) {
            $("#depGrade").val("");
            $("#depGrade").attr("required", false);
            // $("#GradeSpan").text("");
            $("#DepartmentTaskGradeDiv").hide();



        } else {
            $("#DepartmentTaskGradeDiv").show();
            //$("#grpGrade").attr("required", true);
            //   $("#GradeSpan").text("*");

        }
    }
    function checkValues3() {
        frequencyCheckManager();

        var depCId = $('#depCourseId').val();
        var depGrade = $('#depGrade').val();
        if (depCId != "" && depGrade == "" && $('#DepartmentTaskGradeDiv').css('display') != 'none') {
            $("#errorDisplayTask3").text("Grade is required. ");
            $('#errorDisplayTask3').show();

            return false
        }

    $("endDate3").prop('required', true);
    var isRepeat = false;
    $("#assignTask3 input[type=radio]:checked").each(function () {
        if (this.checked == true) {
            isRepeat = true;
            $("endDate3").prop('required', true);
            return false;
        }
    });

    if (isRepeat == false) {
        if (!Date.parse($('#EndDateTask3').val())) {
            $('#errorDisplayTask3').text("Select End Date or Repeat Frequency !")
            $('#errorDisplayTask3').show();
            $('#sbButtonTask3').prop("type", "button");
        }
        else {

            $('#sbButtonTask3').prop("type", "submit");
            $("#AssignTaskToDept").submit();
        }
    }

    else {
        $('#sbButtonTask3').prop("type", "submit");
        $("#AssignTaskToDept").submit();
    }

}
    //Ends

    function dropdwonprimary() {
        var x = $('#primary').val();
        //$('select[name*="SecondaryLead"] option[value=' + x + ']').attr('disabled', true);
        $('select[name *= "SecondaryLead"] option[value = ' + x + ']').attr('disabled', 'disabled')
            .siblings().removeAttr('disabled');
    }
    function dropdwonsecondary() {
        var x = $('#secondary').val();
        $('select[name *= "PrimaryLead"] option[value = ' + x + ']').attr('disabled', 'disabled')
            .siblings().removeAttr('disabled');
    }
    function groupDatesValues() {
        var startDate = document.getElementById("StartGroupDate").value;
        var endDate = document.getElementById("EndGroupDate").value;

        if ((Date.parse(startDate) > Date.parse(endDate))) {

            scope2 = 0;


            $('#errorGroupDisplay').text("End date should be greater than Start date")
            $('#errorGroupDisplay').show();
            $('#sbGroupButton').attr('disabled', true);
            document.getElementById("EndGroupDate").value = "";



        }

            else {
                $('#errorGroupDisplay').hide();
                $('#sbGroupButton').attr('disabled', false);
            }




    }


    function groupTaskValues(divid) {

        $.ajax({

               type: 'POST',
               url: '@Url.Action("getGroupDivisionTasksDetails", "Task")',
               timeout: 100000000,
            data: { divisionId:divid },
               dataType: "json",
               success: function (data) {
                   var i = 0;

                   var count = 0;
                   $('#selectGroupTask').empty();
                   $('#selectGroupTask').append(  '<option value="" selected disabled> Please Choose a Group Task</option>');
                   for (; i < data.length; i++) {
                       var taskItem = '<option value="' + data[i]['Id'] + '">' + data[i]['Name'] + '</option>';
                       $('#selectGroupTask').append(taskItem);

                   }

                   var inputElements = document.getElementsByClassName('messageCheckbox');
                   $('#Groupdata').empty();
                   var selectDatat = '';



                       if (scope3 == 0) {

                           $('#errorGroupDisplay').text("End date should be greater than Start date")
                           $('#errorGroupDisplay').show();
                           $('#sbGroupButton').attr('disabled', true);
                           document.getElementById("EndGroupDate").value = "";

                       }
                       else {
                           $('#errorGroupDisplay').hide();
                           $('#sbGroupButton').attr('disabled', false);
                       }



                   $('#AssignGroupTask').modal("show");

               },
               error: function (data) {

                   $('.loading3').hide();
                   $('#curvechart_error').show();
                   $('#curve_chart').hide();
               }
           });
    }


    function displayGroupTask(primaryId, divid) {

        $.ajax({

            type: 'POST',
            url: '@Url.Action("getGroupDivisionTasksDetails", "Task")',
            timeout: 100000000,
            data: { divisionId: divid },
            dataType: "json",
            success: function (data) {
                var i = 0;

                var count = 0;
                $('#selectGroupTask').empty();
                $('#selectGroupTask').append('<option value="" selected disabled> Please Choose a Group Task</option>');
                for (; i < data.length; i++) {
                    var taskItem = '<option value="' + data[i]['Id'] + '">' + data[i]['Name'] + '</option>';
                    $('#selectGroupTask').append(taskItem);

                }

                $('#Groupdata').empty();
                var selectDatat = '';



                if (scope3 == 0) {

                    $('#errorGroupDisplay').text("End date should be greater than Start date")
                    $('#errorGroupDisplay').show();
                    $('#sbGroupButton').attr('disabled', true);
                    document.getElementById("EndGroupDate").value = "";

                }
                else {
                    $('#errorGroupDisplay').hide();
                    $('#sbGroupButton').attr('disabled', false);
                }





                var ob = document.getElementById('primary');
                for (var i = 0; i < ob.options.length; i++) {
                    if (ob.options[i].value === primaryId) {
                        ob.selectedIndex = i;
                        break;
                    }
                }
                dropdwonprimary();
                $('#AssignGroupTask').modal("show");
            },
            error: function (data) {

                $('.loading3').hide();
                $('#curvechart_error').show();
                $('#curve_chart').hide();
            }
        });
        }
    @*function setValues() {
        var v = $('#selectTask').val();


        $.ajax({

               type: 'GET',
               url: '@Url.Action("getDetails","Task")',
               timeout: 100000000,
               data: {_id:v },
               dataType: "json",
               success: function (data) {


                   $('#cost').empty();
                   $('#cost').val(data.Cost_);
                   $('#ceu').empty();
                   $('#ceu').val(data.CEU);
                   $('#hours').empty();
                   $('#hours').val(data.Hours).change();
                   $('#notes').empty();
                   $('#notes').val(data.Description);
                   var count = 1;






                   if (count == 0) {

                       scope = -1;

                       $('#errorDisplay').text("No Employee Selected")
                       $('#errorDisplay').show();
                       $('#sbButton').attr('disabled', true);
                       document.getElementById("EndDate").value = "";
                   }
                   else {
                       $('#data').empty();
                       $('#data').append(data);
                       scope = 1;
                       if (scope2 == 0) {

                           $('#errorDisplay').text("End date should be greater than Start date")
                           $('#errorDisplay').show();
                           $('#sbButton').attr('disabled', true);
                           document.getElementById("EndDate").value = "";

                       }
                       else {
                           $('#errorDisplay').hide();
                           $('#sbButton').attr('disabled', false);
                       }

                   }
               },
               error: function (data) {

                   $('.loading3').hide();
                   $('#curvechart_error').show();
                   $('#curve_chart').hide();
               }
           });
    }*@

</script>

<script>

    //work done by Waqas, for Turn Over User Tasks
    function openTurnOverModal(fromId)
    {
        $('#fromId').val(fromId);
        $('#turnOverUserDiv').hide();

        $('#UserTurnOverModal').modal('show');
    }

    function getUserList(type)
    {
        $('#turnOverUserDiv').hide();

        var id = $('#fromId').val();

        $('#turnOverUserSpiner').show();

        $.ajax({
            dataType: "json",
            type: "POST",
            url: '@Url.Action("GetUserListToChangeOver", "Utilities")',
            data: { Id: id, UserType: type, Way : 2 },
            success: function (response)
            {
                if (type == 1)
                {
                    $('#turnOverUserLabel').text("Select Admin");

                    $('#turnOverUserOption').find('option').remove().end();

                    $("#turnOverUserOption").append('<option value="" disabled selected>Please Select Admin To Transfer Tasks</option>');
                }
                else
                {
                    $('#turnOverUserLabel').text("Select Manager");

                    $('#turnOverUserOption').find('option').remove().end();

                    $("#turnOverUserOption").append('<option value="" disabled selected>Please Select Manager To Transfer Tasks</option>');
                }



                var i = 0;
                $.each(response, function ()
                {
                    $("#turnOverUserOption").append('<option value=' + response[i].Id + '>' + response[i].Name + '</option>');

                    i++;
                });

                $('#turnOverUserSpiner').hide();

                $('#turnOverUserDiv').show();
            },
            error: function (response)
            {
                alert('Ajax Fail');
            }

        });
    }
</script>

<script>
    //Work Done by Waqas, to handle reminders dynamically on the basis of frequency selection
    function setDivReminderOption(freq) {
        if (freq == 1 || freq == -1 || freq == 6) {
            $('#divDailyReminder').empty().append('<option value="">Select Type</option> <option value="1">Daily</option>')
        }

        if (freq == 2) {
            $('#divDailyReminder').empty().append('<option value="">Select Type</option> <option value="1">Daily</option> <option value="2">Weekly</option>')
        }

        if (freq == 3 || freq == 4 || freq == 5) {
            $('#divDailyReminder').empty().append('<option value="">Select Type</option> <option value="1">Daily</option> <option value="2">Weekly</option> <option value="3">Monthly</option>')
        }
    }

    function setDepReminderOption(freq) {
        if (freq == 1 || freq == -1 || freq == 6) {
            $('#depDailyReminder').empty().append('<option value="">Select Type</option> <option value="1">Daily</option>')
        }

        if (freq == 2) {
            $('#depDailyReminder').empty().append('<option value="">Select Type</option> <option value="1">Daily</option> <option value="2">Weekly</option>')
        }

        if (freq == 3 || freq == 4 || freq == 5) {
            $('#depDailyReminder').empty().append('<option value="">Select Type</option> <option value="1">Daily</option> <option value="2">Weekly</option> <option value="3">Monthly</option>')
        }
    }

    function setManagerReminderOption(freq) {
        if (freq == 1 || freq == -1 || freq == 6) {
            $('#managerDailyReminder').empty().append('<option value="">Select Type</option> <option value="1">Daily</option>')
        }

        if (freq == 2) {
            $('#managerDailyReminder').empty().append('<option value="">Select Type</option> <option value="1">Daily</option> <option value="2">Weekly</option>')
        }

        if (freq == 3 || freq == 4 || freq == 5) {
            $('#managerDailyReminder').empty().append('<option value="">Select Type</option> <option value="1">Daily</option> <option value="2">Weekly</option> <option value="3">Monthly</option>')
        }
    }




    function setCustomDivReminderOption(day) {
        if (day > 0 && day < 7) {
            $('#divDailyReminder').empty().append('<option value="">Select Type</option> <option value="1">Daily</option>');
        }
        else if (day > 6 && day < 31) {
            $('#divDailyReminder').empty().append('<option value="">Select Type</option> <option value="1">Daily</option> <option value="2">Weekly</option>');
        }
        else if (day > 30) {
            $('#divDailyReminder').empty().append('<option value="">Select Type</option> <option value="1">Daily</option> <option value="2">Weekly</option> <option value="3">Monthly</option>');
        }
    }

    function setCustomDepReminderOption(day) {
        if (day > 0 && day < 7) {
            $('#depDailyReminder').empty().append('<option value="">Select Type</option> <option value="1">Daily</option>');
        }
        else if (day > 6 && day < 31) {
            $('#depDailyReminder').empty().append('<option value="">Select Type</option> <option value="1">Daily</option> <option value="2">Weekly</option>');
        }
        else if (day > 30) {
            $('#depDailyReminder').empty().append('<option value="">Select Type</option> <option value="1">Daily</option> <option value="2">Weekly</option> <option value="3">Monthly</option>');
        }
    }

    function setCustomManagerReminderOption(day) {
        if (day > 0 && day < 7) {
            $('#managerDailyReminder').empty().append('<option value="">Select Type</option> <option value="1">Daily</option>');
        }
        else if (day > 6 && day < 31) {
            $('#managerDailyReminder').empty().append('<option value="">Select Type</option> <option value="1">Daily</option> <option value="2">Weekly</option>');
        }
        else if (day > 30) {
            $('#managerDailyReminder').empty().append('<option value="">Select Type</option> <option value="1">Daily</option> <option value="2">Weekly</option> <option value="3">Monthly</option>');
        }
    }

    
</script>