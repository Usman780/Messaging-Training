
@{
    ViewBag.Title = "ManagerForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model TrainingTracker.Models.User
@using TrainingTracker.HelpingClasses
@using TrainingTracker.Models
@using TrainingTracker.BL

@{

    CheckAuthenticationDTO logedinuser = General_Purpose.CheckAuthentication();
    User user = new UserBL().getUsersById(logedinuser.Id);
    Company company1 = new CompanyBL().getCompanyById(Convert.ToInt32(logedinuser.Company));

}
<link href="~/Content/assets/css/mycss.css" rel="stylesheet" />
<!-- Content area -->


<style>
    .dataTables_filter {
        display: none;
    }
</style>

<div class="bg-white">
    <div class="breadcrumb-line">
        <a class="breadcrumb-elements-toggle"><i class="icon-menu-open"></i></a>
        <ul class="breadcrumb">
            <li><a href="@Url.Action("Index","Auth")"><i class="icon-home2 position-left"></i> Home</a></li>
            <li class="active">Update Profile</li>
            <li class="active">@Model.FirstName @Model.LastName</li>

        </ul>
    </div>
</div>

<br />

<div id="UpdateCanvasModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content login-form">

            <!-- Form -->
            <div class="modal-header bg-primary">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Update your Canvas Login Email</h4>
            </div>

            <div class="form-group" style="margin-top:20px">
                <label class="control-label col-lg-3 text-bold">Canvas Login Email<span class="text-danger"></span></label>
                <div class="col-lg-9">
                    <input type="email" value="@Model.CanvasLoginId" name="UpdateCanvasLoginId" id="UpdateCanvasLoginId" maxlength="49" class="form-control" placeholder="Enter a valid Canvas Login email address">
                </div>
            </div>

            <input type="hidden" name="userid" value="@ViewBag.Id" id="userid" />



            <center style="margin-bottom:20px">
                <button style="margin-top:20px" type="button" data-dismiss="modal" class="btn  btn-sm bg-primary">Close</button>
                <a style="margin-top:20px" onclick="UpdateCanvasMail()" id="updatecanvasmaill" class="btn  btn-sm btn-danger">Update</a>


            </center>


            <!-- /form -->

        </div>
    </div>
</div>

<div id="RemoveCanvasMailModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header  bg-primary">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <br />
            </div>
            <div class="modal-body">
                <div class="text-center">
                    <div class="icon-object border-slate-300 text-slate-300"><i class="icon-folder-upload"></i></div>
                    <h5 class="content-group">Are you sure you would like to Remove your Canvas mail?<small class="display-block"></small></h5>
                </div>
            </div>

            <input type="hidden" id="UtaskId" value="-1" />
            <center>
                <button type="button" data-dismiss="modal" class="btn btn-sm  bg-primary">No</button>
                <button type="submit" id="deletecanvasmail" onclick="RemoveCanvasMail()" class="btn btn-sm  btn-danger">Yes</button>
                <br />


            </center>
            <br />

        </div>
    </div>
</div>

<div class="content">



    <div class="panel panel-flat">
        <div class="panel-heading">
            <center>  <h3 class="panel-title"><b>Update Admin Profile</b></h3></center>

            <div class="heading-elements">
                <ul class="icons-list">
                </ul>
            </div>

        </div>
        @if (Model.Id == logedinuser.Id)
        {
            <div class="row">
                <div class="col-lg-12">
                    <div class="col-lg-5"></div>
                    <div class="col-lg-3">
                        <p style="color:red" id="message"></p>
                    </div>
                    <div class="col-lg-2">
                        @*<a onclick="ShowCanvasModal()" id="submitcanvaslogin" style="margin-bottom:-20px;margin-right:10px" class="btn btn-sm  bg-primary pull-right">Update Canvas Mail</a>*@

                    </div>
                    @if (Model.CanvasLoginId != null && Model.CanvasLoginId != "")
                    {
                        <div id="remove" class="col-lg-2">

                            @*<a onclick="RemoveCanvasModal()" id="removecanvaslogin" style="margin-bottom:-20px;margin-right:10px" class="btn btn-sm  bg-danger pull-right">Remove Canvas Mail</a>*@

                        </div>
                    }
                </div>
            </div>
        }
        <div class="panel-body">
            <form class="form-horizontal form-validate-jquery" method="post" onsubmit="return checkvalues()" action="@Url.Action("updateAdminAction", "Utilities")" enctype="multipart/form-data">
                @if (!string.IsNullOrEmpty(company1.Logo))
                {
                    string fileurl = BlobManager.GetBlobSasUri(company1.Logo, logedinuser.Company.ToString());
                <center> <img src="@fileurl" style="width:100px; height:91px" /></center>
                }
            <fieldset class="content-group">
                <legend class="text-bold"><span class="text-danger">*</span> Fields are Mandatory to Fill</legend>


                <div class="form-group">
                    <label class="control-label col-lg-3 text-bold">Company Name <span class="text-danger">*</span></label>

                    <div class="col-lg-9">
                        <input readonly type="text" class="form-control" maxlength="49" placeholder="Company Name" name="CompanyName" value="@ViewBag.companyName" required>
                        <div class="form-control-feedback">

                        </div>
                    </div>
                </div>



                <div class="form-group">
                    <label class="control-label col-lg-3 text-bold">First Name <span class="text-danger">*</span></label>
                    <div class="col-lg-9">
                        <input type="text" value="@Model.FirstName" maxlength="49" name="FirstName" class="form-control" required="required" placeholder="Please enter First Name">
                    </div>
                </div>


                <div class="form-group">
                    <label class="control-label col-lg-3 text-bold">Last Name <span class="text-danger">*</span></label>
                    <div class="col-lg-9">
                        <input type="text" value="@Model.LastName" name="LastName" maxlength="49" class="form-control" required="required" placeholder="Please enter Last Name">
                    </div>
                </div>


                <div class="form-group">
                    <label class="control-label col-lg-3 text-bold">Email field <span class="text-danger">*</span></label>
                    <div class="col-lg-9">
                        <input type="email" onkeyup="vlidate('@Model.Email')" value="@Model.Email" name="email" readonly maxlength="49" class="form-control" id="email" required="required" placeholder="Enter a valid email address">
                    </div>
                </div>
                @{
                    if (Model.CanvasLoginId != "" && Model.CanvasLoginId != null)
                    {
                        @*<div id="canvasmailfield" class="form-group">
                    <label class="control-label col-lg-3 text-bold">Canvas Login Email<span class="text-danger"></span></label>
                    <div class="col-lg-9">
                        <input type="email" value="@Model.CanvasLoginId" name="CanvasLoginId" maxlength="49" readonly class="form-control" placeholder="Enter a valid Canvas Login email address">
                    </div>
                </div>*@
                    }
                }

                <!-- /email field -->
                <!-- Repeat email -->
                <!-- Password field -->
                <div class="form-group">
                    <label class="control-label col-lg-3 text-bold">Password <span class="text-danger">*</span></label>
                    <div class="col-lg-9">
                        <input type="password" value="@Model.Password" pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[$!%*?@("@")/])[A-Za-z\d$!%*?@("@")/]{8,}$" name="password" maxlength="19" id="password" class="form-control" required="required" placeholder="Password">
                        <span style="color:red">Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character($!%*?@("@")/)</span>

                    </div>
                </div>
                <!-- /password field -->
                <!-- Repeat password -->
                <div class="form-group">
                    <label class="control-label col-lg-3 text-bold">Confirm Password <span class="text-danger">*</span></label>
                    <div class="col-lg-9">
                        <input type="password" value="@Model.Password" name="repeat_password" maxlength="19" class="form-control" required="required" placeholder="Confirm Password">
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-lg-3 text-bold">Phone Number <span class="text-danger">*</span></label>
                    <div class="col-lg-9">
                        <input type="text" name="PhoneNumber" required="required" maxlength="19" value="@Model.PhoneNumber" class="form-control" placeholder="Enter Phone Number">
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-lg-3 text-bold">Home Number <span class="text-danger"></span></label>
                    <div class="col-lg-9">
                        <input type="text" name="HomeNumber" value="@Model.HomeNumber" maxlength="19" class="form-control" placeholder="Enter Home Number">
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-lg-3 text-bold">Slack Webhook </label>
                    <div class="col-lg-9">
                        @if (ViewBag.slackwebhook != null)
                        {
                            <input type="text" name="SlackWebhook" value="@ViewBag.slackwebhook" maxlength="249" class="form-control" placeholder="Enter Slack Webhook">

                        }
                        else
                        {
                            <input type="text" name="SlackWebhook" value="" maxlength="249" class="form-control" placeholder="Enter Slack Webhook">


                        }
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-lg-3 text-bold">Slack User Name </label>
                    <div class="col-lg-9">
                        <input type="text" maxlength="150" name="SlackAddress" value="@Model.SlackAddress" class="form-control" placeholder="Enter Your Slack User Name">
                    </div>
                </div>

                <input type="hidden" name="Image" value="@Model.Image" class="form-control" required="required">
                <input type="hidden" name="isActive" value="@Model.IsActive" class="form-control" required="required">
                <input type="hidden" name="Id" value="@Model.Id" class="form-control" required="required">
                <input type="hidden" name="AcessLevel" value="@Model.Role" class="form-control" required="required">
                <input type="hidden" name="GoogleKeyLength" value="@Model.GoogleKeyLength" class="form-control" required="required">
                <input type="hidden" name="CompanyID" value="@Model.CompanyID" class="form-control" required="required">
                <input type="hidden" name="IsMasterAdmin" value="@Model.IsMasterAdmin" class="form-control" required="required">
                @*<input type="hidden" name="OutlookToken" value="@Model.OutlookToken" class="form-control" required="required">*@
                <input type="hidden" name="LowPriorityColor" value="@Model.LowPriorityColor" class="form-control" required="required">
                <input type="hidden" name="MediumPriorityColor" value="@Model.MediumPriorityColor" class="form-control" required="required">
                <input type="hidden" name="HighPriorityColor" value="@Model.HighPriorityColor" class="form-control" required="required">


                <div class="form-group">
                    <label class="control-label col-lg-3 text-bold">Notes</label>
                    <div class="col-lg-9">
                        <textarea rows="5" cols="5" name="Notes" class="form-control" placeholder="Enter Notes">@Model.Notes</textarea>
                    </div>
                </div>
                @if (Model.IsPrimary == 1 && Model.Role==1)
                {
                    <div class="form-group">
                        <label class="control-label col-lg-3 text-bold">Signature: </label>
                        <div class="col-lg-6">

                            <div class="form-group">
                                <div class="radio">
                                    <label style="font-size: 15px;">
                                        <input type="radio" id="UserSign" value="UserSign" name="SignatureFile">
                                        <strong>Write Your Signature</strong>
                                    </label>
                                </div>

                            </div>
                            <div id="userSign" style="display: none;">
                                <div class="form-group">
                                    <label><strong>Sign File:</strong></label>
                                    <div id="divPopUpSignContract">
                                        @*<div data-role="header" data-theme="b">
                                   <a onclick="closeSignPad()"> Close Pad </a>
                                   <p class="popupHeader">Sign Pad</p>
                                </div>*@
                                        <div class="ui-content popUpHeight">
                                            <div id="div_signcontract">
                                                <canvas style="width:558px !important;" id="canvas">Canvas is not supported</canvas>
                                            </div>
                                        </div>
                                    </div>
                                    <span id="errSignSpan" style="display: none; color: red;"></span>
                                    <a onclick="init_Sign_Canvas()" class="btn btn-primary pull-right mr-10">Clear</a>

                                </div>
                                <input id="signedImageUrl" name="SignedImageUrl" type="hidden" />

                                @*<input id="signFileId" name="FileVersionId" type="hidden" />*@

                            </div>

                            <div class="form-group">
                                <div class="radio">
                                    <label style="font-size: 15px;">
                                        <input type="radio" id="SignImage" value="SignImage" name="SignatureFile">
                                        <strong>Upload Your Signature</strong>
                                    </label>
                                </div>
                            </div>

                            <div id="signImage" class="form-group" style="display: none;">
                                <label><strong>Upload your sign image:</strong><span style="color:red">(Height=90px & Width=100px)</span></label>
                                <input type="file" accept=".jpg,.jpeg,.png" id="signedFile" name="signedFile" class="file-styled-primary form-control">
                                <span style="display:none; color:red" id="spanEmployerImage">Image Height and Width must be (90 x 300)px</span>

                            </div>

                        </div>


                        <div class="col-lg-3">
                            <img src="@Model.SignatureImage" class="img-responsive" style="height:90px" />
                            @if (!string.IsNullOrEmpty(Model.SignatureImage))
                            {
                                <input type="hidden" value="@Model.SignatureImage" id="Signature" />
                            }
                        </div>

                    </div>
                }


                <div class="form-group">
                    <label class="control-label col-lg-3 text-bold">Receive Notitfications <span class="text-danger"></span></label>
                    <div class="col-lg-9">
                        <div class="row">
                            @{
                                string sms = "Via Sms   ";
                                string emali = "Via Email   ";
                                string slack = "Via Slack";
                                <div class="col-md-3">
                                    @if (Model.isSMS == 1)
                                    {<p>@sms</p>
                                    <label class="switch">

                                        <input type="checkbox" name="isSMS" value="isSMS" id="isSmss" checked>
                                        <span class="slider round"></span>
                                    </label>
                                }
                                else

                                {<p>@sms</p>
                                <label class="switch">
                                    <input type="checkbox" name="isSMS" value="isSMS" id="isSmss">
                                    <span class="slider round"></span>
                                </label>
                            }
                                </div>
                                <div class="col-md-3">
                                    @if (Model.isMail == 1)
                                    {
                                        <p>@emali</p>
                                        <label class="switch">
                                            <input type="checkbox" name="isMail" value="isMail" id="isMail" checked>
                                            <span class="slider round"></span>
                                        </label>
                                    }
                                    else

                                    {
                                        <p>@emali</p>
                                        <label class="switch">
                                            <input type="checkbox" name="isMail" value="isMail" id="isMail">
                                            <span class="slider round"></span>
                                        </label>
                                    }
                                </div>
                                <div class="col-md-3">
                                    @if (Model.isSlack == 1)
                                    {
                                        <p>@slack</p>
                                        <label class="switch">
                                            <input type="checkbox" name="isSlack" value="isSlack" id="isSlack" checked>
                                            <span class="slider round"></span>
                                        </label>
                                    }
                                    else

                                    {
                                        <p>@slack</p>
                                        <label class="switch">
                                            <input type="checkbox" name="isSlack" value="isSlack" id="isSlack">
                                            <span class="slider round"></span>
                                        </label>
                                    }
                                </div>
                            }

                        </div>
                    </div>
                </div>

                @if (Model.Image == null)
                {
                    <input type="hidden" accept="image/*" name="Image" value="\TrainingTracker\Content\Images\avt.png" class="form-control" required="required">

                }
                else
                { <input type="hidden" accept="image/*" name="Image" value="@Model.Image" class="form-control" required="required">


                }
                <div class="form-group">
                    <label class="control-label col-lg-3 text-bold">Profile Picture &nbsp;&nbsp;<span class="small text-danger">(Max 2 MBs)</span></label>
                    <div class="col-lg-6">
                        <input type="file" onchange="ValidateSizeProfile(this)" accept="image/png,image/jpg,image/jpeg" class="form-control" name="File" id="profilepic" /> <span><b>(png , jpg , jpeg)</b></span>
                        <br />
                        <p class="text-danger" id="errorMessageProfile"></p>
                    </div>
                    @if (Model.Image != null && Model.Image != "")
                    {
                        <div class="col-lg-2">
                            <a class="btn btn-danger btn-sm bg-danger-400" id="btnRemoveFile" onclick="RemoveFile()">Remove Profile Picture</a>
                            <input type="hidden" id="RemoveFile" name="RemoveFile" value="0" />
                        </div>
                    }

                </div>

                @if (Model.IsPrimary == 1 && Model.Role == 1)
                {
            <div class="form-group">
                <label class="control-label col-lg-3 text-bold">Company Logo &nbsp;&nbsp;<span class="small text-danger">(Max 2 MBs)</span></label>
                <div class="col-lg-6">
                    <input type="file" onchange="ValidateSizeProfile(this)" accept="image/png,image/jpg,image/jpeg" class="form-control" name="Logo" id="logopic" /> <span><b>(png , jpg , jpeg)</b></span>
                    <br />
                    <p class="text-danger" id="errorMessageProfile2"></p>
                </div>
                <div class="col-lg-3">
                    @if (!string.IsNullOrEmpty(company1.Logo))
                    {
                        string fileurl = BlobManager.GetBlobSasUri(company1.Logo, logedinuser.Company.ToString());
                         <img src="@fileurl" class="img-responsive" style="width:100px; height:91px" />
                    }
                </div>
               
            </div>
                }



            </fieldset>



                <div class="text-right">
                    <label id="errorDisplay" class="control-label text-danger" hidden> Email already exist in the System!  </label>

                    <button type="submit" id="submit" class="btn btn-sm  bg-primary">Update <i class="icon-arrow-right14 position-right"></i></button>
                </div>
            </form>
        </div>
    </div>
    <!-- /dashboard content -->
    <!-- Scrollable table -->

    <script>
        function checkvalues(v) {
            //if ($("#Signature").val() == "" || $("#Signature").val() == null)
            //if ($("#SignImage").prop('checked') == false && $("#UserSign").prop('checked') == false) {
            //    $("#errorDisplay").show();
            //            $("#errorDisplay").text("Signature type Must be selected");
            //            return false;
            //        }

                    if ($("#UserSign").prop('checked') == true) {
                        if (isSign) {
                            var canvas = $("#canvas").get(0);
                            var imgData = canvas.toDataURL();
                            $('#signedImageUrl').val(imgData);
                            var FileVersionId = $('#signFileId').val();
                            console.log(imgData);
                            console.log(FileVersionId);
                            var file = dataURLtoFile(imgData, 'sign.png');
                            $('#signedImageData').val(file.name);
                            console.log(file);
                            //   $('#signFileForm').submit();
                            return true;
                        }
                        else {
                            $('#errSignSpan').text("Sign cannot be empty!");
                            $('#errSignSpan').show().delay(4000).fadeOut();
                            return false;
                        }
                    }
                


        }
    </script>

    <div class="panel panel-flat">
        <div class="panel-heading">
            <center><h3 class="panel-title">Document</h3></center>
            <div class="heading-elements">
                <ul class="icons-list">

                    <li>  <button type="button" class="btn  btn-sm bg-primary btn-block" data-toggle="modal" data-target="#modal-login"><i class=" icon-add"></i>  Add Document</button></li>

                </ul>
            </div>
        </div>

        <div class="panel-body">
            <h4>List of  Added Document</h4>


            <div class="">
                <table class="table datatable-button-html5-basic">
                    <thead>
                        <tr>
                            <th>Sr#</th>
                            <th>File Name</th>
                            <th>File Upload Date</th>
                            <th>Link</th>

                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int i = 0;
                            foreach (var item in Model.Certificates.Where(ss => ss.IsActive == 1))
                            {
                                i++;
                                <tr>
                                    <td>@i</td>
                                    <td>@item.Name</td>
                                    <td>@item.CreatedAt</td>
                                    <td>
                                        <a class="btn btn-sm  bg-secondary" href="@Url.Action("download","Trainee", new {filePath=item.Path,name=item.Name })">Download</a>
                                        <a class="btn btn-sm  bg-danger" href="@Url.Action("deleteFile","Trainee", new {id=item.Id,way="self",userId=Model.Id })">Delete</a>
                                    </td>

                                </tr>

                            }
                        }


                    </tbody>
                </table>
            </div>
        </div>
    </div>
    @if (company1.IsLMS == 1 && logedinuser.Role==1)
    {
        <div class="panel panel-flat">
            <div class="panel-heading">
                <center><h3 class="panel-title">LMS Completed Courses</h3></center>
                <div class="heading-elements">
                    <ul class="icons-list">

                        <li>  @*<button type="button" class="btn  btn-sm bg-primary btn-block" data-toggle="modal" data-target="#modal-login"><i class=" icon-add"></i>  Add Document</button>*@</li>

                    </ul>
                </div>
            </div>

            <div class="panel-body">
                <h4>List of  Completed Courses</h4>


                <div class="">
                    <table class="table datatable-button-html5-basic table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>Sr#</th>
                                <th>Course Name</th>
                                <th>Task Name</th>
                                <th>Assigned To</th>
                                <th>Assigned By</th>
                                <th>Date Issued</th>
                                <th>Status</th>
                                <th>Action</th>

                            </tr>
                        </thead>
                        <tbody>
                            @{
                                int c = 0;
                                List<Course_UserTask> List = new Course_UserTaskBL().getCourse_UserTaskList().Where(x => x.User_Task.UserID == Model.Id && x.ResultStatus==1).ToList();
                                foreach (Course_UserTask item in List.OrderByDescending(y=>y.CompletedAt))
                                {
                                    Course cou = new CourseBL().getCourseById((int)item.CourseID);
                                    if (cou.CreateCertificate != 1)
                                    {
                                        continue;
                                    }
                                    c++;
                                    User us = new UserBL().getUsersById((int)item.User_Task.UserID);
                                    User_Task ut = new User_TaskBL().getUser_TasksById((int)item.User_TaskID);
                                    Course course = new CourseBL().getCourseById((int)item.CourseID);
                                    if(ut==null || course.IsActive == 0)
                                    {
                                        continue;
                                    }
                                    if (ut.IsActive == 0)
                                    {
                                        continue;
                                    }
                                    string assinto = us.FirstName + " " + us.LastName;
                                    string assinby = "";
                                    User us1 = new User();
                                    if (ut.CreatedID.HasValue)
                                    {
                                        us1 = new UserBL().getUsersById((int)ut.CreatedID);
                                        assinby = us1.FirstName + " " + us1.LastName;

                                    }
                                    else
                                    {
                                        us1 = new UserBL().getUsersById(us.Id);
                                        assinby = "Self Assigned";

                                    }


                                                        <tr>
                                                            <td>@c</td>
                                                            <td>@course.Name</td>
                                                            <td>@ut.Task.Name</td>
                                                            <td>@assinto</td>
                                                            <td>@assinby</td>
                                                            <td>@item.CompletedAt.Value.ToString("MM/dd/yyyy")</td>

                                                            @if (item.ResultStatus == 1)
                                                            {
                                                                <td style="color:green">PASS</td>

                                                            }
                                                            else if (item.ResultStatus == 0)
                                                            {
                                                                <td style="color:red">FAIL</td>

                                                            }
                                                            else
                                                            {
                                                                <td></td>
                                                            }
                                                            <td><a href="@Url.Action("CourseCompletionCertificatePdf","ExportReport" , new { CutId=General_Purpose.EncryptId(item.Id) })" class="btn bg-primary btn-sm">Certificate&nbsp;<i title="Download Certificate" class="icon icon-download"></i></a></td>
                                                        </tr>
                                }
                            }



                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>


<!-- /content area -->
<div id="modal-login" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content login-form">

            <!-- Form -->
            <form class="modal-body" method="post" action="@Url.Action("uploadFile","Trainee",new { way=ViewBag.way})" enctype="multipart/form-data">
                <div class="text-center">
                    <div class="icon-object border-slate-300 text-slate-300"><i class="icon-folder-upload"></i></div>
                    <h5 class="content-group">Upload Document <small class="display-block"></small></h5>
                </div>

                <div class="form-group has-feedback has-feedback-left">
                    <input type="text" class="form-control" name="name" maxlength="150" placeholder="Name of Document" required>
                    <div class="form-control-feedback">
                        <i class="icon-file text-muted"></i>
                    </div>
                </div>

                <div class="form-group has-feedback has-feedback-left">
                    <input type="file" name="file123" class="file-styled" required>

                </div>
                <input type="hidden" name="UserId" value="@Model.Id" />
                <div class="form-group">
                    <label id="errorDisplay" class="control-label text-danger" hidden> Email already exist in the System!  </label>

                    <button type="submit" id="submit" class="btn btn-sm bg-primary btn-block">Upload <i class="icon-arrow-right14 position-right"></i></button>
                </div>



            </form>
            @*<div class="progress">
                    <div class="bar"></div>
                    <div class="percent">0%</div>
                </div>*@
            <!-- /form -->

        </div>
    </div>
</div>

<script type="text/javascript">

    // $("#fileSignatureModal").modal("show");

    $('input:radio[name="SignatureFile"]').change(function () {
        if ($(this).is(':checked') && $(this).val() == 'UserSign') {
            $("#signedFile").attr("required", false);
            $('#userSign').show();
            $('#signImage').hide();
            $('#userSignFooter').show();
            $('#signImageFooter').hide();
        }
        else {
            $("#signedFile").attr("required", true);
            $('#userSign').hide();
            $('#signImage').show();
            $('#userSignFooter').hide();
            $('#signImageFooter').show();
        }
    });

    var isSign = false;
    var leftMButtonDown = false;
    jQuery(function () {
        //Initialize sign pad
        init_Sign_Canvas();
    });
    function openSignPad() {
        $('#divPopUpSignContract').show();
    }
    function closeSignPad() {
        $('#divPopUpSignContract').hide();
    }
    function openSignImage() {
        $('#page').show();
    }
    function closeSignImage() {
        $('#page').hide();
    }
    function dataURLtoFile(dataurl, filename) {
        var arr = dataurl.split(','),
            mime = arr[0].match(/:(.*?);/)[1],
            bstr = atob(arr[1]),
            n = bstr.length,
            u8arr = new Uint8Array(n);
        while (n--) {
            u8arr[n] = bstr.charCodeAt(n);
        }
        return new File([u8arr], filename, { type: mime });
    }
    function fun_submit() {
        if ($("#isCertificate").prop('checked') == true) {


            if (isSign) {
                var canvas = $("#canvas").get(0);
                var imgData = canvas.toDataURL();
                $('#signedImageUrl').val(imgData);
                var FileVersionId = $('#signFileId').val();
                console.log(imgData);
                console.log(FileVersionId);
                var file = dataURLtoFile(imgData, 'sign.png');
                $('#signedImageData').val(file.name);
                console.log(file);
                $('#signFileForm').submit();
            }
            else {
                $('#errSignSpan').text("Sign cannot be empty!");
                $('#errSignSpan').show().delay(4000).fadeOut();
            }
        }
    }
    function closePopUp() {
        jQuery('#divPopUpSignContract').popup('close');
        jQuery('#divPopUpSignContract').popup('close');
    }
    function init_Sign_Canvas() {
        isSign = false;
        leftMButtonDown = false;
        $("#canvas").width(558);
        $("#canvas").height(200);
        $("#canvas").css("border", "1px solid #000");
        var canvas = $("#canvas").get(0);
        canvasContext = canvas.getContext('2d');
        if (canvasContext) {
            canvasContext.canvas.width = 558; //sizedWindowWidth;
            canvasContext.canvas.height = 200;
            canvasContext.fillStyle = "#fff";
            canvasContext.fillRect(0, 0, 558, 200);
            canvasContext.moveTo(50, 150);
            canvasContext.lineTo(558 - 50, 150);
            canvasContext.stroke();
            canvasContext.fillStyle = "#000";
            canvasContext.font = "20px Arial";
            canvasContext.fillText("x", 40, 155);
        }
        // Bind Mouse events
        $(canvas).on('mousedown', function (e) {
            if (e.which === 1) {
                leftMButtonDown = true;
                canvasContext.fillStyle = "#000";
                var x = e.pageX - $(e.target).offset().left;
                var y = e.pageY - $(e.target).offset().top;
                canvasContext.moveTo(x, y);
            }
            e.preventDefault();
            return false;
        });
        $(canvas).on('mouseup', function (e) {
            if (leftMButtonDown && e.which === 1) {
                leftMButtonDown = false;
                isSign = true;
            }
            e.preventDefault();
            return false;
        });
        // draw a line from the last point to this one
        $(canvas).on('mousemove', function (e) {
            if (leftMButtonDown == true) {
                canvasContext.fillStyle = "#000";
                var x = e.pageX - $(e.target).offset().left;
                var y = e.pageY - $(e.target).offset().top;
                canvasContext.lineTo(x, y);
                canvasContext.stroke();
            }
            e.preventDefault();
            return false;
        });
        //bind touch events
        $(canvas).on('touchstart', function (e) {
            leftMButtonDown = true;
            canvasContext.fillStyle = "#000";
            var t = e.originalEvent.touches[0];
            var x = t.pageX - $(e.target).offset().left;
            var y = t.pageY - $(e.target).offset().top;
            canvasContext.moveTo(x, y);
            e.preventDefault();
            return false;
        });
        $(canvas).on('touchmove', function (e) {
            canvasContext.fillStyle = "#000";
            var t = e.originalEvent.touches[0];
            var x = t.pageX - $(e.target).offset().left;
            var y = t.pageY - $(e.target).offset().top;
            canvasContext.lineTo(x, y);
            canvasContext.stroke();
            e.preventDefault();
            return false;
        });
        $(canvas).on('touchend', function (e) {
            if (leftMButtonDown) {
                leftMButtonDown = false;
                isSign = true;
            }
        });
    }
</script>

<script type="text/javascript">

    $("#profilepic").change(function () {
        var fileExtension = ['jpeg', 'jpg', 'png'];
        if ($.inArray($(this).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
            alert("Only formats are allowed : "+fileExtension.join(', '));
        }
    });

    $("#logopic").change(function () {
        var fileExtension = ['jpeg', 'jpg', 'png'];
        if ($.inArray($(this).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
            alert("Only formats are allowed : " + fileExtension.join(', '));
        }
    });


    function RemoveFile()
    {
        $('#RemoveFile').val(1);
        $('#btnRemoveFile').attr("disabled", true);


    }
    function RemoveSignature() {
        $('#RemoveSignature').val(1);
        $('#btnRemoveSignature').attr("disabled", true);


    }
    function ShowCanvasModal()
    {
         $('#UpdateCanvasModal').modal("show");

    }
    function RemoveCanvasModal()
    {
         $('#RemoveCanvasMailModal').modal("show");

    }
    function UpdateCanvasMail()
    {
        $("#updatecanvasmaill").attr("disabled", true);
        var userid = $("#userid").val();
        var UpdateCanvasLoginId = $("#UpdateCanvasLoginId").val();
            $.ajax({
            type: 'POST',
            url: "../utilities/UpdateCanvasLoginId",
            data: {
                Id: userid,
                CanvasMail:UpdateCanvasLoginId,
            },
            dataType: "json",
            success: function (data) {


                $('#UpdateCanvasModal').modal("hide");
                $("#updatecanvasmaill").attr("disabled", false);

                    $("#message").text("Email has been sent to your Canvas Mail. Please confirm to Update. ");


            },
            error: function () { alert('error'); }
        });
    }

        function RemoveCanvasMail()
        {
        $("#deletecanvasmail").attr("disabled", true);

       // var userid = $("#userid").val();
       // var UpdateCanvasLoginId = $("#UpdateCanvasLoginId").val();
            $.ajax({
            type: 'POST',
            url: "../utilities/RemoveCanvasLoginId",
            data: {
                //Id: userid,
               // CanvasMail:UpdateCanvasLoginId,
            },
            dataType: "json",
            success: function (data) {


                $('#RemoveCanvasMailModal').modal("hide");
                $("#deletecanvasmail").attr("disabled", false);
                $("#canvasmailfield").hide();
                $("#remove").hide();

                    $("#message").text("Canvas mail has been removed");


            },
            error: function () { alert('error'); }
        });
    }

        function validatepassword() {
            if (document.getElementById("password").value != document.getElementById("confirm_password").value) {
                document.getElementById("submit").disabled = true;
                $('#displayerror').show();
            }
            else {
                document.getElementById("submit").disabled = false;
                $('#displayerror').hide();

            }
    }

        function validatepassword() {
            if (document.getElementById("password").value != document.getElementById("confirm_password").value) {
                document.getElementById("submit").disabled = true;
                $('#displayerror').show();
            }
            else {
                document.getElementById("submit").disabled = false;
                $('#displayerror').hide();

            }

            vlidate();
        }

         function vlidate(orignalEmail) {

             var title = $('#email').val();
             if (title == orignalEmail) {
                 $('#errorDisplay').hide();
                 $('#submit').attr('disabled', false)
             }
             else {
                 $.ajax({

                     type: 'POST',
                     url: '@Url.Action("SignUpemailValidation", "Utilities")',
                     timeout: 100000000,
                     data: { _data: title },
                     dataType: "json",
                     success: function (json) {

                         if (json == 0) {
                             $('#errorDisplay').hide();
                             $('#submit').attr('disabled', false)
                         }
                         else {
                             $('#errorDisplay').show();
                             $('#submit').attr('disabled', true)

                         }

                     },
                     error: function (data) {

                         $('.loading3').hide();
                         $('#curvechart_error').show();
                         $('#curve_chart').hide();
                     }
                 });
             }
   }

</script>

<script>
    function ValidateSizeProfile(file) {
        var FileSize = file.files[0].size / 1024 / 1024; // in MB
        if (FileSize > 2) {
            $('#errorMessageProfile').text('File size exceeds 2 MBs');

            $('#submit').attr("disabled", true);
        } else {
            $('#errorMessageProfile').text('');

            $('#submit').attr("disabled", false);
        }
    }

    var _URL = window.URL || window.webkitURL;
    $("#signedFile").change(function (e) {
        var file, img;
        if ((file = this.files[0])) {
            img = new Image();
            var objectUrl = _URL.createObjectURL(file);
            img.onload = function () {
                
                if (this.width > 300 || this.height > 90) {
                    alert( "Image Height and Width must be (90X300)px \n This Image Size is: Width= "+this.width + " And Height= " + this.height);
                    $("#spanEmployerImage").show();
                } else {
                    $("#spanEmployerImage").hide();
                }
                _URL.revokeObjectURL(objectUrl);
            };
            img.src = objectUrl;
        }
    });
    $("#logopic").change(function (e) {
        var file, img;
        if ((file = this.files[0])) {
            img = new Image();
            var objectUrl = _URL.createObjectURL(file);
            img.onload = function () {
                
                if (this.width > 100 || this.height > 91) {
                    alert( "Image Height and Width must be (90X100)px \n This Image Size is: Width= "+this.width + " And Height= " + this.height);
                    $('#errorMessageProfile2').text('Image Height and Width must be (90X100)px ');

                } else {
                    $('#errorMessageProfile2').text('');
                }
                _URL.revokeObjectURL(objectUrl);
            };
            img.src = objectUrl;
        }
    });
</script>